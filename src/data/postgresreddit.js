module.exports = {
  kind: 'Listing',
  data: {
    after: 't3_8gx9dw',
    dist: 100,
    facets: {},
    modhash: '',
    children: [
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'node',
          selftext:
            "From what I've read almost everyone seems to use mongodb with NodeJS. Why not MySQL or PostgreSQL ?",
          author_fullname: 't2_1264cqs',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Why do so many people use MongoDB with NodeJS ?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/node',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_alky4r',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 88,
          domain: 'self.node',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 88,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548903263,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;From what I&amp;#39;ve read almost everyone seems to use mongodb with NodeJS. Why not MySQL or PostgreSQL ?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2reca',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'alky4r',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'JackTheTradesman',
          num_crossposts: 0,
          num_comments: 167,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/node/comments/alky4r/why_do_so_many_people_use_mongodb_with_nodejs/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/node/comments/alky4r/why_do_so_many_people_use_mongodb_with_nodejs/',
          subreddit_subscribers: 109433,
          created_utc: 1548903263,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Hi, \n\nI have a background in SQL server and T-SQL, mainly for querying and reporting purposes with a certification in querying using T-SQL. I have an interview coming up for role that uses PostgreSQL and PowerBI. What resources/things would you recommend I know/read?\n\nThanks in Advance\n\nR',
          author_fullname: 't2_edzj0',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Coming from SQL Server',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ay7tw5',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 11,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 11,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551928272,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, &lt;/p&gt;\n\n&lt;p&gt;I have a background in SQL server and T-SQL, mainly for querying and reporting purposes with a certification in querying using T-SQL. I have an interview coming up for role that uses PostgreSQL and PowerBI. What resources/things would you recommend I know/read?&lt;/p&gt;\n\n&lt;p&gt;Thanks in Advance&lt;/p&gt;\n\n&lt;p&gt;R&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ay7tw5',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'robertnpmk',
          num_crossposts: 0,
          num_comments: 21,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/PostgreSQL/comments/ay7tw5/coming_from_sql_server/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/ay7tw5/coming_from_sql_server/',
          subreddit_subscribers: 9388,
          created_utc: 1551928272,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'Terraform',
          selftext:
            'Trying to do a fully automated build out of Private Terraform Enterprise on AWS. Running into the issues with configuring PostgreSQL Schema. I created a thread on StackOverflow thread with no luck. Trying it out here.\n\n&amp;#x200B;\n\nOriginal Post : [https://stackoverflow.com/questions/54976676/issues-configuring-postgresql-schema-via-terraform-null-resource](https://stackoverflow.com/questions/54976676/issues-configuring-postgresql-schema-via-terraform-null-resource)\n\n\\-----------------\n\n&amp;#x200B;\n\nBLUF: I need to be able to add SCHEMAs to PostgreSQL 10.4 RDS DB instance via terraform in a fully automated way. \n\n&amp;#x200B;\n\n&amp;#x200B;\n\nI am trying to do a fully automated install of Private Terraform Enterprise (PTFE). The deployment guide calls for a PostgreSQL v9.4 or newer. This deployment is on AWS, so I have chosen to deploy psql via RDS. RDS currently only has version 10.5 at this time.\n\n&amp;#x200B;\n\nI have no experience with psql and limited experience with bash. I attempted to use terraform\'s "Null Resource" and run a local provisioner to execute a few commands. See Below:\n\n&amp;#x200B;\n\n\\`\\`\\`\n\n`resource "null_resource" "db_setup" {`\n\n  `depends_on = ["aws_db_instance.pes", "aws_security_group.db_main", "random_pet.db-pwd"]`\n\n&amp;#x200B;\n\n`provisioner "local-exec" {`\n\n`command = &lt;&lt;-EOF`\n\n`ssh -i \'~/example.pem\' ubuntu@${var.ec2_instance}`\n\n`sudo apt-get -y install postgresql` \n\n`psql --host=${aws_db_instance.pes.address} --port=5432 --username=example_username --dbname=example_name -c \'CREATE SCHEMA rails;\' -c \'CREATE SCHEMA vault;\' -c \'CREATE SCHEMA registry;\'` \n\n`EOF`\n\n&amp;#x200B;\n\n`environment {`\n\n`PGPASSWORD = "${random_pet.db-pwd.id}"`\n\n`}`\n\n`}`\n\n`}`\n\n\\`\\`\\`\n\n&amp;#x200B;\n\nWhen I run this in my "terraform apply" the DB and all other resources correctly build. When the terraform goes to execute the null resource "db-setup" it looks like it\'s not passing the password when prompted and also getting a \\_"Pseudo-terminal will not be allocated because stdin is not a terminal."\\_\n\n&amp;#x200B;\n\n`\\`\\`\\``\n\n`module.pes.null_resource.db_setup: Creating...`\n\n`module.pes.null_resource.db_setup: Provisioning with \'local-exec\'...`\n\n`module.pes.null_resource.db_setup (local-exec): Executing: ["/bin/sh" "-c" "ssh -i \'~/example.pem\' ubuntu@&lt;redacted&gt;\\nsudo apt-get -y install postgresql \\npsql --host=&lt;redacted&gt; --port=5432 --username=example_username --dbname=example_name -c \'CREATE SCHEMA rails;\' -c \'CREATE SCHEMA vault;\' -c \'CREATE SCHEMA registry;\' \\n"]`\n\n`module.pes.null_resource.db_setup (local-exec): Pseudo-terminal will not be allocated because stdin is not a terminal.`\n\n`module.pes.null_resource.db_setup (local-exec): Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-1032-aws x86_64)`\n\n&amp;#x200B;\n\n`module.pes.null_resource.db_setup (local-exec):  * Documentation:`  [`https://help.ubuntu.com`](https://help.ubuntu.com)\n\n`module.pes.null_resource.db_setup (local-exec):  * Management:`     [`https://landscape.canonical.com`](https://landscape.canonical.com)\n\n`module.pes.null_resource.db_setup (local-exec):  * Support:`        [`https://ubuntu.com/advantage`](https://ubuntu.com/advantage)\n\n`......`\n\n&amp;#x200B;\n\n`Password:module.pes.null_resource.db_setup: Still creating... (10s elapsed)`\n\n`\\`\\`\\``\n\n&amp;#x200B;\n\nAs you can see above, it shows the Password prompt you would normally see when you run the command. The creation will eventually timeout. I have tested the command string manually via the instance that I am running the command on and it is successful. I variables that are getting interpolated are correct, and the password generation works. I am thinking that there is something wrong with the "local-exec" not passing the PGPASSWORD.  \n\n&amp;#x200B;\n\nOS: Ubuntu 18.04\n\nPostreSQL: 10.4\n\n&amp;#x200B;\n\nI am open to any ideas to get this automated via terraform and working. Thanks in advance.',
          author_fullname: 't2_3cu8rzqd',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Issues configuring PostgreSQL Schema via Terraform Null Resource',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/Terraform',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_axzpa6',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.Terraform',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551884274,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Trying to do a fully automated build out of Private Terraform Enterprise on AWS. Running into the issues with configuring PostgreSQL Schema. I created a thread on StackOverflow thread with no luck. Trying it out here.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Original Post : &lt;a href="https://stackoverflow.com/questions/54976676/issues-configuring-postgresql-schema-via-terraform-null-resource"&gt;https://stackoverflow.com/questions/54976676/issues-configuring-postgresql-schema-via-terraform-null-resource&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;-----------------&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;BLUF: I need to be able to add SCHEMAs to PostgreSQL 10.4 RDS DB instance via terraform in a fully automated way. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I am trying to do a fully automated install of Private Terraform Enterprise (PTFE). The deployment guide calls for a PostgreSQL v9.4 or newer. This deployment is on AWS, so I have chosen to deploy psql via RDS. RDS currently only has version 10.5 at this time.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I have no experience with psql and limited experience with bash. I attempted to use terraform&amp;#39;s &amp;quot;Null Resource&amp;quot; and run a local provisioner to execute a few commands. See Below:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;resource &amp;quot;null_resource&amp;quot; &amp;quot;db_setup&amp;quot; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;depends_on = [&amp;quot;aws_db_instance.pes&amp;quot;, &amp;quot;aws_security_group.db_main&amp;quot;, &amp;quot;random_pet.db-pwd&amp;quot;]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;provisioner &amp;quot;local-exec&amp;quot; {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;command = &amp;lt;&amp;lt;-EOF&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;ssh -i &amp;#39;~/example.pem&amp;#39; ubuntu@${var.ec2_instance}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sudo apt-get -y install postgresql&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;psql --host=${aws_db_instance.pes.address} --port=5432 --username=example_username --dbname=example_name -c &amp;#39;CREATE SCHEMA rails;&amp;#39; -c &amp;#39;CREATE SCHEMA vault;&amp;#39; -c &amp;#39;CREATE SCHEMA registry;&amp;#39;&lt;/code&gt; &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;EOF&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;environment {&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;PGPASSWORD = &amp;quot;${random_pet.db-pwd.id}&amp;quot;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;}&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;When I run this in my &amp;quot;terraform apply&amp;quot; the DB and all other resources correctly build. When the terraform goes to execute the null resource &amp;quot;db-setup&amp;quot; it looks like it&amp;#39;s not passing the password when prompted and also getting a _&amp;quot;Pseudo-terminal will not be allocated because stdin is not a terminal.&amp;quot;_&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\\&lt;/code&gt;```&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup: Creating...&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup: Provisioning with &amp;#39;local-exec&amp;#39;...&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec): Executing: [&amp;quot;/bin/sh&amp;quot; &amp;quot;-c&amp;quot; &amp;quot;ssh -i &amp;#39;~/example.pem&amp;#39; ubuntu@&amp;lt;redacted&amp;gt;\\nsudo apt-get -y install postgresql \\npsql --host=&amp;lt;redacted&amp;gt; --port=5432 --username=example_username --dbname=example_name -c &amp;#39;CREATE SCHEMA rails;&amp;#39; -c &amp;#39;CREATE SCHEMA vault;&amp;#39; -c &amp;#39;CREATE SCHEMA registry;&amp;#39; \\n&amp;quot;]&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec): Pseudo-terminal will not be allocated because stdin is not a terminal.&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec): Welcome to Ubuntu 18.04.1 LTS (GNU/Linux 4.15.0-1032-aws x86_64)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec):  * Documentation:&lt;/code&gt;  &lt;a href="https://help.ubuntu.com"&gt;&lt;code&gt;https://help.ubuntu.com&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec):  * Management:&lt;/code&gt;     &lt;a href="https://landscape.canonical.com"&gt;&lt;code&gt;https://landscape.canonical.com&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;module.pes.null_resource.db_setup (local-exec):  * Support:&lt;/code&gt;        &lt;a href="https://ubuntu.com/advantage"&gt;&lt;code&gt;https://ubuntu.com/advantage&lt;/code&gt;&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;......&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Password:module.pes.null_resource.db_setup: Still creating... (10s elapsed)&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;\\&lt;/code&gt;```&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;As you can see above, it shows the Password prompt you would normally see when you run the command. The creation will eventually timeout. I have tested the command string manually via the instance that I am running the command on and it is successful. I variables that are getting interpolated are correct, and the password generation works. I am thinking that there is something wrong with the &amp;quot;local-exec&amp;quot; not passing the PGPASSWORD.  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;OS: Ubuntu 18.04&lt;/p&gt;\n\n&lt;p&gt;PostreSQL: 10.4&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I am open to any ideas to get this automated via terraform and working. Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?auto=webp&amp;s=a70d21ce9f01f64670d2200ca9fc3f39b94a7e48',
                  width: 316,
                  height: 316
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0aad06750c23b98c9b7595343a8b54a42dc18851',
                    width: 108,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b66126834977e269be586d07464046049ed09138',
                    width: 216,
                    height: 216
                  }
                ],
                variants: {},
                id: 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2u8e4',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'axzpa6',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'TylerXVII',
          num_crossposts: 0,
          num_comments: 6,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/Terraform/comments/axzpa6/issues_configuring_postgresql_schema_via/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/Terraform/comments/axzpa6/issues_configuring_postgresql_schema_via/',
          subreddit_subscribers: 3780,
          created_utc: 1551884274,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'grafana',
          selftext:
            'Hello Reddit,\n\nI want to display temperature data from my house into a Grafana Dashboard. I am using a PostgreSQL 11.2 database.\n\nLets assume I have 5 temperature probes logging data. All data is received at the same time (buffered). I could log this in rows:\n\n|timestamp|name|temperature (C)|\n|:-|:-|:-|\n|1552473346|room1|23|\n|1552473346|room2|20|\n|1552473346|hallway|21|\n|1552473346|basement|10|\n|1552473346|sauna|30|\n|1552473400|room1|24|\n|1552473400|room2|20|\n|1552473400|hallway|22|\n|1552473400|basement|8|\n|1552473400|sauna|31|\n\nOr I could parse it all into JSON and store it as JSON in the Database:\n\n    {\n      "probes": [\n        {\n          "name": "room1",\n          "temp": 23\n        },\n        {\n          "name": "room2",\n          "temp": 20\n        },\n        {\n          "name": "hallway",\n          "temp": 21\n        },\n        {\n          "name": "basement",\n          "temp": 10\n        },\n        {\n          "name": "sauna",\n          "temp": 30\n        }\n      ]\n    }\n\n|timestamp|json|\n|:-|:-|\n|1552473346|{"probes":\\[{"name":"room1","temp":23},{"name":"ro...|\n|1552473400|{"probes":\\[{"name":"room1","temp":24},{"name":"ro...|\n\n* Would Grafana accept the JSON?\n* What would happen if I added a 6th probe?\n* Am I missing a method (Arrays?)',
          author_fullname: 't2_mq58p',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[PostgreSQL] - variable length sensor data - Save as single JSON or multiple rows?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/grafana',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b0kmlw',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.grafana',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: 1552478266,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552474687,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello Reddit,&lt;/p&gt;\n\n&lt;p&gt;I want to display temperature data from my house into a Grafana Dashboard. I am using a PostgreSQL 11.2 database.&lt;/p&gt;\n\n&lt;p&gt;Lets assume I have 5 temperature probes logging data. All data is received at the same time (buffered). I could log this in rows:&lt;/p&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th align="left"&gt;timestamp&lt;/th&gt;\n&lt;th align="left"&gt;name&lt;/th&gt;\n&lt;th align="left"&gt;temperature (C)&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;room1&lt;/td&gt;\n&lt;td align="left"&gt;23&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;room2&lt;/td&gt;\n&lt;td align="left"&gt;20&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;hallway&lt;/td&gt;\n&lt;td align="left"&gt;21&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;basement&lt;/td&gt;\n&lt;td align="left"&gt;10&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;sauna&lt;/td&gt;\n&lt;td align="left"&gt;30&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;room1&lt;/td&gt;\n&lt;td align="left"&gt;24&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;room2&lt;/td&gt;\n&lt;td align="left"&gt;20&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;hallway&lt;/td&gt;\n&lt;td align="left"&gt;22&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;basement&lt;/td&gt;\n&lt;td align="left"&gt;8&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;sauna&lt;/td&gt;\n&lt;td align="left"&gt;31&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;p&gt;Or I could parse it all into JSON and store it as JSON in the Database:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;{\n  &amp;quot;probes&amp;quot;: [\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;room1&amp;quot;,\n      &amp;quot;temp&amp;quot;: 23\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;room2&amp;quot;,\n      &amp;quot;temp&amp;quot;: 20\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;hallway&amp;quot;,\n      &amp;quot;temp&amp;quot;: 21\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;basement&amp;quot;,\n      &amp;quot;temp&amp;quot;: 10\n    },\n    {\n      &amp;quot;name&amp;quot;: &amp;quot;sauna&amp;quot;,\n      &amp;quot;temp&amp;quot;: 30\n    }\n  ]\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;table&gt;&lt;thead&gt;\n&lt;tr&gt;\n&lt;th align="left"&gt;timestamp&lt;/th&gt;\n&lt;th align="left"&gt;json&lt;/th&gt;\n&lt;/tr&gt;\n&lt;/thead&gt;&lt;tbody&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473346&lt;/td&gt;\n&lt;td align="left"&gt;{&amp;quot;probes&amp;quot;:[{&amp;quot;name&amp;quot;:&amp;quot;room1&amp;quot;,&amp;quot;temp&amp;quot;:23},{&amp;quot;name&amp;quot;:&amp;quot;ro...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td align="left"&gt;1552473400&lt;/td&gt;\n&lt;td align="left"&gt;{&amp;quot;probes&amp;quot;:[{&amp;quot;name&amp;quot;:&amp;quot;room1&amp;quot;,&amp;quot;temp&amp;quot;:24},{&amp;quot;name&amp;quot;:&amp;quot;ro...&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/tbody&gt;&lt;/table&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Would Grafana accept the JSON?&lt;/li&gt;\n&lt;li&gt;What would happen if I added a 6th probe?&lt;/li&gt;\n&lt;li&gt;Am I missing a method (Arrays?)&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_39cr8',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b0kmlw',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'FunDeckHermit',
          num_crossposts: 1,
          num_comments: 5,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/grafana/comments/b0kmlw/postgresql_variable_length_sensor_data_save_as/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/grafana/comments/b0kmlw/postgresql_variable_length_sensor_data_save_as/',
          subreddit_subscribers: 1527,
          created_utc: 1552474687,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            "Part 4 asks to  Set  the SECRET\\_KEY environment variable.  Is this the option in the setting with the default \"os.environ.get('SECRET\\_KEY')\"? Do I simply replace this with a  string of my choice?\n\n&amp;#x200B;\n\nPart 5 asks to Create a PostgreSQL user using the pgAdmin tool. No where in this web app do I find this option. I can run the database  with the password I provided at installation, but not sure what to do next. \n\n&amp;#x200B;\n\n Part 6 asks to Create a PostgreSQL database. Although there is already one set up upon installation. Again nowhere does it say how to do that. \n\n&amp;#x200B;\n\nIf anyone can shed light on these I would really appreciate it. \n\n&amp;#x200B;\n\nIs PostgreSQL an alternative to sqlite? I'm not sure I understand why we have to do these steps.\n\n&amp;#x200B;\n\nThank you very much. \n\n&amp;#x200B;",
          author_fullname: 't2_j3xsz',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            "Can someone please explain part one of the Saleor documentation? I can't find information anywhere.",
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b063ny',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552385761,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Part 4 asks to  Set  the SECRET_KEY environment variable.  Is this the option in the setting with the default &amp;quot;os.environ.get(&amp;#39;SECRET_KEY&amp;#39;)&amp;quot;? Do I simply replace this with a  string of my choice?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part 5 asks to Create a PostgreSQL user using the pgAdmin tool. No where in this web app do I find this option. I can run the database  with the password I provided at installation, but not sure what to do next. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Part 6 asks to Create a PostgreSQL database. Although there is already one set up upon installation. Again nowhere does it say how to do that. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If anyone can shed light on these I would really appreciate it. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Is PostgreSQL an alternative to sqlite? I&amp;#39;m not sure I understand why we have to do these steps.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thank you very much. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b063ny',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'rb95',
          num_crossposts: 0,
          num_comments: 3,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/b063ny/can_someone_please_explain_part_one_of_the_saleor/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/b063ny/can_someone_please_explain_part_one_of_the_saleor/',
          subreddit_subscribers: 48849,
          created_utc: 1552385761,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'I’ve released the first version of pgAdmin3 Redux which adds support to PostgreSQL 10 and 11 in the original pgAdmin3. There’s been a lot of people asking for it and I finally had the time to tackle it. \n\nIf you want it, hop on to https://tokavuh.com/pgAdmin3Redux/ and grab it. \n\nNote it still has issues due to wxWidgets version so it may throw some debug errors/warnings at you, but if any other issues arise report them and I’ll try to get them sorted out. ',
          author_fullname: 't2_9q9n3',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'pgAdmin3 Redux with support for PostgreSQL 10 and 11 released',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b6ugax',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 23,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 23,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553845990,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve released the first version of pgAdmin3 Redux which adds support to PostgreSQL 10 and 11 in the original pgAdmin3. There’s been a lot of people asking for it and I finally had the time to tackle it. &lt;/p&gt;\n\n&lt;p&gt;If you want it, hop on to &lt;a href="https://tokavuh.com/pgAdmin3Redux/"&gt;https://tokavuh.com/pgAdmin3Redux/&lt;/a&gt; and grab it. &lt;/p&gt;\n\n&lt;p&gt;Note it still has issues due to wxWidgets version so it may throw some debug errors/warnings at you, but if any other issues arise report them and I’ll try to get them sorted out. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b6ugax',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'symbiatch',
          num_crossposts: 0,
          num_comments: 9,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/b6ugax/pgadmin3_redux_with_support_for_postgresql_10_and/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/b6ugax/pgadmin3_redux_with_support_for_postgresql_10_and/',
          subreddit_subscribers: 9388,
          created_utc: 1553845990,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'learnprogramming',
          selftext:
            'Hello guys, I was following the tutorial on SQL by Corey Schaer, and when I wanted to download PostgreSQL on my laptop, someone told me I could just build the database with Microsoft Access, so could I still follow the tutorial by Corey Schaer?.  \n ',
          author_fullname: 't2_1wa94jwf',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Microsoft access vs PostgreSQL Corey Schaer?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/learnprogramming',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aordkz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.learnprogramming',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1549709898,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello guys, I was following the tutorial on SQL by Corey Schaer, and when I wanted to download PostgreSQL on my laptop, someone told me I could just build the database with Microsoft Access, so could I still follow the tutorial by Corey Schaer?.  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2r7yd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aordkz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Humble_Transition',
          num_crossposts: 0,
          num_comments: 30,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/learnprogramming/comments/aordkz/microsoft_access_vs_postgresql_corey_schaer/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/learnprogramming/comments/aordkz/microsoft_access_vs_postgresql_corey_schaer/',
          subreddit_subscribers: 923450,
          created_utc: 1549709898,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'djangolearning',
          selftext:
            'so I uploaded my site to linode LInux Ubuntu Server and its currently running on sqlite database, and now I want to migrate the databases to PostgreSQL but I  want to be able to access this database from my local Machine too for development purposes. is this possible and if so how do I do this please.\n\n&amp;#x200B;\n\n&amp;#x200B;\n\nThanks',
          author_fullname: 't2_2qyctatc',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'can I access my PostgreSQL in Linode Ubuntu Server from my local Machine',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/djangolearning',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b5vp45',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.djangolearning',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553636402,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;so I uploaded my site to linode LInux Ubuntu Server and its currently running on sqlite database, and now I want to migrate the databases to PostgreSQL but I  want to be able to access this database from my local Machine too for development purposes. is this possible and if so how do I do this please.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_366us',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b5vp45',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'NoLayer2',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/djangolearning/comments/b5vp45/can_i_access_my_postgresql_in_linode_ubuntu/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/djangolearning/comments/b5vp45/can_i_access_my_postgresql_in_linode_ubuntu/',
          subreddit_subscribers: 5933,
          created_utc: 1553636402,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Hi there! I am new to PostgreSQL community and came from the Oracle society. The first thing I am looking for is getting some PostgreSQL documents to read, but I can only find a single one like "PostgreSQL 10.7 Documentation"? Are there any other detailed reference doc like what Oracle has, such as DB Admin Guide, DB Admin ref, SQL ref, PL/SQL ref, PL/SQL packages ......?  I can keep going. I cannot imagine that one document can include all the details developers need to know about a database system.\n\nThank you for advice.\n\nGary',
          author_fullname: 't2_2mqmbm30',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Question about PostgreSQL Documentation',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aqnwh9',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550174385,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi there! I am new to PostgreSQL community and came from the Oracle society. The first thing I am looking for is getting some PostgreSQL documents to read, but I can only find a single one like &amp;quot;PostgreSQL 10.7 Documentation&amp;quot;? Are there any other detailed reference doc like what Oracle has, such as DB Admin Guide, DB Admin ref, SQL ref, PL/SQL ref, PL/SQL packages ......?  I can keep going. I cannot imagine that one document can include all the details developers need to know about a database system.&lt;/p&gt;\n\n&lt;p&gt;Thank you for advice.&lt;/p&gt;\n\n&lt;p&gt;Gary&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aqnwh9',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'PostGary',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/aqnwh9/question_about_postgresql_documentation/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/aqnwh9/question_about_postgresql_documentation/',
          subreddit_subscribers: 9388,
          created_utc: 1550174385,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'golang',
          selftext:
            'i have tried using mongo-db until now and so far i am still clueless about using it so instead of keep banging my head in mongodb i decided to try my luck with PostgreSQL , and it turned out to be even worse of an idea , i looked into couchDB but i read that its slower',
          author_fullname: 't2_21ypy6pf',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'what database you would recommend with my go lang project?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/golang',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ay0gkr',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.golang',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551888432,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;i have tried using mongo-db until now and so far i am still clueless about using it so instead of keep banging my head in mongodb i decided to try my luck with PostgreSQL , and it turned out to be even worse of an idea , i looked into couchDB but i read that its slower&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2rc7j',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ay0gkr',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'dilawar_uchiha',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/golang/comments/ay0gkr/what_database_you_would_recommend_with_my_go_lang/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/golang/comments/ay0gkr/what_database_you_would_recommend_with_my_go_lang/',
          subreddit_subscribers: 72391,
          created_utc: 1551888432,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I have extensive experience in both MS T-SQL and MySQL. My company just launched a new DB on AWS which uses PostgreSQL, and so far I'm not a fan.... the syntax learning curve and functionality just isn't there. Anyways...\n\n  \nWhat I need to find is syntax which looks for table name SR\\_JW\\_temp\\_Test, and if it exists, drop the table, then create one with the same name. This would be very simple in MySQL, like this:\n\n&amp;#x200B;\n\nDrop Table If Exists SR\\_JW\\_temp\\_Test;\n\nCreate Table SR\\_JW\\_temp\\_Test\n\n\\[...The rest of the query goes here\\]\n\n&amp;#x200B;\n\nWhat I keep getting in my query editor screen on the Redshift interface is an error that says \" ERROR: Multiple sql statements are not allowed.\" Never in my life have I dealt with a console that can't run multiple statements in one query and return the results severally. What is the syntax that I'm looking for here? \n\n&amp;#x200B;",
          author_fullname: 't2_t9weam2',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Drop Table if exists? in PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ar1457',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550263889,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have extensive experience in both MS T-SQL and MySQL. My company just launched a new DB on AWS which uses PostgreSQL, and so far I&amp;#39;m not a fan.... the syntax learning curve and functionality just isn&amp;#39;t there. Anyways...&lt;/p&gt;\n\n&lt;p&gt;What I need to find is syntax which looks for table name SR_JW_temp_Test, and if it exists, drop the table, then create one with the same name. This would be very simple in MySQL, like this:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Drop Table If Exists SR_JW_temp_Test;&lt;/p&gt;\n\n&lt;p&gt;Create Table SR_JW_temp_Test&lt;/p&gt;\n\n&lt;p&gt;[...The rest of the query goes here]&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;What I keep getting in my query editor screen on the Redshift interface is an error that says &amp;quot; ERROR: Multiple sql statements are not allowed.&amp;quot; Never in my life have I dealt with a console that can&amp;#39;t run multiple statements in one query and return the results severally. What is the syntax that I&amp;#39;m looking for here? &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ar1457',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'NewGuyBIGuy',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/ar1457/drop_table_if_exists_in_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/ar1457/drop_table_if_exists_in_postgresql/',
          subreddit_subscribers: 9388,
          created_utc: 1550263889,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'dataengineering',
          selftext:
            " We have two databases, an Oracle database running a legacy enterprise application, and a PostgreSQL database on which we are building a new application that will take over some (but not all) of the responsibilities of the legacy application. Because we do not control the Oracle database, we cannot completely replace it, nor can we build or data model on top of it, for other reasons. As such, we need to keep both databases in sync.\n\nAs we are comfortable with Azure Data Factory, we tried using its generic database driver to feed data from the Oracle database into the PostgreSQL one, but it was too slow to be viable. We also tried configuring a Sqoop instance, but it doesn't seem to allow arbitrary queries and we never managed to get it to run a job. Currently we are running a Jenkins instance to monitor hand-built scripts that keep the data in sync. Unfortunately, this solution is brittle and tends to fail in certain circumstances. We would like to have a tool that allows us to do arbitrary queries to the Oracle database and stream the results to the PostgreSQL database.\n\nIt is important to us that the tool can be monitored from our Jenkins instance, and that it is fast enough as we are syncing moderate amounts of data. A free and open-source tool is also a big plus.\n\nThanks in advance.",
          author_fullname: 't2_q7vo2',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Open Source Data Extraction Tool',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/dataengineering',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aizxnv',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.dataengineering',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548251809,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;We have two databases, an Oracle database running a legacy enterprise application, and a PostgreSQL database on which we are building a new application that will take over some (but not all) of the responsibilities of the legacy application. Because we do not control the Oracle database, we cannot completely replace it, nor can we build or data model on top of it, for other reasons. As such, we need to keep both databases in sync.&lt;/p&gt;\n\n&lt;p&gt;As we are comfortable with Azure Data Factory, we tried using its generic database driver to feed data from the Oracle database into the PostgreSQL one, but it was too slow to be viable. We also tried configuring a Sqoop instance, but it doesn&amp;#39;t seem to allow arbitrary queries and we never managed to get it to run a job. Currently we are running a Jenkins instance to monitor hand-built scripts that keep the data in sync. Unfortunately, this solution is brittle and tends to fail in certain circumstances. We would like to have a tool that allows us to do arbitrary queries to the Oracle database and stream the results to the PostgreSQL database.&lt;/p&gt;\n\n&lt;p&gt;It is important to us that the tool can be monitored from our Jenkins instance, and that it is fast enough as we are syncing moderate amounts of data. A free and open-source tool is also a big plus.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_36en4',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aizxnv',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'sebasgarcep',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/dataengineering/comments/aizxnv/open_source_data_extraction_tool/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/dataengineering/comments/aizxnv/open_source_data_extraction_tool/',
          subreddit_subscribers: 3669,
          created_utc: 1548251809,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'gis',
          selftext:
            "I am thinking about setting up a PostgreSQL/PostGIS database with Geoserver. Unfortunately I can't host this myself but I would need it running continually, so I was thinking of using AWS. Is this feasible? What happens when it needs to be updated or have plugins/extensions installed? Does it get set up on a virtual machine? Thanks for any help.",
          author_fullname: 't2_7dy40',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Does anyone have experience with or advice for setting up a PostgreSQL database using Amazon Web Services or similar?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/gis',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b3pmz6',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.gis',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553169369,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am thinking about setting up a PostgreSQL/PostGIS database with Geoserver. Unfortunately I can&amp;#39;t host this myself but I would need it running continually, so I was thinking of using AWS. Is this feasible? What happens when it needs to be updated or have plugins/extensions installed? Does it get set up on a virtual machine? Thanks for any help.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qmpb',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b3pmz6',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Mr-Crasp',
          num_crossposts: 0,
          num_comments: 23,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/gis/comments/b3pmz6/does_anyone_have_experience_with_or_advice_for/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/gis/comments/b3pmz6/does_anyone_have_experience_with_or_advice_for/',
          subreddit_subscribers: 33256,
          created_utc: 1553169369,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'ecology',
          selftext:
            "Hey all,   \nI was wondering if anyone else here has used PostgreSQL as a database for their research projects and how it worked for them. I've just learned about it and have installed it, but it seems like it will take a bit of time to get comfortable with it. I've very new with a lot of this stuff and I'm basically just teaching myself through youtube tutorials. Is it worth it for a study that will involve at most 6 radio tracked animals and some rodent trapping grids? Does it pay back the time investment?  \n\n\nAny thoughts or experiences would be helpful, thanks in advance!",
          author_fullname: 't2_9d71w3w',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Using PostgreSQL for Telemetry Study',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/ecology',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b2dvke',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.ecology',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552880233,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey all,&lt;br/&gt;\nI was wondering if anyone else here has used PostgreSQL as a database for their research projects and how it worked for them. I&amp;#39;ve just learned about it and have installed it, but it seems like it will take a bit of time to get comfortable with it. I&amp;#39;ve very new with a lot of this stuff and I&amp;#39;m basically just teaching myself through youtube tutorials. Is it worth it for a study that will involve at most 6 radio tracked animals and some rodent trapping grids? Does it pay back the time investment?  &lt;/p&gt;\n\n&lt;p&gt;Any thoughts or experiences would be helpful, thanks in advance!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qoii',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b2dvke',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'DeathbyGentleKicks',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/ecology/comments/b2dvke/using_postgresql_for_telemetry_study/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/ecology/comments/b2dvke/using_postgresql_for_telemetry_study/',
          subreddit_subscribers: 17507,
          created_utc: 1552880233,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            "Hi everyone, I've been banging my head against this issue for a while now and would greatly appreciate any advice.\n\n&amp;#x200B;\n\nI have a model `Rating` with a foreign key relationship to a model `Media`.  In the get\\_queryset method of the Media ViewSet (REST framework)  I need to annotate the count of the rating\\_set ('ratings') in order to get the total number of ratings for each Media:\n\n    def get_queryset(self):\n        queryset = Media.objects.all()\n        queryset = queryset.annotate(ratings_count=Count('ratings'))\n\nThis works perfectly fine with a small number of rows, but when I simulate production data with a relatively large number of rows (1,000 Media each with 1,000 Ratings, therefore 1,000,000 Ratings total) then the response time for retrieving one page of 15 Media is prohibitively long (10+ seconds).  If I remove the annotation then the response time is a few milliseconds.\n\n&amp;#x200B;\n\nIf I replace Count() with a RawSQL() statement then I can improve the response time slightly, but it is still far too slow.\n\n    def get_queryset(self):\n        queryset = Media.objects.all()\n        queryset = Media.objects.annotate(ratings_count=RawSQL('SELECT COUNT(*) FROM main_rating WHERE\n            main_rating.media_id = main_media.id', params=()))\n\nI have spent many hours googling and many posts seem to point to the fact that PostgreSQL is just slow at calculating counts. I have found a few commonly accepted workarounds that involve estimating the count (ex. [https://wiki.postgresql.org/wiki/Count\\_estimate](https://wiki.postgresql.org/wiki/Count_estimate)), however after many hours of messing around with them I have not been able to successfully implement any with my usecase.\n\nOne solution is to get the count estimate from pg\\_class, however this only works when getting the count of the entire table without conditions.\n\nAnother solution is the count\\_estimate function described in the above wiki link, however the SQL query string that I pass to the function will not recognize the current Media from the queryset (main\\_media.id).\n\n    def get_queryset(self):\n        queryset = Media.objects.all()\n        queryset = Media.objects.annotate(ratings_count=RawSQL('SELECT count_estimate(\\'SELECT * FROM     \n            main_rating WHERE main_rating.media_id = main_media.id\\')', params=()))\n\nDefining an index doesn't seem to help either, since Django automatically creates an index on foreign key relationships.\n\n&amp;#x200B;\n\n**Does anyone have any experience on optimizing Count() annotations for large data sets?**",
          author_fullname: 't2_ween9',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Estimate count with conditions when using PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aw0vdd',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551416622,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone, I&amp;#39;ve been banging my head against this issue for a while now and would greatly appreciate any advice.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I have a model &lt;code&gt;Rating&lt;/code&gt; with a foreign key relationship to a model &lt;code&gt;Media&lt;/code&gt;.  In the get_queryset method of the Media ViewSet (REST framework)  I need to annotate the count of the rating_set (&amp;#39;ratings&amp;#39;) in order to get the total number of ratings for each Media:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_queryset(self):\n    queryset = Media.objects.all()\n    queryset = queryset.annotate(ratings_count=Count(&amp;#39;ratings&amp;#39;))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;This works perfectly fine with a small number of rows, but when I simulate production data with a relatively large number of rows (1,000 Media each with 1,000 Ratings, therefore 1,000,000 Ratings total) then the response time for retrieving one page of 15 Media is prohibitively long (10+ seconds).  If I remove the annotation then the response time is a few milliseconds.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;If I replace Count() with a RawSQL() statement then I can improve the response time slightly, but it is still far too slow.&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_queryset(self):\n    queryset = Media.objects.all()\n    queryset = Media.objects.annotate(ratings_count=RawSQL(&amp;#39;SELECT COUNT(*) FROM main_rating WHERE\n        main_rating.media_id = main_media.id&amp;#39;, params=()))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have spent many hours googling and many posts seem to point to the fact that PostgreSQL is just slow at calculating counts. I have found a few commonly accepted workarounds that involve estimating the count (ex. &lt;a href="https://wiki.postgresql.org/wiki/Count_estimate"&gt;https://wiki.postgresql.org/wiki/Count_estimate&lt;/a&gt;), however after many hours of messing around with them I have not been able to successfully implement any with my usecase.&lt;/p&gt;\n\n&lt;p&gt;One solution is to get the count estimate from pg_class, however this only works when getting the count of the entire table without conditions.&lt;/p&gt;\n\n&lt;p&gt;Another solution is the count_estimate function described in the above wiki link, however the SQL query string that I pass to the function will not recognize the current Media from the queryset (main_media.id).&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def get_queryset(self):\n    queryset = Media.objects.all()\n    queryset = Media.objects.annotate(ratings_count=RawSQL(&amp;#39;SELECT count_estimate(\\&amp;#39;SELECT * FROM     \n        main_rating WHERE main_rating.media_id = main_media.id\\&amp;#39;)&amp;#39;, params=()))\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Defining an index doesn&amp;#39;t seem to help either, since Django automatically creates an index on foreign key relationships.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Does anyone have any experience on optimizing Count() annotations for large data sets?&lt;/strong&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aw0vdd',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'cooldoganytime',
          num_crossposts: 0,
          num_comments: 9,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/aw0vdd/estimate_count_with_conditions_when_using/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/aw0vdd/estimate_count_with_conditions_when_using/',
          subreddit_subscribers: 48849,
          created_utc: 1551416622,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Hi all, i am quite new to postgreSQL and partitioning, i need advice regarding the safest way to partitioning certain table in my production environtment\n\n&amp;#x200B;\n\nthis is the deployment step i am thinking of :\n\nPartitioning Step\n\n1. Lock the exisiting table ( lock table A in share mode), i want the user will still be able to select the content of table but i don't want any update or insert new data into table A\n2. create the new table with partition (Table B), and copying data from Table A to Table B\n3. release the lock of Table A and rename the existing table (Table A) to new name (Table C) \n4. rename the new table with partition (Table B) into Table A\n\n&amp;#x200B;\n\nIs above step acceptable (not much downtime/lock to Table) ?. Any kind of advice is welcomed, currently we are planning to do partitioning on PostgreSQL 11.2 (Declarative Partitioning by Range). Thx before",
          author_fullname: 't2_2l84awu0',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Safest Way to do partitioning table in Postgresql 11 (prod env)',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aw323m',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 11,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 11,
          approved_by: null,
          thumbnail: 'self',
          edited: 1551435622,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551433644,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all, i am quite new to postgreSQL and partitioning, i need advice regarding the safest way to partitioning certain table in my production environtment&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;this is the deployment step i am thinking of :&lt;/p&gt;\n\n&lt;p&gt;Partitioning Step&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Lock the exisiting table ( lock table A in share mode), i want the user will still be able to select the content of table but i don&amp;#39;t want any update or insert new data into table A&lt;/li&gt;\n&lt;li&gt;create the new table with partition (Table B), and copying data from Table A to Table B&lt;/li&gt;\n&lt;li&gt;release the lock of Table A and rename the existing table (Table A) to new name (Table C) &lt;/li&gt;\n&lt;li&gt;rename the new table with partition (Table B) into Table A&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Is above step acceptable (not much downtime/lock to Table) ?. Any kind of advice is welcomed, currently we are planning to do partitioning on PostgreSQL 11.2 (Declarative Partitioning by Range). Thx before&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aw323m',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'DewprismX',
          num_crossposts: 0,
          num_comments: 9,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/aw323m/safest_way_to_do_partitioning_table_in_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/aw323m/safest_way_to_do_partitioning_table_in_postgresql/',
          subreddit_subscribers: 9388,
          created_utc: 1551433644,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            'Hi,  Has anyone used the preview for PostgreSQL on Aurora Serverless?  Are there any issues with it?  My client is an AWS Partner and needs to give this a spin for an ETL process we have in the works.  Any info you can provide would be greatly appreciated.  Does anyone know of an example CloudFormation script to set this up?  Thanks, Michael',
          author_fullname: 't2_hgpt0',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'AWS Aurora Serverless for PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'resource',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b5cf22',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'technical resource',
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553529475,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi,  Has anyone used the preview for PostgreSQL on Aurora Serverless?  Are there any issues with it?  My client is an AWS Partner and needs to give this a spin for an ETL process we have in the works.  Any info you can provide would be greatly appreciated.  Does anyone know of an example CloudFormation script to set this up?  Thanks, Michael&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          link_flair_template_id: '90cdeee6-b9e3-11e6-8d35-0eabbe333632',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '#dadada',
          id: 'b5cf22',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'mmahon512',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/b5cf22/aws_aurora_serverless_for_postgresql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/b5cf22/aws_aurora_serverless_for_postgresql/',
          subreddit_subscribers: 66268,
          created_utc: 1553529475,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            'I am deploying my Django site on Namecheap shared hosting to save a few bucks. However, the PostgreSQL version the server runs is very old and I can’t do some things.\n\nIs there a place where I can host just my database for cheap or free? I highly prefer hosting everything other than the PostgreSQL database on Namecheap since I already set everything up.',
          author_fullname: 't2_zowbk',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Where can I host my PostgreSQL database for production?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_awn3hj',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551564944,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am deploying my Django site on Namecheap shared hosting to save a few bucks. However, the PostgreSQL version the server runs is very old and I can’t do some things.&lt;/p&gt;\n\n&lt;p&gt;Is there a place where I can host just my database for cheap or free? I highly prefer hosting everything other than the PostgreSQL database on Namecheap since I already set everything up.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'awn3hj',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'jesseparks13',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/awn3hj/where_can_i_host_my_postgresql_database_for/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/awn3hj/where_can_i_host_my_postgresql_database_for/',
          subreddit_subscribers: 48849,
          created_utc: 1551564944,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'My organization has about 100+ reports built in SSRS.  In the past someone built SSIS packages to bring the data out of our software vendors PostgreSQL database and move it into a SQL database and used SSRS to build reports. That has a lot of problems if the vendor changes the table structure and the amount of data we can pull etc.  We want to move away from this use the PostgreSQL DB without putting it in SQL tables first. \n\n&amp;#x200B;\n\nFrom what I have read we should be able to just load the ODBC driver for PostgreSQL on our new reporting server, copy the reports over and then one by one change the data source to pull data using the postgreSQL.  Just wondering I am understanding that right?  SSRS can be used that way with PostgreSQL or is there a better way? Better reporting tool for PostgreSQL?',
          author_fullname: 't2_371gjm4r',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'SQL Reporting to PostgreSQL Reporting Migration',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b48xsg',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553281096,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;My organization has about 100+ reports built in SSRS.  In the past someone built SSIS packages to bring the data out of our software vendors PostgreSQL database and move it into a SQL database and used SSRS to build reports. That has a lot of problems if the vendor changes the table structure and the amount of data we can pull etc.  We want to move away from this use the PostgreSQL DB without putting it in SQL tables first. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;From what I have read we should be able to just load the ODBC driver for PostgreSQL on our new reporting server, copy the reports over and then one by one change the data source to pull data using the postgreSQL.  Just wondering I am understanding that right?  SSRS can be used that way with PostgreSQL or is there a better way? Better reporting tool for PostgreSQL?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b48xsg',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'cdninnc',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/b48xsg/sql_reporting_to_postgresql_reporting_migration/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/b48xsg/sql_reporting_to_postgresql_reporting_migration/',
          subreddit_subscribers: 9388,
          created_utc: 1553281096,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            'I see the last few days of PostgreSQL Aurora logs in the console.\n\nIs there any way to automatically retrieve/download/store these logs, besides paying someone to log in every day and download the log files?',
          author_fullname: 't2_q0mir',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Retrieve logs from RDS PostgreSQL-compatible Aurora',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: '',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aw8rnz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'database',
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551468964,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I see the last few days of PostgreSQL Aurora logs in the console.&lt;/p&gt;\n\n&lt;p&gt;Is there any way to automatically retrieve/download/store these logs, besides paying someone to log in every day and download the log files?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          link_flair_template_id: 'c67223e6-fe51-11e8-96e8-0e985e0a8712',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '#dadada',
          id: 'aw8rnz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'paulddraper',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/aw8rnz/retrieve_logs_from_rds_postgresqlcompatible_aurora/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/aw8rnz/retrieve_logs_from_rds_postgresqlcompatible_aurora/',
          subreddit_subscribers: 66268,
          created_utc: 1551468964,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            "I don't have any prior knowledge in the database, as a beginner what is the best book to learn PostgreSQL ",
          author_fullname: 't2_28gfax7h',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'What is the best book to learn PostgreSQL?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'd',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ampdde',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 13,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'PostgreSQL',
          can_mod_post: false,
          score: 13,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1549198998,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I don&amp;#39;t have any prior knowledge in the database, as a beginner what is the best book to learn PostgreSQL &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ampdde',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Chawki_',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/SQL/comments/ampdde/what_is_the_best_book_to_learn_postgresql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/ampdde/what_is_the_best_book_to_learn_postgresql/',
          subreddit_subscribers: 34612,
          created_utc: 1549198998,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Don't need anything complicated, but I do eventually want to host this server as hosting it on a local PC obviously is not ideal.  I just ended up downloading the version before 11.1 since that one is in beta apparently.\n\n&amp;#x200B;\n\nAdditional question:  If I would like to write a python script to read an xlsv file and insert the data into my PostgreSQL server what is the best format for that xlsv file.  I have 20 franchise locations that I would obviously like to keep separate.  Would it be easier to have all the data be given to me from our CRM company in a single sheet (so basically a CSV) or have multiple sheets and iterate through each?",
          author_fullname: 't2_iu6w1',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'How can I determine what version of PostgreSQL I need?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a5v9qa',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544720161,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Don&amp;#39;t need anything complicated, but I do eventually want to host this server as hosting it on a local PC obviously is not ideal.  I just ended up downloading the version before 11.1 since that one is in beta apparently.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Additional question:  If I would like to write a python script to read an xlsv file and insert the data into my PostgreSQL server what is the best format for that xlsv file.  I have 20 franchise locations that I would obviously like to keep separate.  Would it be easier to have all the data be given to me from our CRM company in a single sheet (so basically a CSV) or have multiple sheets and iterate through each?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a5v9qa',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Black_Magic100',
          num_crossposts: 0,
          num_comments: 20,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a5v9qa/how_can_i_determine_what_version_of_postgresql_i/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a5v9qa/how_can_i_determine_what_version_of_postgresql_i/',
          subreddit_subscribers: 9388,
          created_utc: 1544720161,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            " \n\nI'm new to SQL commands and I currently don't know how create a pivot table using two columns from a large data field.\n\nI want to group the decimal values in the first column (clippedext) into cohorts of 0.1 and take the counts falling in each cohort. Then I want the counts split according to each value in the second column (roll\\_no). There are about 75000 rows for each roll number.\n\nI've made the pivot in Excel, see the screenshots, but I want to learn how to do this in postgreSQL.\n\nAny help would be great!\n\n&amp;#x200B;\n\nhttps://i.redd.it/p39ppyy8yik21.jpg\n\nhttps://i.redd.it/3gqafyy8yik21.jpg",
          author_fullname: 't2_iiuqh3q',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'How to create a simple pivot table using SQL commands in postgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'd',
          downs: 0,
          thumbnail_height: 36,
          hide_score: false,
          media_metadata: {
            '3gqafyy8yik21': {
              status: 'valid',
              e: 'Image',
              s: {
                y: 401,
                x: 318,
                u: 'https://i.redd.it/3gqafyy8yik21.jpg'
              },
              m: 'image/jpg',
              id: '3gqafyy8yik21'
            },
            p39ppyy8yik21: {
              status: 'valid',
              e: 'Image',
              s: {
                y: 329,
                x: 1258,
                u: 'https://i.redd.it/p39ppyy8yik21.jpg'
              },
              m: 'image/jpg',
              id: 'p39ppyy8yik21'
            }
          },
          name: 't3_ay0npg',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: 140,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'PostgreSQL',
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail:
            'https://b.thumbs.redditmedia.com/Y02ETeeLMZNXtRizb_4qHSpneiPp-LuUvrsTqvNtWNc.jpg',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551889451,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m new to SQL commands and I currently don&amp;#39;t know how create a pivot table using two columns from a large data field.&lt;/p&gt;\n\n&lt;p&gt;I want to group the decimal values in the first column (clippedext) into cohorts of 0.1 and take the counts falling in each cohort. Then I want the counts split according to each value in the second column (roll_no). There are about 75000 rows for each roll number.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve made the pivot in Excel, see the screenshots, but I want to learn how to do this in postgreSQL.&lt;/p&gt;\n\n&lt;p&gt;Any help would be great!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://i.redd.it/p39ppyy8yik21.jpg"&gt;https://i.redd.it/p39ppyy8yik21.jpg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://i.redd.it/3gqafyy8yik21.jpg"&gt;https://i.redd.it/3gqafyy8yik21.jpg&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ay0npg',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'pike_predator',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: false,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/SQL/comments/ay0npg/how_to_create_a_simple_pivot_table_using_sql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/ay0npg/how_to_create_a_simple_pivot_table_using_sql/',
          subreddit_subscribers: 34612,
          created_utc: 1551889451,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Are you deploying [PostgreSQL in the cloud](https://scalegrid.io/postgresql.html) and want to understand your options for achieving high availability? In our previous blog post, [Managing High Availability in PostgreSQL – Part I](https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-1/), we discussed the capabilities and functioning of PostgreSQL Automatic Failover (PAF) by ClusterLabs. In [Part II](https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-2/), we’re introducing you to an alternative open source tool, Replication Manager from 2ndQuadrant, to be closely followed by Part III where we dive into our third alternative, Patroni by Zalando.\n\n## Replication Manager (repmgr)\n\n[repmgr](https://repmgr.org/) is an open-source tool suite developed by 2ndQuadrant for managing replication and failover of your [PostgreSQL](https://www.postgresql.org/) clusters. It provides the tools to setup, configure, manage, and monitor replication of PostgreSQL, and also enables you to perform manual switchover and failover tasks using repmgr utility. This free tool supports and enhances PostgreSQL’s built-in [streaming replication](https://scalegrid.io/blog/getting-started-with-postgresql-streaming-replication/).\n\nReplication Manager provides two main tools to manage replication and failover of PostgreSQL.\n\n## repmgr\n\n* A command-line interface utility which enables you to perform various administrative tasks.\n* repmgr enables you to setup standby servers, promote standbys, do a switchover, and monitor the status of your PostgreSQL cluster.\n* It also provides dry run option for almost all of the administrative commands.\n\n## repmgrd\n\nThis is the daemon which:\n\n* Actively monitors the PostgreSQL clusters and performs necessary actions based on the state of the cluster.\n* Performs automatic failover in case the primary node goes down by promoting the most eligible standby as the new primary.\n* Provides an option to monitor and store the data related to replication performance.\n* Provides notification by invoking the user scripts for registered events.\n\n## How it Works\n\nrepmrg not only manages the replication of PostgreSQL clusters, but also has capabilities for setting up the standby servers for replication. Following the initial installation, we need to make changes to the repmgr configuration file (repmgr.conf) with the required details on each server. When a server is configured, it needs to be registered with repmgr using repmgr primary/standby register command. First, the primary node is setup and registered. Then, standby servers are created and configured using the repmgr standby clone command which clones the PostgreSQL standby node from another PostgreSQL server.\n\nReplication Manager makes use of PostgreSQL extensions feature and creates its own schema on the cluster database to store the cluster-related information. Installation of the extension and creation of the schema happens during the registration of the primary server using repmgr. Once the setup is complete, manual administrative operations such as promote, follow, switchover, etc. can be done using repmgr utility. For switchover operation, it requires passwordless SSH to be setup between the nodes.\n\nAutomatic failover can be setup using [repmgrd](https://repmgr.org/docs/4.0/repmgrd-basic-configuration.html). repmgrd requires a shared library ‘repmgr’ to be loaded at the time of starting the PostgreSQL server. The library name should be mentioned in the shared\\_preload\\_libraries configuration parameter in the postgresql.conf file. Also, for repmgrd to work, failover=automatic parameter need to be set in repmgr.conf file. Once all these parameters are set, repmgrd daemon starts to actively monitor the cluster. If there is any failure in primary node, it will try to reconnect multiple times. When all attempts to connect to primary fail, the most eligible standby is chosen by election as the new primary by repmgrd.\n\nrepmgr also supports event notifications. It has a set of predefined events and stores each occurrence of these events in the repmgr.events table. repmgr enables event notifications to be passed to a user-defined program or script which can take further action, such as sending an email or triggering any alert. This is done by setting the event\\_notification\\_command parameter in repmgr.conf.\n\n## How Does It Handle The Split Brain Scenario?\n\nrepmgr tackles [split brain scenarios](https://repmgr.org/docs/4.2/repmgrd-network-split.html) using the location parameter, where each node should specify the location parameter based on the datacenter in which it is placed. In case of any network split, repmgr will ensure the promotion of the node which is in the same location as the primary. If it doesn’t find any node in that location, it will not promote any node in any location.\n\nIt also handles network isolation in the event of an even number of servers in a cluster. This is done using an extra node called the [witness server](https://repmgr.org/docs/4.2/repmgr-concepts.html#WITNESS-SERVER). The witness server is a node which is considered only for the majority vote count. There will be no PostgreSQL installation on that server, and hence, no part to play in replication.\n\n## Are There Any Setup Requirements?\n\n* repmgr will require a [dedicated database](https://scalegrid.io/pricing.html#section_pricing_dedicated) and a user with superuser privileges. However, there’s also an option to provide a superuser if you are not willing to give the superuser access to repmgr user.\n* If you want repmgr to copy configuration files which are located outside the PostgreSQL data directory, and/or to test switchover functionality, you will also need passwordless SSH connections between both servers, and rsync should be installed.\n* If you intend to use service-based commands other than pg\\_ctl (which is used by repmgr by default) to start, stop, reload, and restart, you can specify them in repmgr configuration file (repmgr.conf).\n* The basic configuration parameters required in repmgr configuration file are as follows:\n\n**node\\_id (int)** – A unique integer greater than zero which identifies the node.\n\n**node\\_name (string)** – An arbitrary (but unique) string, using the server’s hostname or another identifier unambiguously associated with the server is recommended to avoid confusion.\n\n**conninfo (string)** – Database connection information as a conninfo string. All servers in the cluster must be able to connect to the local node using this string.\n\n**data\\_directory (string)** – The node’s data directory. This is needed by repmgr to perform operations when the PostgreSQL instance is not running and there’s no other way of determining the data directory.\n\n## repmgr Pros\n\n* Repmgr provides utilities that help to setup primary and standby nodes and configure replication.\n* It doesn’t use any extra ports for communication. If you want to perform switchover, only then will it require passwordless SSH to be configured.\n* Provides notification by invoking the user scripts for the registered events.\n* Performs automatic failover in case of primary server failure.\n\n## repmgr Cons\n\n* repmgr doesn’t detect if the standby is misconfigured with an unknown or non-existent node in recovery configuration. The node will be shown as standby even if it is running without connecting to the primary/cascading standby node.\n* Cannot retrieve the status of another node from a node where PostgreSQL service is down. Hence, it doesn’t provide a distributed control solution.\n* It doesn’t handle recovering the health of individual nodes.\n\n## High Availability Test Scenarios\n\nWe conducted a few tests on PostgreSQL high availability management using repmgr. All of these tests were run while the application was running and inserting data to the PostgreSQL database. The application was written using PostgreSQL Java [JDBC Driver](https://jdbc.postgresql.org/) leveraging the connection failover capability.\n\n## Standby Server Tests\n\n**Kill the PostgreSQL process** \n\n* Standby server was marked as failed. There was no disruption in writer application. Manual intervention was required to start the PostgreSQL process again.\n\n**Stop the PostgreSQL process** \n\n* Standby server was marked as failed. There was no disruption in writer application. Manual intervention was required to start the PostgreSQL process again.\n\n**Reboot the server** \n\n* Standby server was marked as failed. Once the server came up after reboot, PostgreSQL was started manually and server was marked as running. There was no disruption in writer application.\n\n**Stop the repmgrd process** \n\n* The standby server will not be a part of the automated failover situation. PostgreSQL service was found to be running. There was no disruption in writer application.\n\n## Master/Primary Server Tests\n\n**Kill the PostgreSQL process**\n\n* repmgrd started the health check for the primary server connection on all standby servers for a fixed interval.\n* When all retries failed, an election was triggered on all the standby servers. As a result of the election, the standby which had the latest received LSN got promoted.\n* The standby servers which lost the election will wait for the notification from new master node and follow it once they receive the notification.\n* There was downtime in the writer application. Manual intervention was required to start the PostgreSQL process again.\n\n**Stop the PostgreSQL process and bring it back immediately after health check expiry**\n\n* repmgrd started the health check for the primary server connection on all standby servers for a fixed interval.\n* When all retries failed, an election was triggered on all the standby nodes.\n* However, the newly elected master didn’t notify the existing standby servers since the old master was back.\n* Cluster was left in an indeterminate state and manual intervention was required.\n\n**Reboot the server**\n\n* repmgrd started the election when master connection health check failed on all standby servers.\n* The eligible standby was promoted. When this server came back, it didn’t join the cluster and was marked failed.\n* repmgr node rejoin command was ran to add the server back to the cluster. There was downtime in the writer application.\n\n**Stop the repmgr process**\n\n* The primary server will not be a part of the automated failover situation.\n* PostgreSQL service was found to be running. There was no disruption in the writer application.\n\n## Network Isolation Tests\n\n**Network isolate the primary server from other servers (all have same value for location in repmgr configuration)**\n\n* repmgrd started the election when master connection health check failed on all standby servers.\n* The eligible standby was promoted, but the PostgreSQL process was still running on the old master node.\n* There were two nodes running as master. Manual intervention was required after the network isolation was corrected.\n\n**Network isolate the primary server from other servers (the standby servers has same value for location but primary had a different value for location in repmgr configuration)**\n\n* repmgrd started the election when master connection health check failed on all standby servers.\n* But, there was no new master elected since the standby servers had a location different from that of the primary.\n* repmgrd went into degrade monitoring mode. PostgreSQL was running on all the nodes and there was only one master in the cluster.\n\n## Inference\n\nrepmgr provides several commands to setup and monitor PostgreSQL replication. It is feature-rich and also eases the job of the database administrator (DBA). However, it’s not a full fledged high availability management tool since it will not manage the resources. Manual intervention is required to ensure the resource is in proper state.\n\nSo, in this post, we’ve discussed the capabilities and workings of Replication Manager by 2ndQuadrant. In our next post, we’ll discuss the same high availability aspects using Patroni by Zalando. For users looking to automate their high availability in the cloud, check out our [PostgreSQL on Azure](https://scalegrid.io/postgresql/azure.html) and [PostgreSQL on AWS](https://scalegrid.io/postgresql/aws.html) fully managed solutions.',
          author_fullname: 't2_zk15bgr',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Managing High Availability in PostgreSQL – Part II',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b0al1w',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 25,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 25,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552412174,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Are you deploying &lt;a href="https://scalegrid.io/postgresql.html"&gt;PostgreSQL in the cloud&lt;/a&gt; and want to understand your options for achieving high availability? In our previous blog post, &lt;a href="https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-1/"&gt;Managing High Availability in PostgreSQL – Part I&lt;/a&gt;, we discussed the capabilities and functioning of PostgreSQL Automatic Failover (PAF) by ClusterLabs. In &lt;a href="https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-2/"&gt;Part II&lt;/a&gt;, we’re introducing you to an alternative open source tool, Replication Manager from 2ndQuadrant, to be closely followed by Part III where we dive into our third alternative, Patroni by Zalando.&lt;/p&gt;\n\n&lt;h2&gt;Replication Manager (repmgr)&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href="https://repmgr.org/"&gt;repmgr&lt;/a&gt; is an open-source tool suite developed by 2ndQuadrant for managing replication and failover of your &lt;a href="https://www.postgresql.org/"&gt;PostgreSQL&lt;/a&gt; clusters. It provides the tools to setup, configure, manage, and monitor replication of PostgreSQL, and also enables you to perform manual switchover and failover tasks using repmgr utility. This free tool supports and enhances PostgreSQL’s built-in &lt;a href="https://scalegrid.io/blog/getting-started-with-postgresql-streaming-replication/"&gt;streaming replication&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;Replication Manager provides two main tools to manage replication and failover of PostgreSQL.&lt;/p&gt;\n\n&lt;h2&gt;repmgr&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;A command-line interface utility which enables you to perform various administrative tasks.&lt;/li&gt;\n&lt;li&gt;repmgr enables you to setup standby servers, promote standbys, do a switchover, and monitor the status of your PostgreSQL cluster.&lt;/li&gt;\n&lt;li&gt;It also provides dry run option for almost all of the administrative commands.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;repmgrd&lt;/h2&gt;\n\n&lt;p&gt;This is the daemon which:&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Actively monitors the PostgreSQL clusters and performs necessary actions based on the state of the cluster.&lt;/li&gt;\n&lt;li&gt;Performs automatic failover in case the primary node goes down by promoting the most eligible standby as the new primary.&lt;/li&gt;\n&lt;li&gt;Provides an option to monitor and store the data related to replication performance.&lt;/li&gt;\n&lt;li&gt;Provides notification by invoking the user scripts for registered events.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;How it Works&lt;/h2&gt;\n\n&lt;p&gt;repmrg not only manages the replication of PostgreSQL clusters, but also has capabilities for setting up the standby servers for replication. Following the initial installation, we need to make changes to the repmgr configuration file (repmgr.conf) with the required details on each server. When a server is configured, it needs to be registered with repmgr using repmgr primary/standby register command. First, the primary node is setup and registered. Then, standby servers are created and configured using the repmgr standby clone command which clones the PostgreSQL standby node from another PostgreSQL server.&lt;/p&gt;\n\n&lt;p&gt;Replication Manager makes use of PostgreSQL extensions feature and creates its own schema on the cluster database to store the cluster-related information. Installation of the extension and creation of the schema happens during the registration of the primary server using repmgr. Once the setup is complete, manual administrative operations such as promote, follow, switchover, etc. can be done using repmgr utility. For switchover operation, it requires passwordless SSH to be setup between the nodes.&lt;/p&gt;\n\n&lt;p&gt;Automatic failover can be setup using &lt;a href="https://repmgr.org/docs/4.0/repmgrd-basic-configuration.html"&gt;repmgrd&lt;/a&gt;. repmgrd requires a shared library ‘repmgr’ to be loaded at the time of starting the PostgreSQL server. The library name should be mentioned in the shared_preload_libraries configuration parameter in the postgresql.conf file. Also, for repmgrd to work, failover=automatic parameter need to be set in repmgr.conf file. Once all these parameters are set, repmgrd daemon starts to actively monitor the cluster. If there is any failure in primary node, it will try to reconnect multiple times. When all attempts to connect to primary fail, the most eligible standby is chosen by election as the new primary by repmgrd.&lt;/p&gt;\n\n&lt;p&gt;repmgr also supports event notifications. It has a set of predefined events and stores each occurrence of these events in the repmgr.events table. repmgr enables event notifications to be passed to a user-defined program or script which can take further action, such as sending an email or triggering any alert. This is done by setting the event_notification_command parameter in repmgr.conf.&lt;/p&gt;\n\n&lt;h2&gt;How Does It Handle The Split Brain Scenario?&lt;/h2&gt;\n\n&lt;p&gt;repmgr tackles &lt;a href="https://repmgr.org/docs/4.2/repmgrd-network-split.html"&gt;split brain scenarios&lt;/a&gt; using the location parameter, where each node should specify the location parameter based on the datacenter in which it is placed. In case of any network split, repmgr will ensure the promotion of the node which is in the same location as the primary. If it doesn’t find any node in that location, it will not promote any node in any location.&lt;/p&gt;\n\n&lt;p&gt;It also handles network isolation in the event of an even number of servers in a cluster. This is done using an extra node called the &lt;a href="https://repmgr.org/docs/4.2/repmgr-concepts.html#WITNESS-SERVER"&gt;witness server&lt;/a&gt;. The witness server is a node which is considered only for the majority vote count. There will be no PostgreSQL installation on that server, and hence, no part to play in replication.&lt;/p&gt;\n\n&lt;h2&gt;Are There Any Setup Requirements?&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgr will require a &lt;a href="https://scalegrid.io/pricing.html#section_pricing_dedicated"&gt;dedicated database&lt;/a&gt; and a user with superuser privileges. However, there’s also an option to provide a superuser if you are not willing to give the superuser access to repmgr user.&lt;/li&gt;\n&lt;li&gt;If you want repmgr to copy configuration files which are located outside the PostgreSQL data directory, and/or to test switchover functionality, you will also need passwordless SSH connections between both servers, and rsync should be installed.&lt;/li&gt;\n&lt;li&gt;If you intend to use service-based commands other than pg_ctl (which is used by repmgr by default) to start, stop, reload, and restart, you can specify them in repmgr configuration file (repmgr.conf).&lt;/li&gt;\n&lt;li&gt;The basic configuration parameters required in repmgr configuration file are as follows:&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;node_id (int)&lt;/strong&gt; – A unique integer greater than zero which identifies the node.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;node_name (string)&lt;/strong&gt; – An arbitrary (but unique) string, using the server’s hostname or another identifier unambiguously associated with the server is recommended to avoid confusion.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;conninfo (string)&lt;/strong&gt; – Database connection information as a conninfo string. All servers in the cluster must be able to connect to the local node using this string.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;data_directory (string)&lt;/strong&gt; – The node’s data directory. This is needed by repmgr to perform operations when the PostgreSQL instance is not running and there’s no other way of determining the data directory.&lt;/p&gt;\n\n&lt;h2&gt;repmgr Pros&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Repmgr provides utilities that help to setup primary and standby nodes and configure replication.&lt;/li&gt;\n&lt;li&gt;It doesn’t use any extra ports for communication. If you want to perform switchover, only then will it require passwordless SSH to be configured.&lt;/li&gt;\n&lt;li&gt;Provides notification by invoking the user scripts for the registered events.&lt;/li&gt;\n&lt;li&gt;Performs automatic failover in case of primary server failure.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;repmgr Cons&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgr doesn’t detect if the standby is misconfigured with an unknown or non-existent node in recovery configuration. The node will be shown as standby even if it is running without connecting to the primary/cascading standby node.&lt;/li&gt;\n&lt;li&gt;Cannot retrieve the status of another node from a node where PostgreSQL service is down. Hence, it doesn’t provide a distributed control solution.&lt;/li&gt;\n&lt;li&gt;It doesn’t handle recovering the health of individual nodes.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;High Availability Test Scenarios&lt;/h2&gt;\n\n&lt;p&gt;We conducted a few tests on PostgreSQL high availability management using repmgr. All of these tests were run while the application was running and inserting data to the PostgreSQL database. The application was written using PostgreSQL Java &lt;a href="https://jdbc.postgresql.org/"&gt;JDBC Driver&lt;/a&gt; leveraging the connection failover capability.&lt;/p&gt;\n\n&lt;h2&gt;Standby Server Tests&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Kill the PostgreSQL process&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Standby server was marked as failed. There was no disruption in writer application. Manual intervention was required to start the PostgreSQL process again.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Stop the PostgreSQL process&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Standby server was marked as failed. There was no disruption in writer application. Manual intervention was required to start the PostgreSQL process again.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Reboot the server&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Standby server was marked as failed. Once the server came up after reboot, PostgreSQL was started manually and server was marked as running. There was no disruption in writer application.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Stop the repmgrd process&lt;/strong&gt; &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The standby server will not be a part of the automated failover situation. PostgreSQL service was found to be running. There was no disruption in writer application.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Master/Primary Server Tests&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Kill the PostgreSQL process&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgrd started the health check for the primary server connection on all standby servers for a fixed interval.&lt;/li&gt;\n&lt;li&gt;When all retries failed, an election was triggered on all the standby servers. As a result of the election, the standby which had the latest received LSN got promoted.&lt;/li&gt;\n&lt;li&gt;The standby servers which lost the election will wait for the notification from new master node and follow it once they receive the notification.&lt;/li&gt;\n&lt;li&gt;There was downtime in the writer application. Manual intervention was required to start the PostgreSQL process again.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Stop the PostgreSQL process and bring it back immediately after health check expiry&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgrd started the health check for the primary server connection on all standby servers for a fixed interval.&lt;/li&gt;\n&lt;li&gt;When all retries failed, an election was triggered on all the standby nodes.&lt;/li&gt;\n&lt;li&gt;However, the newly elected master didn’t notify the existing standby servers since the old master was back.&lt;/li&gt;\n&lt;li&gt;Cluster was left in an indeterminate state and manual intervention was required.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Reboot the server&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgrd started the election when master connection health check failed on all standby servers.&lt;/li&gt;\n&lt;li&gt;The eligible standby was promoted. When this server came back, it didn’t join the cluster and was marked failed.&lt;/li&gt;\n&lt;li&gt;repmgr node rejoin command was ran to add the server back to the cluster. There was downtime in the writer application.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Stop the repmgr process&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;The primary server will not be a part of the automated failover situation.&lt;/li&gt;\n&lt;li&gt;PostgreSQL service was found to be running. There was no disruption in the writer application.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Network Isolation Tests&lt;/h2&gt;\n\n&lt;p&gt;&lt;strong&gt;Network isolate the primary server from other servers (all have same value for location in repmgr configuration)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgrd started the election when master connection health check failed on all standby servers.&lt;/li&gt;\n&lt;li&gt;The eligible standby was promoted, but the PostgreSQL process was still running on the old master node.&lt;/li&gt;\n&lt;li&gt;There were two nodes running as master. Manual intervention was required after the network isolation was corrected.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Network isolate the primary server from other servers (the standby servers has same value for location but primary had a different value for location in repmgr configuration)&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;repmgrd started the election when master connection health check failed on all standby servers.&lt;/li&gt;\n&lt;li&gt;But, there was no new master elected since the standby servers had a location different from that of the primary.&lt;/li&gt;\n&lt;li&gt;repmgrd went into degrade monitoring mode. PostgreSQL was running on all the nodes and there was only one master in the cluster.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;Inference&lt;/h2&gt;\n\n&lt;p&gt;repmgr provides several commands to setup and monitor PostgreSQL replication. It is feature-rich and also eases the job of the database administrator (DBA). However, it’s not a full fledged high availability management tool since it will not manage the resources. Manual intervention is required to ensure the resource is in proper state.&lt;/p&gt;\n\n&lt;p&gt;So, in this post, we’ve discussed the capabilities and workings of Replication Manager by 2ndQuadrant. In our next post, we’ll discuss the same high availability aspects using Patroni by Zalando. For users looking to automate their high availability in the cloud, check out our &lt;a href="https://scalegrid.io/postgresql/azure.html"&gt;PostgreSQL on Azure&lt;/a&gt; and &lt;a href="https://scalegrid.io/postgresql/aws.html"&gt;PostgreSQL on AWS&lt;/a&gt; fully managed solutions.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/gsshWmJHyc3DsMriNbsG7sPHVicAgZL3X9VwGnlPlRs.jpg?auto=webp&amp;s=e6c13a7e6384b286cb086839cd43b5ca71bb8a6f',
                  width: 144,
                  height: 144
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/gsshWmJHyc3DsMriNbsG7sPHVicAgZL3X9VwGnlPlRs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b968f5bee63ea8b2ecd5e145d0f2ac788732fd7c',
                    width: 108,
                    height: 108
                  }
                ],
                variants: {},
                id: '1WFQzp-reGdBvfLkG0bJEduQM_f-ZDtl77YGS6YVeeg'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b0al1w',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'ScaleGrid_DBaaS',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/b0al1w/managing_high_availability_in_postgresql_part_ii/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/b0al1w/managing_high_availability_in_postgresql_part_ii/',
          subreddit_subscribers: 9388,
          created_utc: 1552412174,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Like the title says, I'm very interested in moving in the direction of becoming a Postgres DBA in my career. I work a lot with API's and connecting to them via REST, manipulating and parsing data, etc. I know PostgreSQL in terms of querying data from tables, etc. (I work at a BI company).\n\nMy experience, however, stops there. There are big opportunities for me to add value in my company as a DBA, and I want to get a leg up and show the executives that I can do it. To be more specific, I work in Client Success and there is a need for someone to create various views from the company's master database just for my department. I would be responsible for managing the CS database, creating and monitoring creds, and querying the database for KPI's that will help the department scale. I'm scrappy when it comes to learning software/tech, and I know that I can do it.\n\nMy questions are:\n\n1. How to use PgAdmin4 to start a database, and create tables and views using data that I compile?\n2. How can I scrape data from websites, API's, etc. that I can use to construct various useful tables for really any purpose?\n3. How to manage credentials for users to my database?\n4. What are the skills necessary that I *need* to have in order to become a full-fledged DBA? Any programming languages that I need to learn, different syntaxes, etc.\n5. Finally, is PgAdmin4 the best way to even do these things? I've heard of other platforms, such as Postico. Any thoughts there?\n\nI'm clearly a noob here. I just want to get linked to resources for someone who wants to start a career in being a DBA. I already have PgAdmin4 installed using instructions found [here](http://www.postgresqltutorial.com/). I have a few other tools installed, like Docker and Pritunl for a VPN (I don't know how effective they'll be). I've mostly just followed random instructions that I've read here and there.\n\nThanks in advance for pointing me in the right direction. Being a DBA just sounds incredible and I want nothing more than to learn all I can.",
          author_fullname: 't2_2gr7ql8q',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'How to get started with PgAdmin4? Hopeful DBA looking for help!',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: 'how-to',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a61uxa',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: '',
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: 'f917408a-85b1-11e6-aa2a-0edd65edaea7',
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'How-To',
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: 'n00b',
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544765068,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Like the title says, I&amp;#39;m very interested in moving in the direction of becoming a Postgres DBA in my career. I work a lot with API&amp;#39;s and connecting to them via REST, manipulating and parsing data, etc. I know PostgreSQL in terms of querying data from tables, etc. (I work at a BI company).&lt;/p&gt;\n\n&lt;p&gt;My experience, however, stops there. There are big opportunities for me to add value in my company as a DBA, and I want to get a leg up and show the executives that I can do it. To be more specific, I work in Client Success and there is a need for someone to create various views from the company&amp;#39;s master database just for my department. I would be responsible for managing the CS database, creating and monitoring creds, and querying the database for KPI&amp;#39;s that will help the department scale. I&amp;#39;m scrappy when it comes to learning software/tech, and I know that I can do it.&lt;/p&gt;\n\n&lt;p&gt;My questions are:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;How to use PgAdmin4 to start a database, and create tables and views using data that I compile?&lt;/li&gt;\n&lt;li&gt;How can I scrape data from websites, API&amp;#39;s, etc. that I can use to construct various useful tables for really any purpose?&lt;/li&gt;\n&lt;li&gt;How to manage credentials for users to my database?&lt;/li&gt;\n&lt;li&gt;What are the skills necessary that I &lt;em&gt;need&lt;/em&gt; to have in order to become a full-fledged DBA? Any programming languages that I need to learn, different syntaxes, etc.&lt;/li&gt;\n&lt;li&gt;Finally, is PgAdmin4 the best way to even do these things? I&amp;#39;ve heard of other platforms, such as Postico. Any thoughts there?&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;I&amp;#39;m clearly a noob here. I just want to get linked to resources for someone who wants to start a career in being a DBA. I already have PgAdmin4 installed using instructions found &lt;a href="http://www.postgresqltutorial.com/"&gt;here&lt;/a&gt;. I have a few other tools installed, like Docker and Pritunl for a VPN (I don&amp;#39;t know how effective they&amp;#39;ll be). I&amp;#39;ve mostly just followed random instructions that I&amp;#39;ve read here and there.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for pointing me in the right direction. Being a DBA just sounds incredible and I want nothing more than to learn all I can.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/Z8hZMXJoqZ5QQfsfpRahF08AGuyWDgO6C21oUtdshFs.jpg?auto=webp&amp;s=1e6e95aa2ceb9749bdd4af63f79e6e4dde96e746',
                  width: 150,
                  height: 150
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/Z8hZMXJoqZ5QQfsfpRahF08AGuyWDgO6C21oUtdshFs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=c2e64ccc909a6bd2b9051055d10f10a9cfb68de6',
                    width: 108,
                    height: 108
                  }
                ],
                variants: {},
                id: 'U9HbB2dfxPxpbHVlNkNPdHFxOdq_z3gA6tF-EHxRCUY'
              }
            ],
            enabled: false
          },
          media_only: false,
          link_flair_template_id: '87ea3c8c-85b1-11e6-a88b-0e1d80eba945',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: 'n00b',
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a61uxa',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'chaboi_menos',
          num_crossposts: 0,
          num_comments: 13,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: 'dark',
          permalink:
            '/r/PostgreSQL/comments/a61uxa/how_to_get_started_with_pgadmin4_hopeful_dba/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a61uxa/how_to_get_started_with_pgadmin4_hopeful_dba/',
          subreddit_subscribers: 9388,
          created_utc: 1544765068,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'reactjs',
          selftext:
            "OK, so I've spent literally all day at this and I'm no closer than when I started.\n\nI'm using Next.js. I have a PostgreSQL database setup on my Vultr server, which is also running the Next.js app. I want to be able to perform CRUD operations in the Next.js app on the database. I want it to expose an API so I can access the database from a different server. or server instance Why is this so damn hard?\n\nIdeally I'd like to use GraphQL but I'm having enough trouble getting a REST API setup so I might leave that for later.\n\nI have an existing app so I don't want to clone a repo to get it working and have to start over from scratch.\n\nCan anyone provide any advice? I'm so close to giving up.",
          author_fullname: 't2_29z0koay',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '14 hours later, still at step 0... How the hell do I connect React (Next.js) to a PostgreSQL database???',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/reactjs',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ax7wg8',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.reactjs',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551710883,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;OK, so I&amp;#39;ve spent literally all day at this and I&amp;#39;m no closer than when I started.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m using Next.js. I have a PostgreSQL database setup on my Vultr server, which is also running the Next.js app. I want to be able to perform CRUD operations in the Next.js app on the database. I want it to expose an API so I can access the database from a different server. or server instance Why is this so damn hard?&lt;/p&gt;\n\n&lt;p&gt;Ideally I&amp;#39;d like to use GraphQL but I&amp;#39;m having enough trouble getting a REST API setup so I might leave that for later.&lt;/p&gt;\n\n&lt;p&gt;I have an existing app so I don&amp;#39;t want to clone a repo to get it working and have to start over from scratch.&lt;/p&gt;\n\n&lt;p&gt;Can anyone provide any advice? I&amp;#39;m so close to giving up.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'confidence',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2zldd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ax7wg8',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'stupid-sexy-jake',
          num_crossposts: 0,
          num_comments: 15,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/reactjs/comments/ax7wg8/14_hours_later_still_at_step_0_how_the_hell_do_i/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/reactjs/comments/ax7wg8/14_hours_later_still_at_step_0_how_the_hell_do_i/',
          subreddit_subscribers: 104856,
          created_utc: 1551710883,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "PostgreSQL 10.x, PostgREST 5.1, React 16 front end\n\nHi guys.\n\nJust want to get your thoughts. I'm on a year-long project that has about four months left. It's on PostgreSQL 10.x. I'm of the mind that we should stay on 10.x until launch and then consider porting the back end to 11.x. I'm using a few extensions and don't want to spend cycles testing compatibility right now, among other things.\n\nWhat are some of your thoughts and factors to consider on how to decide whether or not to make a change like this mid-project?",
          author_fullname: 't2_a44wy12',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'So what are thoughts on upgrade from 10.x to 11.x mid-project?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a2ido1',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 7,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 7,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543791619,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;PostgreSQL 10.x, PostgREST 5.1, React 16 front end&lt;/p&gt;\n\n&lt;p&gt;Hi guys.&lt;/p&gt;\n\n&lt;p&gt;Just want to get your thoughts. I&amp;#39;m on a year-long project that has about four months left. It&amp;#39;s on PostgreSQL 10.x. I&amp;#39;m of the mind that we should stay on 10.x until launch and then consider porting the back end to 11.x. I&amp;#39;m using a few extensions and don&amp;#39;t want to spend cycles testing compatibility right now, among other things.&lt;/p&gt;\n\n&lt;p&gt;What are some of your thoughts and factors to consider on how to decide whether or not to make a change like this mid-project?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a2ido1',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'NickEmpetvee',
          num_crossposts: 0,
          num_comments: 11,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a2ido1/so_what_are_thoughts_on_upgrade_from_10x_to_11x/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a2ido1/so_what_are_thoughts_on_upgrade_from_10x_to_11x/',
          subreddit_subscribers: 9388,
          created_utc: 1543791619,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Hi all,\n\nI am currently faced with an issue where I must convert accented characters to their non accented form (IE é-&gt;e). I played around with using translate to get a hard-coded map from each accented character to its non-accented counterpart, but I would prefer to use something less hard-coded just in case I missed anything. I tried using the to\\_ascii function with no luck. Anyone have any good ways of handling accented UTF-8 characters in PostgreSQL?',
          author_fullname: 't2_1ntcwsvx',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'How to convert accented characters to base form?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a2kmxl',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543807521,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;I am currently faced with an issue where I must convert accented characters to their non accented form (IE é-&amp;gt;e). I played around with using translate to get a hard-coded map from each accented character to its non-accented counterpart, but I would prefer to use something less hard-coded just in case I missed anything. I tried using the to_ascii function with no luck. Anyone have any good ways of handling accented UTF-8 characters in PostgreSQL?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a2kmxl',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'EconGnome',
          num_crossposts: 0,
          num_comments: 13,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a2kmxl/how_to_convert_accented_characters_to_base_form/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a2kmxl/how_to_convert_accented_characters_to_base_form/',
          subreddit_subscribers: 9388,
          created_utc: 1543807521,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'gis',
          selftext:
            "Our organization is considering getting Enterprise. We're considering SQL Server for the RDBMS, but I pointed out that PostgreSQL is free. Does anyone have experience as to which one is better (e.g. works more seamlessly, easier to understand)? We would be getting a Standard License for ArcGIS Enterprise. Let me know if I can provide more details.",
          author_fullname: 't2_g2hio',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'ArcGIS Enterprise - SQL Server vs. PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/gis',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a71alf',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: '',
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.gis',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: '4a485834-2505-11e2-8742-12313b088941',
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: '',
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1545064188,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Our organization is considering getting Enterprise. We&amp;#39;re considering SQL Server for the RDBMS, but I pointed out that PostgreSQL is free. Does anyone have experience as to which one is better (e.g. works more seamlessly, easier to understand)? We would be getting a Standard License for ArcGIS Enterprise. Let me know if I can provide more details.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: 'GIS Technician',
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qmpb',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a71alf',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'scaredortolan',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: 'dark',
          permalink:
            '/r/gis/comments/a71alf/arcgis_enterprise_sql_server_vs_postgresql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/gis/comments/a71alf/arcgis_enterprise_sql_server_vs_postgresql/',
          subreddit_subscribers: 33256,
          created_utc: 1545064188,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            "Hi, \n&amp;nbsp;\nWe are using Aurora PostgreSQL 10 and we are using audit triggers (https://github.com/2ndQuadrant/audit-trigger) to store logs of inserts/updates/deletes to a separate table. We only monitor a limited number of tables for changes, but I'd like to monitor everything if possible.\n\n&amp;nbsp; \n\nI'm interested to hear what other people are doing for this? Thoughts and experiences?\n\n * I'd like to store it outside of our database, so where? S3, DynamoDB?\n * Would like to be able to query it if needed?\n * Whats the best way to move the data out of the existing DB--thinking nightly job that moves the records.  Then another job that monitors destination and when it sees a new row it deletes it from the audit log (want to ensure that there is no chance to losing data.)\n * I'm also open to changing the way the audit trigger works--if there is a better approach?\n\n",
          author_fullname: 't2_66z0a',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL audit logs - best place to store?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: '',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b45q9s',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'technical question',
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553264973,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, \n&amp;nbsp;\nWe are using Aurora PostgreSQL 10 and we are using audit triggers (&lt;a href="https://github.com/2ndQuadrant/audit-trigger"&gt;https://github.com/2ndQuadrant/audit-trigger&lt;/a&gt;) to store logs of inserts/updates/deletes to a separate table. We only monitor a limited number of tables for changes, but I&amp;#39;d like to monitor everything if possible.&lt;/p&gt;\n\n&lt;p&gt;&amp;nbsp; &lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m interested to hear what other people are doing for this? Thoughts and experiences?&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;I&amp;#39;d like to store it outside of our database, so where? S3, DynamoDB?&lt;/li&gt;\n&lt;li&gt;Would like to be able to query it if needed?&lt;/li&gt;\n&lt;li&gt;Whats the best way to move the data out of the existing DB--thinking nightly job that moves the records.  Then another job that monitors destination and when it sees a new row it deletes it from the audit log (want to ensure that there is no chance to losing data.)&lt;/li&gt;\n&lt;li&gt;I&amp;#39;m also open to changing the way the audit trigger works--if there is a better approach?&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/nB-552pHyvd117WwZXo9l2PdBqgUs1Eu1BJZaS7MOkA.jpg?auto=webp&amp;s=cd071580071d308b59ab9efd78cd7f85e4e830cb',
                  width: 46,
                  height: 46
                },
                resolutions: [],
                variants: {},
                id: 'GsQ0nvOznOhb847xUmV2K-1K4_jGF_Fov-BDpwfObxk'
              }
            ],
            enabled: false
          },
          media_only: false,
          link_flair_template_id: 'e0acaab0-fe51-11e8-b457-0e86fa5111f4',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '#dadada',
          id: 'b45q9s',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'jebarnard',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/b45q9s/postgresql_audit_logs_best_place_to_store/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/b45q9s/postgresql_audit_logs_best_place_to_store/',
          subreddit_subscribers: 66268,
          created_utc: 1553264973,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'node',
          selftext:
            'Easy Problem, easy question.\n\nIs there anything resembling JSON.stringify that converts an array to the PostgreSQL array Format? Would Like to not go over stringified arrays and modify Them every time i want to insert or select from my DB.',
          author_fullname: 't2_jexdi',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL Arrays and Node.js',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/node',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_as15vt',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.node',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550519145,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Easy Problem, easy question.&lt;/p&gt;\n\n&lt;p&gt;Is there anything resembling JSON.stringify that converts an array to the PostgreSQL array Format? Would Like to not go over stringified arrays and modify Them every time i want to insert or select from my DB.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2reca',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'as15vt',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Saik1992',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/node/comments/as15vt/postgresql_arrays_and_nodejs/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/node/comments/as15vt/postgresql_arrays_and_nodejs/',
          subreddit_subscribers: 109433,
          created_utc: 1550519145,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'CentOS',
          selftext:
            'I’ve set up a PostgreSQL 9.5 server on 7.4, and I’m interested in upgrading the distro with the latest updates for performance and security. I want to leave PostgreSQL and the `firewalld` settings totally unchanged.\n\nAnything in particular that I should watch out for before running `$ sudo yum update`?',
          author_fullname: 't2_5cp0r',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Updating CentOS distro while keeping PostgreSQL installation intact?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/CentOS',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_auu66n',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.CentOS',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551150210,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I’ve set up a PostgreSQL 9.5 server on 7.4, and I’m interested in upgrading the distro with the latest updates for performance and security. I want to leave PostgreSQL and the &lt;code&gt;firewalld&lt;/code&gt; settings totally unchanged.&lt;/p&gt;\n\n&lt;p&gt;Anything in particular that I should watch out for before running &lt;code&gt;$ sudo yum update&lt;/code&gt;?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2s6fk',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'auu66n',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'sethgoldin',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/CentOS/comments/auu66n/updating_centos_distro_while_keeping_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/CentOS/comments/auu66n/updating_centos_distro_while_keeping_postgresql/',
          subreddit_subscribers: 9515,
          created_utc: 1551150210,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'u_Certs4sale5',
          selftext:
            " \n\n# Certs4Sale Is Here To Provide Pertinent PostgreSQL PGCES-02 Assessment Materials \n\nAre you the type of person who studies all the PostgreSQL PGCES-02 contents that are pertinent but it's not ever happy with their preparation? Do you feel anxious or blank out throughout the PostgreSQL CE 8 Silver ? If so Certs4Sale has solution for you. Knock out the PostgreSQL PGCES-02 Assessment jitters by buying the PGCES-02 Exam preparatory material. We realize the exact requirements and requirements that will verify departure the PGCES-02 Assessment. The course content is always updated by us so that it remains relevant to the PostgreSQL Certified Engineer examination and delivers the want repercussions. A higher success rate has been accomplished by Vast majority of our candidates.\n\n📷\n\nhttps://i.redd.it/f5r03l2q2to21.png\n\n**Pump Up Your PostgreSQL CE 8 Silver Success Together With Certs4Sale.Com**\n\n[Https://Www.Certs4Sale.Com/PostgreSQL/PGCES-02-pdf-exam-dumps ](https://www.certs4sale.com/PostgreSQL/PGCES-02-pdf-exam-dumps)\n\n## Certs4Sale Can Supply PostgreSQL PGCES-02 Exam Material To Acquire Specific Skills:\n\nChoosing the PostgreSQL Certified Engineer can help you in identifying an exclusive group of licensed professionals that will finally lead you to the perfect employer that needs your skills. You are able to meet up to address complex questions or discuss answers to challenging scenarios that can appear on the PGCES-02 Assessment. Certs4Sale has developed the content to suit individual needs and assist you to link with all these individuals.\n\n### Mock Tests Assist To Ace You In PostgreSQL PGCES-02 Exam:\n\nAttain your target score by studying for  PostgreSQL CE 8 Silver  PGCES-02 Examination by simply practicing questions on the mock test designed by Certs4Sale. These tests incorporate questions which are extremely similar to the ones that can appear on the PostgreSQL Certified Engineer . Not only will this increase understanding and familiarity but also intends to buck up your confidence and help you rank in toppers.\n\n### Certs4Sale Material Ensures That You Will Be Able To Retain The PostgreSQL PGCES-02 Concepts:\n\nPreparing with material guide ensures that you will have the ability to keep the theories for PostgreSQL PGCES-02 certificate. You will be required to show a specific quantity of commitment when it comes to acing from the PostgreSQL Certified Engineer PostgreSQL CE 8 Silver PGCES-02 Exam. The guidebook is designed in a way that you can learn the shortcuts and tricks essential for getting a high score on the PostgreSQL CE 8 Silver PGCES-02 Exam.It is supposed that the candidates get aware of the PostgreSQL PGCES-02 pattern. It's crucial to comprehend the principles to be prosperous.\n\n### Certs4Sale Help You In Gaining High Marks In PostgreSQL PGCES-02 Assessment Without Taking Stress And Anxiety:\n\nPreparing it and grabbing your copy of material that is Certs4Sale can guarantee a high score on the PGCES-02 . Examinations like the one offered by PostgreSQL comes with a lot of pressure that some folks are unable to take care of Certs4Sale intends to assist an individual deal with this stress, resulting in achieving a top score. We offer you that you require so as to obtain the PostgreSQL Certified Engineer . This ultimately gives you definite self-assurance, fostering your conviction which can allow you to work on the Assessment. This self-confidence will come from practicing the evaluations and covering the syllabus according to our material and being familiar with the PGCES-02 design.\n\n### Certs4Sale Offers 100% Money Invest back Guarantee:\n\nWith all the stress around PGCES-02 Evaluation, evaluations or expensive practice sessions goes to add pressure. Since we repay the amount you spent if you are unable to score well, one are relived by certs4Sale of the weight. Do not lose your money because you're unable to clean the Certs4Sale Examination at the first effort. There are numerous businesses that offer excellent results, however they do no security or evidence security. Certs4Sale offers a money back guarantee. Your triumph is our win!\n\n📷\n\n**Pump Up Your PostgreSQL CE 8 Silver Success Together With Certs4Sale.Com**\n\n[Https://Www.Certs4Sale.Com/PostgreSQL/PGCES-02-pdf-exam-dumps ](https://www.certs4sale.com/PostgreSQL/PGCES-02-pdf-exam-dumps)",
          author_fullname: 't2_30boqeyq',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'PostgreSQL PGCES-02 Exam Dumps - PostgreSQL CE 8 Silver PGCES-02 Exam PDF [2019]',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'u/Certs4sale5',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: 93,
          hide_score: false,
          media_metadata: {
            f5r03l2q2to21: {
              status: 'valid',
              e: 'Image',
              s: {
                y: 400,
                x: 600,
                u: 'https://i.redd.it/f5r03l2q2to21.png'
              },
              m: 'image/png',
              id: 'f5r03l2q2to21'
            }
          },
          name: 't3_b6fgdo',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'user',
          ups: 1,
          domain: 'self.Certs4sale5',
          media_embed: {},
          thumbnail_width: 140,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail:
            'https://b.thumbs.redditmedia.com/kG9IRCFFJFSf1x_UZkWR8yrvLzuH5_PVWlVKBLxjFYM.jpg',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553755306,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;h1&gt;Certs4Sale Is Here To Provide Pertinent PostgreSQL PGCES-02 Assessment Materials&lt;/h1&gt;\n\n&lt;p&gt;Are you the type of person who studies all the PostgreSQL PGCES-02 contents that are pertinent but it&amp;#39;s not ever happy with their preparation? Do you feel anxious or blank out throughout the PostgreSQL CE 8 Silver ? If so Certs4Sale has solution for you. Knock out the PostgreSQL PGCES-02 Assessment jitters by buying the PGCES-02 Exam preparatory material. We realize the exact requirements and requirements that will verify departure the PGCES-02 Assessment. The course content is always updated by us so that it remains relevant to the PostgreSQL Certified Engineer examination and delivers the want repercussions. A higher success rate has been accomplished by Vast majority of our candidates.&lt;/p&gt;\n\n&lt;p&gt;📷&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://i.redd.it/f5r03l2q2to21.png"&gt;https://i.redd.it/f5r03l2q2to21.png&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Pump Up Your PostgreSQL CE 8 Silver Success Together With Certs4Sale.Com&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://www.certs4sale.com/PostgreSQL/PGCES-02-pdf-exam-dumps"&gt;Https://Www.Certs4Sale.Com/PostgreSQL/PGCES-02-pdf-exam-dumps &lt;/a&gt;&lt;/p&gt;\n\n&lt;h2&gt;Certs4Sale Can Supply PostgreSQL PGCES-02 Exam Material To Acquire Specific Skills:&lt;/h2&gt;\n\n&lt;p&gt;Choosing the PostgreSQL Certified Engineer can help you in identifying an exclusive group of licensed professionals that will finally lead you to the perfect employer that needs your skills. You are able to meet up to address complex questions or discuss answers to challenging scenarios that can appear on the PGCES-02 Assessment. Certs4Sale has developed the content to suit individual needs and assist you to link with all these individuals.&lt;/p&gt;\n\n&lt;h3&gt;Mock Tests Assist To Ace You In PostgreSQL PGCES-02 Exam:&lt;/h3&gt;\n\n&lt;p&gt;Attain your target score by studying for  PostgreSQL CE 8 Silver  PGCES-02 Examination by simply practicing questions on the mock test designed by Certs4Sale. These tests incorporate questions which are extremely similar to the ones that can appear on the PostgreSQL Certified Engineer . Not only will this increase understanding and familiarity but also intends to buck up your confidence and help you rank in toppers.&lt;/p&gt;\n\n&lt;h3&gt;Certs4Sale Material Ensures That You Will Be Able To Retain The PostgreSQL PGCES-02 Concepts:&lt;/h3&gt;\n\n&lt;p&gt;Preparing with material guide ensures that you will have the ability to keep the theories for PostgreSQL PGCES-02 certificate. You will be required to show a specific quantity of commitment when it comes to acing from the PostgreSQL Certified Engineer PostgreSQL CE 8 Silver PGCES-02 Exam. The guidebook is designed in a way that you can learn the shortcuts and tricks essential for getting a high score on the PostgreSQL CE 8 Silver PGCES-02 Exam.It is supposed that the candidates get aware of the PostgreSQL PGCES-02 pattern. It&amp;#39;s crucial to comprehend the principles to be prosperous.&lt;/p&gt;\n\n&lt;h3&gt;Certs4Sale Help You In Gaining High Marks In PostgreSQL PGCES-02 Assessment Without Taking Stress And Anxiety:&lt;/h3&gt;\n\n&lt;p&gt;Preparing it and grabbing your copy of material that is Certs4Sale can guarantee a high score on the PGCES-02 . Examinations like the one offered by PostgreSQL comes with a lot of pressure that some folks are unable to take care of Certs4Sale intends to assist an individual deal with this stress, resulting in achieving a top score. We offer you that you require so as to obtain the PostgreSQL Certified Engineer . This ultimately gives you definite self-assurance, fostering your conviction which can allow you to work on the Assessment. This self-confidence will come from practicing the evaluations and covering the syllabus according to our material and being familiar with the PGCES-02 design.&lt;/p&gt;\n\n&lt;h3&gt;Certs4Sale Offers 100% Money Invest back Guarantee:&lt;/h3&gt;\n\n&lt;p&gt;With all the stress around PGCES-02 Evaluation, evaluations or expensive practice sessions goes to add pressure. Since we repay the amount you spent if you are unable to score well, one are relived by certs4Sale of the weight. Do not lose your money because you&amp;#39;re unable to clean the Certs4Sale Examination at the first effort. There are numerous businesses that offer excellent results, however they do no security or evidence security. Certs4Sale offers a money back guarantee. Your triumph is our win!&lt;/p&gt;\n\n&lt;p&gt;📷&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Pump Up Your PostgreSQL CE 8 Silver Success Together With Certs4Sale.Com&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://www.certs4sale.com/PostgreSQL/PGCES-02-pdf-exam-dumps"&gt;Https://Www.Certs4Sale.Com/PostgreSQL/PGCES-02-pdf-exam-dumps &lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'qa',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_usih4',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b6fgdo',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Certs4sale5',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/u_Certs4sale5/comments/b6fgdo/postgresql_pgces02_exam_dumps_postgresql_ce_8/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/u_Certs4sale5/comments/b6fgdo/postgresql_pgces02_exam_dumps_postgresql_ce_8/',
          subreddit_subscribers: 0,
          created_utc: 1553755306,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Greetings All!\n\nAllow me to preface this by saying I have little to no experience with Linux. Over the past few weeks I have gained rudimentary knowledge and am currently taking a basic Orielly Linux class.\n\nI am trying to get postrgresql 11 up and running on an Centos 7 system. Specifically I am having problems getting PgAdmin4 to start. I have found 2 different guides, one which ends with PgAdmin4 running in web browser mode and one which ends with it as a standalone app. I have been unsuccessful with both.\n\nFor the browser mode, when I attempt to put in the address of the server in my browser it cannot be found. For the standalone app, I am having issues with my python version (I think). \n\n&amp;#x200B;\n\nI will be happy to post the 2 guides and my results if someone wants to try to solve those problems, but I was hoping someone could point me to something amounting to a step by step guide to installing PostgreSQL and Pgadmin4 on a clean Centos7 install.\n\n&amp;#x200B;\n\nThanks in advance for your time',
          author_fullname: 't2_10l0uc',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Help for Linux neophite',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_abtkh3',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1546437064,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Greetings All!&lt;/p&gt;\n\n&lt;p&gt;Allow me to preface this by saying I have little to no experience with Linux. Over the past few weeks I have gained rudimentary knowledge and am currently taking a basic Orielly Linux class.&lt;/p&gt;\n\n&lt;p&gt;I am trying to get postrgresql 11 up and running on an Centos 7 system. Specifically I am having problems getting PgAdmin4 to start. I have found 2 different guides, one which ends with PgAdmin4 running in web browser mode and one which ends with it as a standalone app. I have been unsuccessful with both.&lt;/p&gt;\n\n&lt;p&gt;For the browser mode, when I attempt to put in the address of the server in my browser it cannot be found. For the standalone app, I am having issues with my python version (I think). &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I will be happy to post the 2 guides and my results if someone wants to try to solve those problems, but I was hoping someone could point me to something amounting to a step by step guide to installing PostgreSQL and Pgadmin4 on a clean Centos7 install.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for your time&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'abtkh3',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'etnorias86',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/PostgreSQL/comments/abtkh3/help_for_linux_neophite/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/abtkh3/help_for_linux_neophite/',
          subreddit_subscribers: 9388,
          created_utc: 1546437064,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            '[https://github.com/apsavin/pgrights](https://github.com/apsavin/pgrights)\n\n&amp;#x200B;\n\nHello!\n\n&amp;#x200B;\n\nI worked a lot with PostgreSQL RLS policies recently and decided to write a simple GUI tool that would be helpful when you need to take a look around rights in your database. The main aim is to answer the question "what this role can do with this table, it\'s columns and rows?"\n\n&amp;#x200B;\n\nThe project is still in beta, but I would like to know, what does the community think? Is it a good idea to build an app like this? A bad? Will you use it?\n\n&amp;#x200B;\n\nP.S. I use Electron, so the app should work everywhere, but I publish only dmg files because I have no linux nor win for tests. Please, build from source if you use linux or win and want to try.',
          author_fullname: 't2_4wism',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'GUI for PostgreSQL roles, privileges and policies',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b1y07a',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 21,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 21,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552774208,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://github.com/apsavin/pgrights"&gt;https://github.com/apsavin/pgrights&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Hello!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I worked a lot with PostgreSQL RLS policies recently and decided to write a simple GUI tool that would be helpful when you need to take a look around rights in your database. The main aim is to answer the question &amp;quot;what this role can do with this table, it&amp;#39;s columns and rows?&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The project is still in beta, but I would like to know, what does the community think? Is it a good idea to build an app like this? A bad? Will you use it?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;P.S. I use Electron, so the app should work everywhere, but I publish only dmg files because I have no linux nor win for tests. Please, build from source if you use linux or win and want to try.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/tGjGXvspGtBDS08yuG15UxT7CMhhNt1j8xg1hgxKi7Q.jpg?auto=webp&amp;s=7c3d8b98bf78812c7b7993d457cd9ec25ad23a77',
                  width: 200,
                  height: 200
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/tGjGXvspGtBDS08yuG15UxT7CMhhNt1j8xg1hgxKi7Q.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=186f3f5160b2fdbb3f39685cf6d8de7971893225',
                    width: 108,
                    height: 108
                  }
                ],
                variants: {},
                id: 'quifYOP5KfKY-vOTFhr7PT5KXQWu16KHvWoM9XH7ubw'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b1y07a',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'apsavin',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/b1y07a/gui_for_postgresql_roles_privileges_and_policies/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/b1y07a/gui_for_postgresql_roles_privileges_and_policies/',
          subreddit_subscribers: 9388,
          created_utc: 1552774208,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'Database',
          selftext:
            "Apologies in advance if this is an inappropriate sub for asking this question.\n\n**TLDR**: What's the best way to migrate a small Access database to a\ncross-platform, FOSS alternative?\n\nI am a lab manager at a university, and part of my duties are managing the lab's\ndata. Prior to my on-boarding, data management practices have been poor. One of\nthe lab's most important research projects uses an Access database, which is\nstored locally on a student's computer and manually backed up periodically using\nGoogle Drive's \"Manage versions\" tool.\n\nI recognize that our current practices are a nightmare. I want to change this,\nbut I am new to the database world. I can write simple SQL queries, but most of\nmy programming skills are in **R**, not SQL. My colleagues (the other users of this database) are computer literate\n(in the basic sense), know or are learning the basics of **R** for data science,\nbut none other than me know any SQL. Thankfully, SQL is pretty easy to learn.\n\nThe current Access database has about 15 tables and about 30 relationships with\nonly 3 users (including me) who never use the database simultaneously. During\nour active field season, the number of users grows to 10 or so when we have\nmultiple field technicians entering data at the same time. For this, the back\nend of the database is hosted on a network drive, and each user enters data on\nhis/her own front end. This seems like a poor hack at best. In addition, our\nprojects spatial data is housed separately as a rag tag collection of\nShapefiles, KMLs, and other formats. I would like to change this as well.\n\nIn all, I can allocate about 200 hours of work time to this database migration\nover the course of 9 months. I think I have my work cut out for me.\n\nTo summarize, I'll list a few needs and wants for this database:\n\n**Needs**\n\nThese things are absolutely needed.\n\n- Usability: users can easily learn to read and write data accurately\n- Portability: users can quickly get up and running on Windows, Mac, and Linux\n- Maintainability: (future) admins can learn quickly\n\n**Wants**\n\nThese things would be great, but aren't absolutely needed.\n\n- Availability: users can read and write data simultaneously\n- Extensibility: admins can add new features easily (e.g. a new experiment)\n\n**Luxuries**\nThese things are pure bonus.\n\n- Security\n- Scalability\n\nThe best technology solution I can come up with for this is PostgreSQL with PostGIS. What do you all think?",
          author_fullname: 't2_fgn2w',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Leaving MS Access',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/Database',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9ofwfz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 7,
          domain: 'self.Database',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 7,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1539631661,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Apologies in advance if this is an inappropriate sub for asking this question.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;TLDR&lt;/strong&gt;: What&amp;#39;s the best way to migrate a small Access database to a\ncross-platform, FOSS alternative?&lt;/p&gt;\n\n&lt;p&gt;I am a lab manager at a university, and part of my duties are managing the lab&amp;#39;s\ndata. Prior to my on-boarding, data management practices have been poor. One of\nthe lab&amp;#39;s most important research projects uses an Access database, which is\nstored locally on a student&amp;#39;s computer and manually backed up periodically using\nGoogle Drive&amp;#39;s &amp;quot;Manage versions&amp;quot; tool.&lt;/p&gt;\n\n&lt;p&gt;I recognize that our current practices are a nightmare. I want to change this,\nbut I am new to the database world. I can write simple SQL queries, but most of\nmy programming skills are in &lt;strong&gt;R&lt;/strong&gt;, not SQL. My colleagues (the other users of this database) are computer literate\n(in the basic sense), know or are learning the basics of &lt;strong&gt;R&lt;/strong&gt; for data science,\nbut none other than me know any SQL. Thankfully, SQL is pretty easy to learn.&lt;/p&gt;\n\n&lt;p&gt;The current Access database has about 15 tables and about 30 relationships with\nonly 3 users (including me) who never use the database simultaneously. During\nour active field season, the number of users grows to 10 or so when we have\nmultiple field technicians entering data at the same time. For this, the back\nend of the database is hosted on a network drive, and each user enters data on\nhis/her own front end. This seems like a poor hack at best. In addition, our\nprojects spatial data is housed separately as a rag tag collection of\nShapefiles, KMLs, and other formats. I would like to change this as well.&lt;/p&gt;\n\n&lt;p&gt;In all, I can allocate about 200 hours of work time to this database migration\nover the course of 9 months. I think I have my work cut out for me.&lt;/p&gt;\n\n&lt;p&gt;To summarize, I&amp;#39;ll list a few needs and wants for this database:&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Needs&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;These things are absolutely needed.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Usability: users can easily learn to read and write data accurately&lt;/li&gt;\n&lt;li&gt;Portability: users can quickly get up and running on Windows, Mac, and Linux&lt;/li&gt;\n&lt;li&gt;Maintainability: (future) admins can learn quickly&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Wants&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;These things would be great, but aren&amp;#39;t absolutely needed.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Availability: users can read and write data simultaneously&lt;/li&gt;\n&lt;li&gt;Extensibility: admins can add new features easily (e.g. a new experiment)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&lt;strong&gt;Luxuries&lt;/strong&gt;\nThese things are pure bonus.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Security&lt;/li&gt;\n&lt;li&gt;Scalability&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;The best technology solution I can come up with for this is PostgreSQL with PostGIS. What do you all think?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qian',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9ofwfz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'mrrchit',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/Database/comments/9ofwfz/leaving_ms_access/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/Database/comments/9ofwfz/leaving_ms_access/',
          subreddit_subscribers: 21079,
          created_utc: 1539631661,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'learnprogramming',
          selftext:
            "I started watching PostgreSQL recently but I'm stuck on the starting phase. I've no idea about anything.I installed PostgreSQL and pgadmin4 from the software center but now I have no idea about anything.",
          author_fullname: 't2_my6he90',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL on Manjaro 18.',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/learnprogramming',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b3ogvt',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.learnprogramming',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553160622,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I started watching PostgreSQL recently but I&amp;#39;m stuck on the starting phase. I&amp;#39;ve no idea about anything.I installed PostgreSQL and pgadmin4 from the software center but now I have no idea about anything.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2r7yd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b3ogvt',
          is_robot_indexable: true,
          report_reasons: null,
          author: '11Night',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/learnprogramming/comments/b3ogvt/postgresql_on_manjaro_18/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/learnprogramming/comments/b3ogvt/postgresql_on_manjaro_18/',
          subreddit_subscribers: 923450,
          created_utc: 1553160622,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            "I have my Django app and PostgreSQL database set up on two EC2  instances (Ubuntu 16.04) in the same VPC. App is on the instance with subnet connected  to internet gateway; database is on instance with subnet that has no  internet gateway.\n\nThe app instance's private IP is 10.0.0.164; the database instance's private IP is 10.0.1.136.\n\nWhen I try to connect my Django app to the database, I get the error\n\n&gt;could not connect to server: Connection refusedIs the server running   on host \"10.0.1.136\" and accepting    TCP/IP connections on port 5432?\n\nHowever, I have allowed inbound TCP traffic on port 5432 on the  database instance. My security group rules for the instance that hosts  the database:\n\nInbound: allow all TCP and ICMP IPV4&amp;IPV6 traffic in all ports  from the internal IP address of the instance hosting the Django app  (10.0.0.164/32)\n\n(screenshot of my inbound rules [https://imgur.com/a/HNbrIDm](https://imgur.com/a/HNbrIDm))\n\nOutbound: allow all traffic in all ports to anywhere\n\nMy pg\\_hba.conf file on the database EC2 instance: [https://imgur.com/a/IL6dWTu](https://imgur.com/a/IL6dWTu)\n\nMy postgresql.conf file has set listening address to '10.0.0.164, 127.0.0.1' and port to '5432'.\n\nMy database settings in Django's settings.py:\n\n    ENGINE': 'django.db.backends.postgresql_psycopg2',             \n    'NAME': 'articles',             \n    'USER': 'postgres',             \n    'PASSWORD': 'password',             \n    'HOST': '10.0.1.136',             \n    'PORT': '5432',\n\nWhat is possibly blocking the connection on port 5432????\n\n&amp;#x200B;\n\n&amp;#x200B;\n\n&amp;#x200B;",
          author_fullname: 't2_zowbk',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            "What on earth is blocking my app's connection to my PostgreSQL database hosted on EC2???",
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: '',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b0v3qa',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'technical question',
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: 1552533812,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552531992,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have my Django app and PostgreSQL database set up on two EC2  instances (Ubuntu 16.04) in the same VPC. App is on the instance with subnet connected  to internet gateway; database is on instance with subnet that has no  internet gateway.&lt;/p&gt;\n\n&lt;p&gt;The app instance&amp;#39;s private IP is 10.0.0.164; the database instance&amp;#39;s private IP is 10.0.1.136.&lt;/p&gt;\n\n&lt;p&gt;When I try to connect my Django app to the database, I get the error&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;could not connect to server: Connection refusedIs the server running   on host &amp;quot;10.0.1.136&amp;quot; and accepting    TCP/IP connections on port 5432?&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;However, I have allowed inbound TCP traffic on port 5432 on the  database instance. My security group rules for the instance that hosts  the database:&lt;/p&gt;\n\n&lt;p&gt;Inbound: allow all TCP and ICMP IPV4&amp;amp;IPV6 traffic in all ports  from the internal IP address of the instance hosting the Django app  (10.0.0.164/32)&lt;/p&gt;\n\n&lt;p&gt;(screenshot of my inbound rules &lt;a href="https://imgur.com/a/HNbrIDm"&gt;https://imgur.com/a/HNbrIDm&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Outbound: allow all traffic in all ports to anywhere&lt;/p&gt;\n\n&lt;p&gt;My pg_hba.conf file on the database EC2 instance: &lt;a href="https://imgur.com/a/IL6dWTu"&gt;https://imgur.com/a/IL6dWTu&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;My postgresql.conf file has set listening address to &amp;#39;10.0.0.164, 127.0.0.1&amp;#39; and port to &amp;#39;5432&amp;#39;.&lt;/p&gt;\n\n&lt;p&gt;My database settings in Django&amp;#39;s settings.py:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;ENGINE&amp;#39;: &amp;#39;django.db.backends.postgresql_psycopg2&amp;#39;,             \n&amp;#39;NAME&amp;#39;: &amp;#39;articles&amp;#39;,             \n&amp;#39;USER&amp;#39;: &amp;#39;postgres&amp;#39;,             \n&amp;#39;PASSWORD&amp;#39;: &amp;#39;password&amp;#39;,             \n&amp;#39;HOST&amp;#39;: &amp;#39;10.0.1.136&amp;#39;,             \n&amp;#39;PORT&amp;#39;: &amp;#39;5432&amp;#39;,\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;What is possibly blocking the connection on port 5432????&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?auto=webp&amp;s=62d17e2b73750b1317dd59e05b9bf4dd13e922a0',
                  width: 1513,
                  height: 246
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4852f9ace90bb0c2eb806ef6c3472294b4b16c7e',
                    width: 108,
                    height: 17
                  },
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cf3bd16e23bccffd0d617c6fbd88c70fb3bee0ec',
                    width: 216,
                    height: 35
                  },
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7f6e7cfacfbe443e320adaf5a2a6d3f7c60b1f4a',
                    width: 320,
                    height: 52
                  },
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=92f10beb7a089302747e85d527c78c76c7b46756',
                    width: 640,
                    height: 104
                  },
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=64032ac98befc783a17ca17e46d3950cd907a803',
                    width: 960,
                    height: 156
                  },
                  {
                    url:
                      'https://external-preview.redd.it/PxM-FWrAZpRVpNS8kbTpsDs_v_PF-_4cE5Z2uQXf4GY.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=718a59647d791385364e2545c94dd2da3ebeb232',
                    width: 1080,
                    height: 175
                  }
                ],
                variants: {},
                id: 'Vqhcv80W5TspdtZR-z70648e7J7BvLfRviU9O_8L7zA'
              }
            ],
            enabled: false
          },
          media_only: false,
          link_flair_template_id: 'e0acaab0-fe51-11e8-b457-0e86fa5111f4',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '#dadada',
          id: 'b0v3qa',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'jesseparks13',
          num_crossposts: 0,
          num_comments: 3,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/b0v3qa/what_on_earth_is_blocking_my_apps_connection_to/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/b0v3qa/what_on_earth_is_blocking_my_apps_connection_to/',
          subreddit_subscribers: 66268,
          created_utc: 1552531992,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'postgres',
          selftext:
            "Well this is odd.  I've been a regular user of Postgres for several years - mostly personal, but some business use.  I'm running the latest CentOS (7.6.1810) with comes with Postgres 9.2.24.  \n\n&amp;#x200B;\n\nI created a new database, worked on it, changed its ownership. I was having trouble with the connect string.  (typical) \n\nI had a look at pg\\_ctl.cfg file.  I believe I uncommented the line for IPv6 authentication. then tried to restart the database and it would not not come up - saying port 5432 is already in use. I added the line back in.  It still wouldn't come up.     \n\n&amp;#x200B;\n\n    # systemctl sttus postgresql.service\n    ● postgresql.service - PostgreSQL database server\n    Loaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)\n    Active: failed (Result: exit-code) since Sun 2019-03-24 11:35:40 PDT; 11min ago\n    Process: 4785 ExecStart=/usr/bin/pg_ctl start -D ${PGDATA} -s -o -p ${PGPORT} -w -t 300 (code=exited, status=1/FAILURE)\n    Process: 4745 ExecStartPre=/usr/bin/postgresql-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)\n    Mar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not bind IPv4 socket: Address already in use\n    Mar 24 11:35:38 colossus pg_ctl[4785]: HINT: Is another postmaster already running on port 5432? If not, wait a few seconds and retry.\n    Mar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not create IPv6 socket: Address family not supported by protocol\n    Mar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not create IPv6 socket: Address family not supported by protocol\n    Mar 24 11:35:40 colossus pg_ctl[4785]: pg_ctl: could not start server\n    Mar 24 11:35:40 colossus pg_ctl[4785]: Examine the log output.\n    Mar 24 11:35:40 colossus systemd[1]: postgresql.service: control process exited, code=exited status=1\n    Mar 24 11:35:40 colossus systemd[1]: Failed to start PostgreSQL database server.\n    Mar 24 11:35:40 colossus systemd[1]: Unit postgresql.service entered failed state.\n    Mar 24 11:35:40 colossus systemd[1]: postgresql.service failed.\n\n&amp;#x200B;\n\nlsof shows nothing on port 5432.  I have ipv6 disabled in the kernel. I looked at journalctl in detail and learned a few things in its man page.  Googled all over the place, and then finally noticed....  \n\n&amp;#x200B;\n\n.. after catting and grepping the pg\\_ctl file I noticed a 'W' had snuck in at the beginning of one of the comment lines - I'd botched an earlier edit. Glad this wasn't production work.  Sheesh.  \n\n&amp;#x200B;\n\nFixed - works again.  \n\n&amp;#x200B;",
          author_fullname: 't2_flo8r',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Postgresql will not start (SOLVED)',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/postgres',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b506ye',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.postgres',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553454908,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Well this is odd.  I&amp;#39;ve been a regular user of Postgres for several years - mostly personal, but some business use.  I&amp;#39;m running the latest CentOS (7.6.1810) with comes with Postgres 9.2.24.  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I created a new database, worked on it, changed its ownership. I was having trouble with the connect string.  (typical) &lt;/p&gt;\n\n&lt;p&gt;I had a look at pg_ctl.cfg file.  I believe I uncommented the line for IPv6 authentication. then tried to restart the database and it would not not come up - saying port 5432 is already in use. I added the line back in.  It still wouldn&amp;#39;t come up.     &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;# systemctl sttus postgresql.service\n● postgresql.service - PostgreSQL database server\nLoaded: loaded (/usr/lib/systemd/system/postgresql.service; enabled; vendor preset: disabled)\nActive: failed (Result: exit-code) since Sun 2019-03-24 11:35:40 PDT; 11min ago\nProcess: 4785 ExecStart=/usr/bin/pg_ctl start -D ${PGDATA} -s -o -p ${PGPORT} -w -t 300 (code=exited, status=1/FAILURE)\nProcess: 4745 ExecStartPre=/usr/bin/postgresql-check-db-dir ${PGDATA} (code=exited, status=0/SUCCESS)\nMar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not bind IPv4 socket: Address already in use\nMar 24 11:35:38 colossus pg_ctl[4785]: HINT: Is another postmaster already running on port 5432? If not, wait a few seconds and retry.\nMar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not create IPv6 socket: Address family not supported by protocol\nMar 24 11:35:38 colossus pg_ctl[4785]: LOG: could not create IPv6 socket: Address family not supported by protocol\nMar 24 11:35:40 colossus pg_ctl[4785]: pg_ctl: could not start server\nMar 24 11:35:40 colossus pg_ctl[4785]: Examine the log output.\nMar 24 11:35:40 colossus systemd[1]: postgresql.service: control process exited, code=exited status=1\nMar 24 11:35:40 colossus systemd[1]: Failed to start PostgreSQL database server.\nMar 24 11:35:40 colossus systemd[1]: Unit postgresql.service entered failed state.\nMar 24 11:35:40 colossus systemd[1]: postgresql.service failed.\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;lsof shows nothing on port 5432.  I have ipv6 disabled in the kernel. I looked at journalctl in detail and learned a few things in its man page.  Googled all over the place, and then finally noticed....  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;.. after catting and grepping the pg_ctl file I noticed a &amp;#39;W&amp;#39; had snuck in at the beginning of one of the comment lines - I&amp;#39;d botched an earlier edit. Glad this wasn&amp;#39;t production work.  Sheesh.  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Fixed - works again.  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2unxg',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b506ye',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'sc04at',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/postgres/comments/b506ye/postgresql_will_not_start_solved/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/postgres/comments/b506ye/postgresql_will_not_start_solved/',
          subreddit_subscribers: 850,
          created_utc: 1553454908,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'dramatiq',
          selftext:
            "Hi @Bogdanp,\n\n&amp;#x200B;\n\nAre you interested in a PostgreSQL broker in dramatiq ? PostgreSQL implements NOTIFY/LISTEN that may help implementing a broker. If dramatiq had more brokers, that would help choosing dramatiq instead of Celery because it won't choose your infrastructure for you.\n\n&amp;#x200B;\n\nRegards,  \nÉtienne  \n\n\n&amp;#x200B;",
          author_fullname: 't2_6whd3d',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Add a PostgreSQL broker',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/dramatiq',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aqyb7i',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.dramatiq',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550248212,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi @Bogdanp,&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Are you interested in a PostgreSQL broker in dramatiq ? PostgreSQL implements NOTIFY/LISTEN that may help implementing a broker. If dramatiq had more brokers, that would help choosing dramatiq instead of Celery because it won&amp;#39;t choose your infrastructure for you.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Regards,&lt;br/&gt;\nÉtienne  &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_uacfz',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aqyb7i',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'bersace03',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/dramatiq/comments/aqyb7i/add_a_postgresql_broker/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/dramatiq/comments/aqyb7i/add_a_postgresql_broker/',
          subreddit_subscribers: 30,
          created_utc: 1550248212,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I don't have any prior knowledge in the database, as a beginner what is the best book to learn PostgreSQL ",
          author_fullname: 't2_28gfax7h',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'What is the Best book to learn PostgreSQL?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ampavf',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 9,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 9,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1549198369,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I don&amp;#39;t have any prior knowledge in the database, as a beginner what is the best book to learn PostgreSQL &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ampavf',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Chawki_',
          num_crossposts: 0,
          num_comments: 11,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/ampavf/what_is_the_best_book_to_learn_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/ampavf/what_is_the_best_book_to_learn_postgresql/',
          subreddit_subscribers: 9388,
          created_utc: 1549198369,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'openSUSE',
          selftext:
            "I'm having problems installing postgresql and starting the server.\n\nI followed this [guide](https://en.opensuse.org/SDB:PostgreSQL) but getting an error and also no servers appear under pgadmin.\n\n&amp;#x200B;\n\nI want to start fresh and install everything again properly. Suggestions?\n\n&amp;#x200B;\n\n`linux-j3hv:/home/ib # zypper rm 'postgres*'`   \n`Loading repository data...`   \n`Warning: No repositories defined. Operating only with the installed resolvables. Nothing`  \n `can be installed.`   \n`Reading installed packages...`   \n`'postgres*' not found in package names. Trying capabilities.`   \n`No provider of 'postgres*' found.`   \n`Resolving package dependencies...`   \n \n\n`Nothing to do.`   \n`linux-j3hv:/home/ib # zypper rr PostgreSQL`   \n`Repository 'PostgreSQL' not found by alias, number or URI.`   \n`linux-j3hv:/home/ib # zypper se postgresql10 postgresql10-docs postgresql10-test`   \n`Loading repository data...`   \n`Reading installed packages...`   \n \n\n`S | Name                     | Summary                                         | Type`      \n`--+--------------------------+-------------------------------------------------+--------`   \n  `| postgresql10             | Basic Clients and Utilities for PostgreSQL      | package`   \n  `| postgresql10-contrib     | Contributed Extensions and Additions to Postg-&gt; | package`   \n  `| postgresql10-devel       | PostgreSQL development header files and libra-&gt; | package`   \n  `| postgresql10-docs        | HTML Documentation for PostgreSQL               | package`   \n  `| postgresql10-plperl      | The PL/Tcl, PL/Perl, and  PL/Python procedura-&gt; | package`   \n  `| postgresql10-plpython    | The PL/Python Procedural Languages for Postgr-&gt; | package`   \n  `| postgresql10-plr         | PL/R - R Procedural Language for PostgreSQL     | package`   \n  `| postgresql10-plr-doc     | Documentation for PL/R - R Procedural Languag-&gt; | package`   \n  `| postgresql10-pltcl       | PL/Tcl Procedural Language for PostgreSQL       | package`   \n  `| postgresql10-server      | The Programs Needed to Create and Run a Postg-&gt; | package`   \n  `| postgresql10-test        | The test suite for PostgreSQL                   | package`   \n  `| postgresql10-timescaledb | A time-series database extension for PostgreSQL | package`   \n`linux-j3hv:/home/ib # zypper in -f postgresql10 postgresql10-docs postgreql10-test`    \n`Loading repository data...`   \n`Reading installed packages...`   \n`Forcing installation of 'postgresql10-10.5-1.4.x86_64' from repository 'openSUSE-Tumblew`  \n`eed-Oss'.`   \n`Forcing installation of 'postgresql10-docs-10.5-1.4.noarch' from repository 'openSUSE-Tu`  \n`mbleweed-Oss'.`   \n`Package 'postgreql10-test' not found.`   \n`Resolving package dependencies...`   \n \n\n`The following 4 NEW packages are going to be installed:`   \n `postgresql postgresql10 postgresql10-docs postgresql-docs`   \n \n\n`The following 2 recommended packages were automatically selected:`   \n `postgresql10 postgresql10-docs`   \n \n\n`4 new packages to install.`   \n`Overall download size: 3.8 MiB. Already cached: 0 B. After the operation, additional`   \n`23.3 MiB will be used.`   \n`Continue? [y/n/...? shows all options] (y): y`   \n`Retrieving package postgresql-10-4.2.noarch        (1/4),  11.7 KiB (  713   B unpacked)`   \n`Retrieving: postgresql-10-4.2.noarch.rpm .........................................[done]`   \n`Retrieving package postgresql10-docs-10.5-1.4.noarch`   \n                                                   `(2/4),   2.3 MiB ( 17.1 MiB unpacked)`   \n`Retrieving: postgresql10-docs-10.5-1.4.noarch.rpm ....................[done (2.3 MiB/s)]`   \n`Retrieving package postgresql10-10.5-1.4.x86_64    (3/4),   1.4 MiB (  6.2 MiB unpacked)`   \n`Retrieving: postgresql10-10.5-1.4.x86_64.rpm .....................................[done]`   \n`Retrieving package postgresql-docs-10-4.2.noarch   (4/4),  10.9 KiB (   83   B unpacked)`   \n`Retrieving: postgresql-docs-10-4.2.noarch.rpm ....................................[done]`   \n`Checking for file conflicts: .....................................................[done]`   \n`(1/4) Installing: postgresql-10-4.2.noarch .......................................[done]`   \n`(2/4) Installing: postgresql10-docs-10.5-1.4.noarch ..............................[done]`   \n`(3/4) Installing: postgresql10-10.5-1.4.x86_64 ...................................[done]`   \n`(4/4) Installing: postgresql-docs-10-4.2.noarch ..................................[done]`   \n`Installation has completed with error.`  \n   \n",
          author_fullname: 't2_gqjtm',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Having problems with installing postgresql',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/openSUSE',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a004fk',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: '#35b9ab',
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.openSUSE',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: '43580020-d0aa-11e5-8545-0e729633a04b',
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: 'flairuser',
          author_flair_richtext: [
            {
              e: 'text',
              t: 'TW-KDE'
            }
          ],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543079163,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'richtext',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m having problems installing postgresql and starting the server.&lt;/p&gt;\n\n&lt;p&gt;I followed this &lt;a href="https://en.opensuse.org/SDB:PostgreSQL"&gt;guide&lt;/a&gt; but getting an error and also no servers appear under pgadmin.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I want to start fresh and install everything again properly. Suggestions?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;linux-j3hv:/home/ib # zypper rm &amp;#39;postgres*&amp;#39;&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Loading repository data...&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Warning: No repositories defined. Operating only with the installed resolvables. Nothing&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;can be installed.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Reading installed packages...&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;&amp;#39;postgres*&amp;#39; not found in package names. Trying capabilities.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;No provider of &amp;#39;postgres*&amp;#39; found.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Resolving package dependencies...&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;Nothing to do.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;linux-j3hv:/home/ib # zypper rr PostgreSQL&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Repository &amp;#39;PostgreSQL&amp;#39; not found by alias, number or URI.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;linux-j3hv:/home/ib # zypper se postgresql10 postgresql10-docs postgresql10-test&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Loading repository data...&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Reading installed packages...&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;S | Name                     | Summary                                         | Type&lt;/code&gt;    &lt;br/&gt;\n&lt;code&gt;--+--------------------------+-------------------------------------------------+--------&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10             | Basic Clients and Utilities for PostgreSQL      | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-contrib     | Contributed Extensions and Additions to Postg-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-devel       | PostgreSQL development header files and libra-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-docs        | HTML Documentation for PostgreSQL               | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-plperl      | The PL/Tcl, PL/Perl, and  PL/Python procedura-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-plpython    | The PL/Python Procedural Languages for Postgr-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-plr         | PL/R - R Procedural Language for PostgreSQL     | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-plr-doc     | Documentation for PL/R - R Procedural Languag-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-pltcl       | PL/Tcl Procedural Language for PostgreSQL       | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-server      | The Programs Needed to Create and Run a Postg-&amp;gt; | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-test        | The test suite for PostgreSQL                   | package&lt;/code&gt;&lt;br/&gt;\n  &lt;code&gt;| postgresql10-timescaledb | A time-series database extension for PostgreSQL | package&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;linux-j3hv:/home/ib # zypper in -f postgresql10 postgresql10-docs postgreql10-test&lt;/code&gt;  &lt;br/&gt;\n&lt;code&gt;Loading repository data...&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Reading installed packages...&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Forcing installation of &amp;#39;postgresql10-10.5-1.4.x86_64&amp;#39; from repository &amp;#39;openSUSE-Tumblew&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;eed-Oss&amp;#39;.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Forcing installation of &amp;#39;postgresql10-docs-10.5-1.4.noarch&amp;#39; from repository &amp;#39;openSUSE-Tu&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;mbleweed-Oss&amp;#39;.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Package &amp;#39;postgreql10-test&amp;#39; not found.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Resolving package dependencies...&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;The following 4 NEW packages are going to be installed:&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;postgresql postgresql10 postgresql10-docs postgresql-docs&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;The following 2 recommended packages were automatically selected:&lt;/code&gt;&lt;br/&gt;\n &lt;code&gt;postgresql10 postgresql10-docs&lt;/code&gt;   &lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;4 new packages to install.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Overall download size: 3.8 MiB. Already cached: 0 B. After the operation, additional&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;23.3 MiB will be used.&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Continue? [y/n/...? shows all options] (y): y&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving package postgresql-10-4.2.noarch        (1/4),  11.7 KiB (  713   B unpacked)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving: postgresql-10-4.2.noarch.rpm .........................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving package postgresql10-docs-10.5-1.4.noarch&lt;/code&gt;&lt;br/&gt;\n                                                   &lt;code&gt;(2/4),   2.3 MiB ( 17.1 MiB unpacked)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving: postgresql10-docs-10.5-1.4.noarch.rpm ....................[done (2.3 MiB/s)]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving package postgresql10-10.5-1.4.x86_64    (3/4),   1.4 MiB (  6.2 MiB unpacked)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving: postgresql10-10.5-1.4.x86_64.rpm .....................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving package postgresql-docs-10-4.2.noarch   (4/4),  10.9 KiB (   83   B unpacked)&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Retrieving: postgresql-docs-10-4.2.noarch.rpm ....................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Checking for file conflicts: .....................................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;(1/4) Installing: postgresql-10-4.2.noarch .......................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;(2/4) Installing: postgresql10-docs-10.5-1.4.noarch ..............................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;(3/4) Installing: postgresql10-10.5-1.4.x86_64 ...................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;(4/4) Installing: postgresql-docs-10-4.2.noarch ..................................[done]&lt;/code&gt;&lt;br/&gt;\n&lt;code&gt;Installation has completed with error.&lt;/code&gt;  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: 'TW-KDE',
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2rgiq',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a004fk',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'nightcrawler99',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: 'light',
          permalink:
            '/r/openSUSE/comments/a004fk/having_problems_with_installing_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/openSUSE/comments/a004fk/having_problems_with_installing_postgresql/',
          subreddit_subscribers: 7418,
          created_utc: 1543079163,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Hi everyone - we use PostgreSQL a lot in my shop. Mainly doing basic rdbms stuff - nothing crazy w/ "big data" or insane table joins. Everything is in ec2/aws running on basic Linux instances.  \n\n\nI feel very lost or unsure how to do anything beyond the basic things in psql client using the backslash commands and querying system tables to see some basic statistics. Whats the best way to see or understand what my databases are doing? I can\'t honestly answer if 20 or 100 clients are connecting to my database? I can check the number of postgres connections using the UNIX ps command but that\'s outside of PostgreSQL and I just want to have a better understanding of how these boxes are being utilized.   \n\n\nWhen I opt for PostgreSQL training:  \nA - it\'s insanely expensive or homemade and hard to follow  \nB - the training spans from "what is a database to basic recipes for replication or ha but nothing relevant to using PG in a real world scenario.  \nC - the insane amount of unsupported plugins or tools to do common DBA tasks is overwhelming to say the least and the documentation outside of the main postgresql page is gross.  \n\n\nAppreciate any info on how to become a stronger PG DBA in terms of understanding my cluster / what its doing / what it needs / what it needs to stop doing / etc etc etc',
          author_fullname: 't2_hrbw4',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'How To Feel Confident in PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: 'help-me',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a16xyb',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 9,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'Help Me!',
          can_mod_post: false,
          score: 9,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543417275,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi everyone - we use PostgreSQL a lot in my shop. Mainly doing basic rdbms stuff - nothing crazy w/ &amp;quot;big data&amp;quot; or insane table joins. Everything is in ec2/aws running on basic Linux instances.  &lt;/p&gt;\n\n&lt;p&gt;I feel very lost or unsure how to do anything beyond the basic things in psql client using the backslash commands and querying system tables to see some basic statistics. Whats the best way to see or understand what my databases are doing? I can&amp;#39;t honestly answer if 20 or 100 clients are connecting to my database? I can check the number of postgres connections using the UNIX ps command but that&amp;#39;s outside of PostgreSQL and I just want to have a better understanding of how these boxes are being utilized.   &lt;/p&gt;\n\n&lt;p&gt;When I opt for PostgreSQL training:&lt;br/&gt;\nA - it&amp;#39;s insanely expensive or homemade and hard to follow&lt;br/&gt;\nB - the training spans from &amp;quot;what is a database to basic recipes for replication or ha but nothing relevant to using PG in a real world scenario.&lt;br/&gt;\nC - the insane amount of unsupported plugins or tools to do common DBA tasks is overwhelming to say the least and the documentation outside of the main postgresql page is gross.  &lt;/p&gt;\n\n&lt;p&gt;Appreciate any info on how to become a stronger PG DBA in terms of understanding my cluster / what its doing / what it needs / what it needs to stop doing / etc etc etc&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          link_flair_template_id: '44e986b8-85b1-11e6-8314-0e0c2bb520df',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a16xyb',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'cachedrive',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a16xyb/how_to_feel_confident_in_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a16xyb/how_to_feel_confident_in_postgresql/',
          subreddit_subscribers: 9388,
          created_utc: 1543417275,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'Database',
          selftext:
            "So, when I try to use postgreSQL in command prompt it says that I need to enter a password to use createdb. However, the password I set up when I installed postgreSQL doesn't work there, neither does the password for logging into my computer. What password are they asking for? Also, postgreSQL syntax doesn't do anything when I try to use it in git bash and I'm not sure why. I have postgreSQL's bin folder in my system environment path variable but when I try to use something like createdb the cursor just goes to the next line and nothing happens all other commands stop working after typing in createdb in git bash as well and I have to restart it to use it again",
          author_fullname: 't2_7wlvq',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: "Can't get postgreSQL to work in the command line.",
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/Database',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9dcigo',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.Database',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1536191597,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So, when I try to use postgreSQL in command prompt it says that I need to enter a password to use createdb. However, the password I set up when I installed postgreSQL doesn&amp;#39;t work there, neither does the password for logging into my computer. What password are they asking for? Also, postgreSQL syntax doesn&amp;#39;t do anything when I try to use it in git bash and I&amp;#39;m not sure why. I have postgreSQL&amp;#39;s bin folder in my system environment path variable but when I try to use something like createdb the cursor just goes to the next line and nothing happens all other commands stop working after typing in createdb in git bash as well and I have to restart it to use it again&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qian',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9dcigo',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Searingarrow',
          num_crossposts: 0,
          num_comments: 24,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/Database/comments/9dcigo/cant_get_postgresql_to_work_in_the_command_line/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/Database/comments/9dcigo/cant_get_postgresql_to_work_in_the_command_line/',
          subreddit_subscribers: 21079,
          created_utc: 1536191597,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Hey guys,\n\nI asked a question on StackOverflow about an issue that I'm having with PostgreSQL and partitioning but I didn't seem to get any answers on it yet.\n\nSince it's a bit more advanced than the usual question I see being answered on StackOverflow I thought I'd post it here (and the StackOverflow link) as well:\n\nhttps://stackoverflow.com/questions/54295981/very-long-query-planning-times-for-database-with-lots-of-partitions-in-postgresq\n\nI have a PostgreSQL 10 database that contains two tables which both have two levels of partitioning (by list).\n\nThe data is now stored within 5K to 10K partitioned tables (grand-children of the two tables mentioned above) depending on the day.\n\nThere are three indexes per grand-child partition table but the two columns on which partitioning is done aren't indexed. (Since I don't think this is needed no?)\n\nThe issue I'm observing is that the query planning time is very slow but the query execution time very fast.\n\nEven when the partition values were hard-coded in the query.\n\nResearching the issue, I thought that the linear search use by PostgreSQL 10 to find the metadata of the partition was the cause of it.\n\ncf: https://blog.2ndquadrant.com/partition-elimination-postgresql-11/\n\nSo I decided to try out PostgreSQL 11 which includes the two aforementioned patches:\n\nhttps://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=499be013de65242235ebdde06adb08db887f0ea5 https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=9fdb675fc5d2de825414e05939727de8b120ae81\n\nHelas, it seems that the version change doesn't change anything.\n\nNow I know that having lots of partitions isn't greatly appreciated by PostgreSQL but I still would like to understand why the query planner is so slow in PostgreSQL 10 and now PostgreSQL 11.\n\nAn example of a query would be:\n\n    EXPLAIN ANALYZE\n    SELECT\n        table_a.a,\n        table_b.a\n    FROM\n        (\n            SELECT\n                a,\n                b\n            FROM\n                table_a\n            WHERE\n                partition_level_1_column = 'foo'\n                AND\n                partition_level_2_column = 'bar'\n        )\n            AS table_a\n    INNER JOIN\n        (\n            SELECT\n                a,\n                b\n            FROM\n                table_b\n            WHERE\n                partition_level_1_column = 'baz'\n                AND\n                partition_level_2_column = 'bat'\n        )\n            AS table_b\n            ON table_b.b = table_a.b\n    LIMIT\n        10;\n\nRunning it will on database with 5K partitions will return `Planning Time: 7155.647 ms` but `Execution Time: 2.827 ms`.\n\n\n\nThanks in advance for your help! :)",
          author_fullname: 't2_3205yg8p',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[Question] Very long query planning times for database with lots of partitions in PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aim6ti',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548158641,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey guys,&lt;/p&gt;\n\n&lt;p&gt;I asked a question on StackOverflow about an issue that I&amp;#39;m having with PostgreSQL and partitioning but I didn&amp;#39;t seem to get any answers on it yet.&lt;/p&gt;\n\n&lt;p&gt;Since it&amp;#39;s a bit more advanced than the usual question I see being answered on StackOverflow I thought I&amp;#39;d post it here (and the StackOverflow link) as well:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://stackoverflow.com/questions/54295981/very-long-query-planning-times-for-database-with-lots-of-partitions-in-postgresq"&gt;https://stackoverflow.com/questions/54295981/very-long-query-planning-times-for-database-with-lots-of-partitions-in-postgresq&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;I have a PostgreSQL 10 database that contains two tables which both have two levels of partitioning (by list).&lt;/p&gt;\n\n&lt;p&gt;The data is now stored within 5K to 10K partitioned tables (grand-children of the two tables mentioned above) depending on the day.&lt;/p&gt;\n\n&lt;p&gt;There are three indexes per grand-child partition table but the two columns on which partitioning is done aren&amp;#39;t indexed. (Since I don&amp;#39;t think this is needed no?)&lt;/p&gt;\n\n&lt;p&gt;The issue I&amp;#39;m observing is that the query planning time is very slow but the query execution time very fast.&lt;/p&gt;\n\n&lt;p&gt;Even when the partition values were hard-coded in the query.&lt;/p&gt;\n\n&lt;p&gt;Researching the issue, I thought that the linear search use by PostgreSQL 10 to find the metadata of the partition was the cause of it.&lt;/p&gt;\n\n&lt;p&gt;cf: &lt;a href="https://blog.2ndquadrant.com/partition-elimination-postgresql-11/"&gt;https://blog.2ndquadrant.com/partition-elimination-postgresql-11/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So I decided to try out PostgreSQL 11 which includes the two aforementioned patches:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=499be013de65242235ebdde06adb08db887f0ea5"&gt;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=499be013de65242235ebdde06adb08db887f0ea5&lt;/a&gt; &lt;a href="https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=9fdb675fc5d2de825414e05939727de8b120ae81"&gt;https://git.postgresql.org/gitweb/?p=postgresql.git;a=commit;h=9fdb675fc5d2de825414e05939727de8b120ae81&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Helas, it seems that the version change doesn&amp;#39;t change anything.&lt;/p&gt;\n\n&lt;p&gt;Now I know that having lots of partitions isn&amp;#39;t greatly appreciated by PostgreSQL but I still would like to understand why the query planner is so slow in PostgreSQL 10 and now PostgreSQL 11.&lt;/p&gt;\n\n&lt;p&gt;An example of a query would be:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;EXPLAIN ANALYZE\nSELECT\n    table_a.a,\n    table_b.a\nFROM\n    (\n        SELECT\n            a,\n            b\n        FROM\n            table_a\n        WHERE\n            partition_level_1_column = &amp;#39;foo&amp;#39;\n            AND\n            partition_level_2_column = &amp;#39;bar&amp;#39;\n    )\n        AS table_a\nINNER JOIN\n    (\n        SELECT\n            a,\n            b\n        FROM\n            table_b\n        WHERE\n            partition_level_1_column = &amp;#39;baz&amp;#39;\n            AND\n            partition_level_2_column = &amp;#39;bat&amp;#39;\n    )\n        AS table_b\n        ON table_b.b = table_a.b\nLIMIT\n    10;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Running it will on database with 5K partitions will return &lt;code&gt;Planning Time: 7155.647 ms&lt;/code&gt; but &lt;code&gt;Execution Time: 2.827 ms&lt;/code&gt;.&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for your help! :)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?auto=webp&amp;s=a70d21ce9f01f64670d2200ca9fc3f39b94a7e48',
                  width: 316,
                  height: 316
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0aad06750c23b98c9b7595343a8b54a42dc18851',
                    width: 108,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/yzSfTlKTSYGpEXeFgyDvHlfoLGOFQJqPuH_Y38RBz2U.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=b66126834977e269be586d07464046049ed09138',
                    width: 216,
                    height: 216
                  }
                ],
                variants: {},
                id: 'nfayPavSUB5ngYv6-19UHNBThsXfcLIDQl4HkEe3Cv0'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aim6ti',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'pganonymous',
          num_crossposts: 0,
          num_comments: 14,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/aim6ti/question_very_long_query_planning_times_for/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/aim6ti/question_very_long_query_planning_times_for/',
          subreddit_subscribers: 9388,
          created_utc: 1548158641,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'gis',
          selftext:
            'I recently got hired for a utility company to help move the company from **postgreSQL+postGIS** to **esri software** in order to manage and map their design drawings, property plats, CAD and geometrical data. \n\nTo do this data migration, we’re using **Feature Manipulation Engine (FME)**, a platform that streamlines the translation of spatial data between geometric and digital formats. I am also expected to learn **python** and **SQL** for this. \n\nI was wondering if anyone here has experience in performing this task before? If so, are there any FME/python/esri tutorials, reading materials or advice that you can offer?',
          author_fullname: 't2_bj9wafe',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Data migration from postGIS to ArcGIS (using FME, python, SQL)?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/gis',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a7hkxj',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 3,
          domain: 'self.gis',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 3,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1545182651,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I recently got hired for a utility company to help move the company from &lt;strong&gt;postgreSQL+postGIS&lt;/strong&gt; to &lt;strong&gt;esri software&lt;/strong&gt; in order to manage and map their design drawings, property plats, CAD and geometrical data. &lt;/p&gt;\n\n&lt;p&gt;To do this data migration, we’re using &lt;strong&gt;Feature Manipulation Engine (FME)&lt;/strong&gt;, a platform that streamlines the translation of spatial data between geometric and digital formats. I am also expected to learn &lt;strong&gt;python&lt;/strong&gt; and &lt;strong&gt;SQL&lt;/strong&gt; for this. &lt;/p&gt;\n\n&lt;p&gt;I was wondering if anyone here has experience in performing this task before? If so, are there any FME/python/esri tutorials, reading materials or advice that you can offer?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qmpb',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a7hkxj',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'WxGeo',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/gis/comments/a7hkxj/data_migration_from_postgis_to_arcgis_using_fme/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/gis/comments/a7hkxj/data_migration_from_postgis_to_arcgis_using_fme/',
          subreddit_subscribers: 33256,
          created_utc: 1545182651,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'webdev',
          selftext:
            "I have a Django app that uses a locally hosted Piwik/Matomo instance for analytics. People recommend PostgreSQL for Python based apps, but I could only find documentation for setting up Matomo on MySQL and its derivatives. I tried running them on their separate recommended/required databases, but both sites are hosted on a single bottom tier VPS with low memory, and with two databases running it makes the memory situation worse. I know I can just switch Django to MySQL, but I've also noticed that MySQL uses more memory than PostgreSQL, so that's what I'd ideally like to use for everything. Memory is the biggest limiting factor of my dirt cheap little server, so is it possible to switch Matomo to PostgreSQL in order to save some of those resources?",
          author_fullname: 't2_1h1hfeve',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Is it possible to run Piwik/Matomo on PostgreSQL?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/webdev',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b716k2',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.webdev',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1553885810,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have a Django app that uses a locally hosted Piwik/Matomo instance for analytics. People recommend PostgreSQL for Python based apps, but I could only find documentation for setting up Matomo on MySQL and its derivatives. I tried running them on their separate recommended/required databases, but both sites are hosted on a single bottom tier VPS with low memory, and with two databases running it makes the memory situation worse. I know I can just switch Django to MySQL, but I&amp;#39;ve also noticed that MySQL uses more memory than PostgreSQL, so that&amp;#39;s what I&amp;#39;d ideally like to use for everything. Memory is the biggest limiting factor of my dirt cheap little server, so is it possible to switch Matomo to PostgreSQL in order to save some of those resources?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qs0q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b716k2',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'AgreeableLandscape3',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/webdev/comments/b716k2/is_it_possible_to_run_piwikmatomo_on_postgresql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/webdev/comments/b716k2/is_it_possible_to_run_piwikmatomo_on_postgresql/',
          subreddit_subscribers: 318425,
          created_utc: 1553885810,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            'Hi r/SQL,  \n\n\nI have taken a couple of basic courses for SQL, and am now looking to further my knowledge; specifically in postgreSQL and QGIS.    \n\n\nI have only been able to find one course, the eduonix, for postgreSQL (one from edx was not available).  Can anyone recommend some courses for these two subjects?    \n\n\nThank you!',
          author_fullname: 't2_a6s4e',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'MOOCs/Relatively Cheap/Free Online resources for postgreSQL and QGIS',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'd',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9ykwtx',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'PostgreSQL',
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1542661267,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi &lt;a href="/r/SQL"&gt;r/SQL&lt;/a&gt;,  &lt;/p&gt;\n\n&lt;p&gt;I have taken a couple of basic courses for SQL, and am now looking to further my knowledge; specifically in postgreSQL and QGIS.    &lt;/p&gt;\n\n&lt;p&gt;I have only been able to find one course, the eduonix, for postgreSQL (one from edx was not available).  Can anyone recommend some courses for these two subjects?    &lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9ykwtx',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'euphonizim',
          num_crossposts: 0,
          num_comments: 3,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/SQL/comments/9ykwtx/moocsrelatively_cheapfree_online_resources_for/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/9ykwtx/moocsrelatively_cheapfree_online_resources_for/',
          subreddit_subscribers: 34612,
          created_utc: 1542661267,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'Database',
          selftext:
            "Assuming i want to make a system for students to use the library. I have list of 400-500 list of students with their e-mail, name, age and other details stored in .csv format. I want to import all of these to a PostgreSQL server for them to login (using email) and create another column for password but same dummy password for all 400-500 users (and I'll ask them to change the password later). Is it possible to insert the password column to postgreSQL since if i understand correctly, the password field stored in normal sql is encrypted?",
          author_fullname: 't2_12apbu',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'trying to import csv file to postgresql. Possible to import together inside the password field?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/Database',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aw0vem',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.Database',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551416628,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Assuming i want to make a system for students to use the library. I have list of 400-500 list of students with their e-mail, name, age and other details stored in .csv format. I want to import all of these to a PostgreSQL server for them to login (using email) and create another column for password but same dummy password for all 400-500 users (and I&amp;#39;ll ask them to change the password later). Is it possible to insert the password column to postgreSQL since if i understand correctly, the password field stored in normal sql is encrypted?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qian',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aw0vem',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'hossein4',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/Database/comments/aw0vem/trying_to_import_csv_file_to_postgresql_possible/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/Database/comments/aw0vem/trying_to_import_csv_file_to_postgresql_possible/',
          subreddit_subscribers: 21079,
          created_utc: 1551416628,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'blackmagicdesign',
          selftext:
            " I'm confused about the setup order of a shared PostgreSQL database. I'm trying to connect a Mac computer to a PC database. The manual really doesn't guide through the whole process.  I'm using Resolve 15.2, and trying to send projects out to a designated rendering PC, which is not in the same local network. The computers are in different cities, so I will need to use an internet connection. ",
          author_fullname: 't2_2pyx3d6f',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'postgresql',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/blackmagicdesign',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a5jo7p',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.blackmagicdesign',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544632103,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m confused about the setup order of a shared PostgreSQL database. I&amp;#39;m trying to connect a Mac computer to a PC database. The manual really doesn&amp;#39;t guide through the whole process.  I&amp;#39;m using Resolve 15.2, and trying to send projects out to a designated rendering PC, which is not in the same local network. The computers are in different cities, so I will need to use an internet connection. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2z619',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a5jo7p',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'buddde',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/blackmagicdesign/comments/a5jo7p/postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/blackmagicdesign/comments/a5jo7p/postgresql/',
          subreddit_subscribers: 3648,
          created_utc: 1544632103,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'microservices',
          selftext:
            "I'm designing a microservice implementation for my company's software, and wanted to see if this raises any red flags as far as microservice design. \n\nWe already have a shipping product with a monolithic API.  We're going to begin the process here shortly of breaking that API down into constituent microservices.  So, there will be a Message service, a User service, etc.  Each will be responsible for its own small portion of data in the application (and some only providing some data processing functionality as well).\n\nWe'll be using Kubernetes to orchestrate deployment and communication between the services.  My question is - do we dedicate a single database instance for each of these as well?  We're using PostgreSQL.\n\nAt the outset, it seems simple enough to keep the monolithic database as well.  Migration to individual databases for each service seems like it should be simple enough.  But, does that present any other problems that outweigh benefits gained?",
          author_fullname: 't2_la6ur',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Database Architecture w/ Microservices',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/microservices',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9l2oev',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.microservices',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1538583803,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m designing a microservice implementation for my company&amp;#39;s software, and wanted to see if this raises any red flags as far as microservice design. &lt;/p&gt;\n\n&lt;p&gt;We already have a shipping product with a monolithic API.  We&amp;#39;re going to begin the process here shortly of breaking that API down into constituent microservices.  So, there will be a Message service, a User service, etc.  Each will be responsible for its own small portion of data in the application (and some only providing some data processing functionality as well).&lt;/p&gt;\n\n&lt;p&gt;We&amp;#39;ll be using Kubernetes to orchestrate deployment and communication between the services.  My question is - do we dedicate a single database instance for each of these as well?  We&amp;#39;re using PostgreSQL.&lt;/p&gt;\n\n&lt;p&gt;At the outset, it seems simple enough to keep the monolithic database as well.  Migration to individual databases for each service seems like it should be simple enough.  But, does that present any other problems that outweigh benefits gained?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_3361s',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9l2oev',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'ichosethisone',
          num_crossposts: 0,
          num_comments: 11,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/microservices/comments/9l2oev/database_architecture_w_microservices/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/microservices/comments/9l2oev/database_architecture_w_microservices/',
          subreddit_subscribers: 3182,
          created_utc: 1538583803,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'freebsd',
          selftext:
            "Has anybody here done this? PostGIS 2.4 in the FreeBSD ports tree only compiles for PostgreSQL 9.5 which is getting rather long in the tooth. PG 10 and 11 are there but not PostGIS 2.5.\n\nI'm trying to decide whether it's worth my time for my hobby to do this so I can stay with FreeBSD instead of switching to Linux to get the more recent versions, so I'm looking for pointers, pitfalls, and the like for these two specific pieces of software (not about doing so in general).",
          author_fullname: 't2_4xgnh',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Compiling PostgreSQL and PostGIS for FreeBSD instead of using ports',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/freebsd',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aeex3w',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 8,
          domain: 'self.freebsd',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 8,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547090565,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Has anybody here done this? PostGIS 2.4 in the FreeBSD ports tree only compiles for PostgreSQL 9.5 which is getting rather long in the tooth. PG 10 and 11 are there but not PostGIS 2.5.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to decide whether it&amp;#39;s worth my time for my hobby to do this so I can stay with FreeBSD instead of switching to Linux to get the more recent versions, so I&amp;#39;m looking for pointers, pitfalls, and the like for these two specific pieces of software (not about doing so in general).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qi1e',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aeex3w',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'CoryCA',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/freebsd/comments/aeex3w/compiling_postgresql_and_postgis_for_freebsd/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/freebsd/comments/aeex3w/compiling_postgresql_and_postgis_for_freebsd/',
          subreddit_subscribers: 10346,
          created_utc: 1547090565,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'rust',
          selftext:
            "pgxr repo: [https://github.com/clia/pgxr](https://github.com/clia/pgxr)\n\nWrite PostgreSQL extension functions (as stored procedures) using Rust.\n\n![](https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fast-programs-different-programming-languages.svg)\n\nUse the Fastest, Efficient, Safe, Enjoyable language, to write In-Database programs, for the World's Most Advanced Open Source Relational Database!\n\n# Code Example\n\n```rust\n#[macro_use]\nextern crate pgxr;\n\nuse pgxr::bindings::*;\n\nPG_MODULE_MAGIC!();\n\nPG_FUNCTION_INFO_V1!(pg_finfo_pgxr_example_one);\n\n#[no_mangle]\npub extern \"C\" fn pgxr_example_one(_fcinfo: FunctionCallInfo) -&gt; Datum\n{\n    1\n}\n\n```\n\n# Usage\n\n```bash\ngit clone https://github.com/clia/pgxr.git\ncd pgxr/examples/pgxr_example_one\ncargo build --release\n```\n\nThen run `pg_config`\n\nFind `PKGLIBDIR`, such as `/usr/lib/postgresql/10/lib`\n\n```bash\nsudo cp target/release/libpgxr_example_one.so /usr/lib/postgresql/10/lib\n```\n\n```bash\nsudo su - postgres\npsql\n```\n\n```sql\nCREATE FUNCTION pgxr_example_one(integer) RETURNS integer\n     AS 'libpgxr_example_one.so', 'pgxr_example_one'\n     LANGUAGE C STRICT;\n```\n\n```sql\nselect pgxr_example_one(1);\n```\n\n## bindgen\n\nThe included `bindings.rs` is for PostgreSQL 10 on the Linux X86-64 arch.\nYou can `bindgen` your platform's `bindings.rs`, using:\n\n```bash\nbindgen wrapper.h -o src/bindings.rs -- -I /usr/include/postgresql/10/server\n```\n\nThat is it.\n\nHave fun!",
          author_fullname: 't2_1gk3vpk4',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Write PostgreSQL extension functions (as stored procedures) using Rust -- pgxr',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/rust',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9y2yjq',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 62,
          domain: 'self.rust',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 62,
          approved_by: null,
          thumbnail: 'self',
          edited: 1542608532,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1542513244,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;pgxr repo: &lt;a href="https://github.com/clia/pgxr"&gt;https://github.com/clia/pgxr&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Write PostgreSQL extension functions (as stored procedures) using Rust.&lt;/p&gt;\n\n&lt;p&gt;![](&lt;a href="https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fast-programs-different-programming-languages.svg"&gt;https://benchmarksgame-team.pages.debian.net/benchmarksgame/download/fast-programs-different-programming-languages.svg&lt;/a&gt;)&lt;/p&gt;\n\n&lt;p&gt;Use the Fastest, Efficient, Safe, Enjoyable language, to write In-Database programs, for the World&amp;#39;s Most Advanced Open Source Relational Database!&lt;/p&gt;\n\n&lt;h1&gt;Code Example&lt;/h1&gt;\n\n&lt;p&gt;```rust&lt;/p&gt;\n\n&lt;h1&gt;[macro_use]&lt;/h1&gt;\n\n&lt;p&gt;extern crate pgxr;&lt;/p&gt;\n\n&lt;p&gt;use pgxr::bindings::*;&lt;/p&gt;\n\n&lt;p&gt;PG_MODULE_MAGIC!();&lt;/p&gt;\n\n&lt;p&gt;PG_FUNCTION_INFO_V1!(pg_finfo_pgxr_example_one);&lt;/p&gt;\n\n&lt;h1&gt;[no_mangle]&lt;/h1&gt;\n\n&lt;p&gt;pub extern &amp;quot;C&amp;quot; fn pgxr_example_one(_fcinfo: FunctionCallInfo) -&amp;gt; Datum\n{\n    1\n}&lt;/p&gt;\n\n&lt;p&gt;```&lt;/p&gt;\n\n&lt;h1&gt;Usage&lt;/h1&gt;\n\n&lt;p&gt;&lt;code&gt;bash\ngit clone https://github.com/clia/pgxr.git\ncd pgxr/examples/pgxr_example_one\ncargo build --release\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Then run &lt;code&gt;pg_config&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;Find &lt;code&gt;PKGLIBDIR&lt;/code&gt;, such as &lt;code&gt;/usr/lib/postgresql/10/lib&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;bash\nsudo cp target/release/libpgxr_example_one.so /usr/lib/postgresql/10/lib\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;bash\nsudo su - postgres\npsql\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sql\nCREATE FUNCTION pgxr_example_one(integer) RETURNS integer\n     AS &amp;#39;libpgxr_example_one.so&amp;#39;, &amp;#39;pgxr_example_one&amp;#39;\n     LANGUAGE C STRICT;\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;sql\nselect pgxr_example_one(1);\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;h2&gt;bindgen&lt;/h2&gt;\n\n&lt;p&gt;The included &lt;code&gt;bindings.rs&lt;/code&gt; is for PostgreSQL 10 on the Linux X86-64 arch.\nYou can &lt;code&gt;bindgen&lt;/code&gt; your platform&amp;#39;s &lt;code&gt;bindings.rs&lt;/code&gt;, using:&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;bash\nbindgen wrapper.h -o src/bindings.rs -- -I /usr/include/postgresql/10/server\n&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;That is it.&lt;/p&gt;\n\n&lt;p&gt;Have fun!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/wZ2VTOVb4gVtvoZSVx-LXcLLziYyKH3w4zNXzHxhuGI.jpg?auto=webp&amp;s=8317b06d720fb074124347b216163e1e4fb9ed7c',
                  width: 400,
                  height: 400
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/wZ2VTOVb4gVtvoZSVx-LXcLLziYyKH3w4zNXzHxhuGI.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=0ad1cb200160bbd2449d400c07ddbae89b03d1e1',
                    width: 108,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/wZ2VTOVb4gVtvoZSVx-LXcLLziYyKH3w4zNXzHxhuGI.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=74cc016102db658e7619aa1af171824d4432f077',
                    width: 216,
                    height: 216
                  },
                  {
                    url:
                      'https://external-preview.redd.it/wZ2VTOVb4gVtvoZSVx-LXcLLziYyKH3w4zNXzHxhuGI.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=55792bbde091f6ba87c9341dd5b2f9f3435b8ecf',
                    width: 320,
                    height: 320
                  }
                ],
                variants: {},
                id: '2HoUdt6DP2Q4dvnWAbYo_Q65qSK5eXTUbkWrSGUOzoU'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2s7lj',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9y2yjq',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'helloclia',
          num_crossposts: 0,
          num_comments: 3,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/rust/comments/9y2yjq/write_postgresql_extension_functions_as_stored/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/rust/comments/9y2yjq/write_postgresql_extension_functions_as_stored/',
          subreddit_subscribers: 55564,
          created_utc: 1542513244,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'I am building a pipeline to analyze huge datasets of text and images (few terabytes). My end goal is to store the data I have, and continuously add streams of data to it. The data is unstructured data (nested json files).\n\nRight now, I am using Kafka to handle streams of data, Spark to run data processing tasks, and Tensorflow to train my models. However, after few weeks, my data is growing very fast (terabytes of data in few weeks), I am trying to choose another infrastructure to store my data. I am using MongoDB right now, sometimes it crashes for not being able to perform I/O operations, and writing streams of data.\n\nWhat do you advise? I am using EC2. Do you recommend using PostgreSQL, Google BigQuery, or any other technology? Do you recommend any other (cheap) way to store data. \n\nIn case I use PostgreSQL, how can I scale it so I can use Spark to process the data easily. ',
          author_fullname: 't2_kc2bd',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[Question] How do you handle terabytes of data using PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a6eo45',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 15,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 15,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544874735,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am building a pipeline to analyze huge datasets of text and images (few terabytes). My end goal is to store the data I have, and continuously add streams of data to it. The data is unstructured data (nested json files).&lt;/p&gt;\n\n&lt;p&gt;Right now, I am using Kafka to handle streams of data, Spark to run data processing tasks, and Tensorflow to train my models. However, after few weeks, my data is growing very fast (terabytes of data in few weeks), I am trying to choose another infrastructure to store my data. I am using MongoDB right now, sometimes it crashes for not being able to perform I/O operations, and writing streams of data.&lt;/p&gt;\n\n&lt;p&gt;What do you advise? I am using EC2. Do you recommend using PostgreSQL, Google BigQuery, or any other technology? Do you recommend any other (cheap) way to store data. &lt;/p&gt;\n\n&lt;p&gt;In case I use PostgreSQL, how can I scale it so I can use Spark to process the data easily. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a6eo45',
          is_robot_indexable: true,
          report_reasons: null,
          author: '__Julia',
          num_crossposts: 0,
          num_comments: 24,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a6eo45/question_how_do_you_handle_terabytes_of_data/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a6eo45/question_how_do_you_handle_terabytes_of_data/',
          subreddit_subscribers: 9388,
          created_utc: 1544874735,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I wrote an R script to download, unzip and load JSON data into my postgres server. The data in question is the reddit comments data for all time found here: https://files.pushshift.io/reddit/comments/\n\nThe script works, however when I got up to the 55th file RC_2009-08.bz2, it would not read into postgres, with the error:\n\n'ERROR:  could not stat file \"directory_zzz\\RC_2009-08.json\": Unknown error'\n\nI've just started learning postgreSQL however haven't had any luck trying to work why this isn't loading, considering It worked for all previous JSON files.\n\nThe SQL code I'm using is:\n'  COPY public.RC_2010_08 (INFO) FROM 'directory_zzz\\RC_2010-08.json' CSV QUOTE e'\\x01' DELIMITER e'\\x02'; '\n\nFrom what I've been able to work out, i believe it might be something relating to my set-up of postgresql, but I have not worked it out yet. I tried one of the bigger files that I had loaded on an older computer successfully and came up with the same result, so it may be something further unique to my new computer I built.\n\nAny help for this noob would be great!\n\nEDIT: 99% sure I found the issue -- I was using postgreSQL 11 which seems to result in this issue, I rolled back to 10.5 and no issues thus far.",
          author_fullname: 't2_aa2i1',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'New to postgresql - trouble reading in json data',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9rtg8z',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: 1540678918,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1540638083,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I wrote an R script to download, unzip and load JSON data into my postgres server. The data in question is the reddit comments data for all time found here: &lt;a href="https://files.pushshift.io/reddit/comments/"&gt;https://files.pushshift.io/reddit/comments/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;The script works, however when I got up to the 55th file RC_2009-08.bz2, it would not read into postgres, with the error:&lt;/p&gt;\n\n&lt;p&gt;&amp;#39;ERROR:  could not stat file &amp;quot;directory_zzz\\RC_2009-08.json&amp;quot;: Unknown error&amp;#39;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve just started learning postgreSQL however haven&amp;#39;t had any luck trying to work why this isn&amp;#39;t loading, considering It worked for all previous JSON files.&lt;/p&gt;\n\n&lt;p&gt;The SQL code I&amp;#39;m using is:\n&amp;#39;  COPY public.RC_2010_08 (INFO) FROM &amp;#39;directory_zzz\\RC_2010-08.json&amp;#39; CSV QUOTE e&amp;#39;\\x01&amp;#39; DELIMITER e&amp;#39;\\x02&amp;#39;; &amp;#39;&lt;/p&gt;\n\n&lt;p&gt;From what I&amp;#39;ve been able to work out, i believe it might be something relating to my set-up of postgresql, but I have not worked it out yet. I tried one of the bigger files that I had loaded on an older computer successfully and came up with the same result, so it may be something further unique to my new computer I built.&lt;/p&gt;\n\n&lt;p&gt;Any help for this noob would be great!&lt;/p&gt;\n\n&lt;p&gt;EDIT: 99% sure I found the issue -- I was using postgreSQL 11 which seems to result in this issue, I rolled back to 10.5 and no issues thus far.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9rtg8z',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Drop__Bear',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/9rtg8z/new_to_postgresql_trouble_reading_in_json_data/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/9rtg8z/new_to_postgresql_trouble_reading_in_json_data/',
          subreddit_subscribers: 9388,
          created_utc: 1540638083,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'node',
          selftext:
            "After many years of writing REST endpoints in Node.js with and without various frameworks, I really want to give GraphQL a try. I read the [Introduction to GraphQL](https://graphql.github.io/learn/) on their website and feel like I have a pretty good grasp of the concept.\n\nThe next project I am going to be working on will serve data from a PostgreSQL database over Node.js. What open-source solutions might make my life easier for this? Do you guys have any advice for a GraphQL beginner?\n\nEdit: I'm also interested in TypeScript. Is there anything that can help with type definitions for GraphQL queries?",
          author_fullname: 't2_895oz',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'I would like to start using GraphQL to serve data from a PostgreSQL database via Node. What are the best practices?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/node',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a3xnoh',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 43,
          domain: 'self.node',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 43,
          approved_by: null,
          thumbnail: 'self',
          edited: 1544169142,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544167383,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;After many years of writing REST endpoints in Node.js with and without various frameworks, I really want to give GraphQL a try. I read the &lt;a href="https://graphql.github.io/learn/"&gt;Introduction to GraphQL&lt;/a&gt; on their website and feel like I have a pretty good grasp of the concept.&lt;/p&gt;\n\n&lt;p&gt;The next project I am going to be working on will serve data from a PostgreSQL database over Node.js. What open-source solutions might make my life easier for this? Do you guys have any advice for a GraphQL beginner?&lt;/p&gt;\n\n&lt;p&gt;Edit: I&amp;#39;m also interested in TypeScript. Is there anything that can help with type definitions for GraphQL queries?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2reca',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a3xnoh',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'balkonkind',
          num_crossposts: 0,
          num_comments: 23,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/node/comments/a3xnoh/i_would_like_to_start_using_graphql_to_serve_data/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/node/comments/a3xnoh/i_would_like_to_start_using_graphql_to_serve_data/',
          subreddit_subscribers: 109433,
          created_utc: 1544167383,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            "I followed the instruction on https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/lookups/#std:fieldlookup-trigram\\_similar to install trigram search on my search engine. I added `django.contrib.postgres` in my `INSTALLED_APPS` in `settings.py` and installed the `pg_trgm` extension on my PostgreSQL database. The trigram search returns no result, but there is no error, just blankness where there should be search results. My search engine worked fine with `icontain` searches. Here is the code for my search engine with `trigram_similar`:\n\n&amp;#x200B;\n\n    \n    def query_search(request):\n        articles = cross_currents.objects.all()\n        search_term = ''\n        if 'keyword' in request.GET:\n            search_term = request.GET['keyword']\n            articles = articles.filter(Title__trigram_similar=search_term)  \n    \n\n `Title` is a `CharField` in my model `cross_currents`:\n\n    class cross_currents(models.Model):\n        Title = models.CharField(max_length=500)\n\n&amp;#x200B;\n\nThis is what my Django shell gave me:\n\n&amp;#x200B;\n\n        In [6]: cross_currents.objects.filter(Title__trigram_similar='modern')\n        Out[6]: &lt;QuerySet []&gt;\n\n&amp;#x200B;\n\nThe HTML page also returns nothing. However, when I do \n\n&amp;#x200B;\n\n        cross_currents.objects.filter(Title__icontains='modern') \n\n&amp;#x200B;\n\nmany results show up. Any idea why my trigram search returns nothing?\n\n&amp;#x200B;\n\n ",
          author_fullname: 't2_zowbk',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Django trigram_similar search returns no result (Django 2.1 with Postgresql 10.5 backend)',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ai9vnh',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548075655,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I followed the instruction on &lt;a href="https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/lookups/#std:fieldlookup-trigram%5C_similar"&gt;https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/lookups/#std:fieldlookup-trigram\\_similar&lt;/a&gt; to install trigram search on my search engine. I added &lt;code&gt;django.contrib.postgres&lt;/code&gt; in my &lt;code&gt;INSTALLED_APPS&lt;/code&gt; in &lt;code&gt;settings.py&lt;/code&gt; and installed the &lt;code&gt;pg_trgm&lt;/code&gt; extension on my PostgreSQL database. The trigram search returns no result, but there is no error, just blankness where there should be search results. My search engine worked fine with &lt;code&gt;icontain&lt;/code&gt; searches. Here is the code for my search engine with &lt;code&gt;trigram_similar&lt;/code&gt;:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;def query_search(request):\n    articles = cross_currents.objects.all()\n    search_term = &amp;#39;&amp;#39;\n    if &amp;#39;keyword&amp;#39; in request.GET:\n        search_term = request.GET[&amp;#39;keyword&amp;#39;]\n        articles = articles.filter(Title__trigram_similar=search_term)  \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&lt;code&gt;Title&lt;/code&gt; is a &lt;code&gt;CharField&lt;/code&gt; in my model &lt;code&gt;cross_currents&lt;/code&gt;:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;class cross_currents(models.Model):\n    Title = models.CharField(max_length=500)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;This is what my Django shell gave me:&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    In [6]: cross_currents.objects.filter(Title__trigram_similar=&amp;#39;modern&amp;#39;)\n    Out[6]: &amp;lt;QuerySet []&amp;gt;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;The HTML page also returns nothing. However, when I do &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;    cross_currents.objects.filter(Title__icontains=&amp;#39;modern&amp;#39;) \n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;many results show up. Any idea why my trigram search returns nothing?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ai9vnh',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'jesseparks13',
          num_crossposts: 0,
          num_comments: 12,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/ai9vnh/django_trigram_similar_search_returns_no_result/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/ai9vnh/django_trigram_similar_search_returns_no_result/',
          subreddit_subscribers: 48849,
          created_utc: 1548075655,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'learnpython',
          selftext:
            "Furthermore—would hooking up PostgreSQL affect how I wrote my code at all? I'm a nub when it comes to SQL, but I'm currently learning all about how databases work! ",
          author_fullname: 't2_82gb0',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Currently learning Django: How would I know when it is appropriate to use a heftier database such as PostgreSQL as opposed to the default SQLite that comes with Django?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/learnpython',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aq8z90',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.learnpython',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550078637,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Furthermore—would hooking up PostgreSQL affect how I wrote my code at all? I&amp;#39;m a nub when it comes to SQL, but I&amp;#39;m currently learning all about how databases work! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2r8ot',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aq8z90',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'solidiquis1',
          num_crossposts: 0,
          num_comments: 3,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/learnpython/comments/aq8z90/currently_learning_django_how_would_i_know_when/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/learnpython/comments/aq8z90/currently_learning_django_how_would_i_know_when/',
          subreddit_subscribers: 182471,
          created_utc: 1550078637,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            "Hey guys.\n\nI'm currently working with django-taggit for my \"Tag\" fields, because for quick prototyping I just use sqlite. However now I'm almost done and I have to work on a more serious setup. I will be using PostgreSQL as my main production (and dev) database. And I like to use as few external third-party packages as possible. That includes django-taggit. I would like to replace this with a Postgres ArrayField. Since django-taggit uses a `form.save_m2m()` it looks like it just uses a ManyToMany Field. And I understand that also.\n\nBut I don't have enough in-depth knowledge. What are the actual technical implications? Are ArrayFields significantly faster? Are there any up/down-sides I'm not seeing for either of the two? Is there even any significant difference between the two?\n\nThanks so much in advance. I hope this is of interest to others as well.",
          author_fullname: 't2_15qejw',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'django-taggit vs PostgreSQL ArrayField - I know the differences, but what are the technical implications',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_and0gd',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: 1549399927,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1549364215,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey guys.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m currently working with django-taggit for my &amp;quot;Tag&amp;quot; fields, because for quick prototyping I just use sqlite. However now I&amp;#39;m almost done and I have to work on a more serious setup. I will be using PostgreSQL as my main production (and dev) database. And I like to use as few external third-party packages as possible. That includes django-taggit. I would like to replace this with a Postgres ArrayField. Since django-taggit uses a &lt;code&gt;form.save_m2m()&lt;/code&gt; it looks like it just uses a ManyToMany Field. And I understand that also.&lt;/p&gt;\n\n&lt;p&gt;But I don&amp;#39;t have enough in-depth knowledge. What are the actual technical implications? Are ArrayFields significantly faster? Are there any up/down-sides I&amp;#39;m not seeing for either of the two? Is there even any significant difference between the two?&lt;/p&gt;\n\n&lt;p&gt;Thanks so much in advance. I hope this is of interest to others as well.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'and0gd',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'booooomba',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/and0gd/djangotaggit_vs_postgresql_arrayfield_i_know_the/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/and0gd/djangotaggit_vs_postgresql_arrayfield_i_know_the/',
          subreddit_subscribers: 48849,
          created_utc: 1549364215,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'reactjs',
          selftext:
            'I am trying to establish a connection for a login form between my ReactJS web app and a PostgreSQL. Big noob here, if someone can point me in the right direction for how to get this to work I would appreciate it!\n\n&amp;#x200B;\n\nThanks!',
          author_fullname: 't2_rmhmm',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'How would I go about establishing a connection between ReactJS &amp; PostgreSQL?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/reactjs',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_agrvhx',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.reactjs',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547684620,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am trying to establish a connection for a login form between my ReactJS web app and a PostgreSQL. Big noob here, if someone can point me in the right direction for how to get this to work I would appreciate it!&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'confidence',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2zldd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'agrvhx',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'ZaidOmar',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/reactjs/comments/agrvhx/how_would_i_go_about_establishing_a_connection/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/reactjs/comments/agrvhx/how_would_i_go_about_establishing_a_connection/',
          subreddit_subscribers: 104856,
          created_utc: 1547684620,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'reactjs',
          selftext:
            'Hello guys,I just created a boilerplate that intergrates PostgreSQL with create-react-app through an API made with node.js/express.js and node-postgres.  \nIf you are using PostgreSQL I would love to get your feedback in order to improve it and If the boilerplate makes it easier for your to create your applications I would appreciate if you star the repo!\n\n[https://github.com/Malldoror/react-postgres-boilerplate](https://github.com/Malldoror/react-postgres-boilerplate)',
          author_fullname: 't2_2jgocz95',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'react-node-postgreSQL boilerplate',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/reactjs',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a4xajz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 14,
          domain: 'self.reactjs',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: true,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 14,
          approved_by: null,
          thumbnail: 'self',
          edited: 1544460594,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544460355,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello guys,I just created a boilerplate that intergrates PostgreSQL with create-react-app through an API made with node.js/express.js and node-postgres.&lt;br/&gt;\nIf you are using PostgreSQL I would love to get your feedback in order to improve it and If the boilerplate makes it easier for your to create your applications I would appreciate if you star the repo!&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://github.com/Malldoror/react-postgres-boilerplate"&gt;https://github.com/Malldoror/react-postgres-boilerplate&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'confidence',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/dRshYTqlWGy1egTnMAfO52PP2x8dAOs96JblV3ZUJ7o.jpg?auto=webp&amp;s=440d6ef5a8c6dc98007e7a681e4537b234d8102e',
                  width: 400,
                  height: 400
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/dRshYTqlWGy1egTnMAfO52PP2x8dAOs96JblV3ZUJ7o.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=f28cb17b17271b1780886f825855b0c19cacf92f',
                    width: 108,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/dRshYTqlWGy1egTnMAfO52PP2x8dAOs96JblV3ZUJ7o.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=cce4780975950e4ea504f5dd2f7e78e67c6aee2b',
                    width: 216,
                    height: 216
                  },
                  {
                    url:
                      'https://external-preview.redd.it/dRshYTqlWGy1egTnMAfO52PP2x8dAOs96JblV3ZUJ7o.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=fe625e9c7c65c621478ec6980ca7683267bff6f5',
                    width: 320,
                    height: 320
                  }
                ],
                variants: {},
                id: '71V3iNNkSocZUqUwZj4N1B-nXa7g0ED_xhXqIh0veFk'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2zldd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a4xajz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Malldoror',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/reactjs/comments/a4xajz/reactnodepostgresql_boilerplate/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/reactjs/comments/a4xajz/reactnodepostgresql_boilerplate/',
          subreddit_subscribers: 104856,
          created_utc: 1544460355,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'docker',
          selftext:
            'I need help with a complex (for me) multi server setup with PostgreSQL.\n\nI have to setup a Cloud Server and 3 Local Servers for our company.\n\n**Each Server will have:**\n\n* Linux Ubuntu 16.04\n* Docker\n* PostgreSQL 9.6\n* Nginx\n* (maybe also Rancher 1.6 for container Management)\n\n&amp;#x200B;\n\nUsers will normally connect to the Cloud instance for work.   \nBut if the Cloud is down, users need to access local on each location.  \n\n\nHow can i realize this scenario?   \nWhat should i use for PostgreSQL replication or sync?\n\n&amp;#x200B;\n\nThanks in advance\n\nKevin\n\n[Cloud &lt;&gt; Local Setup Image](https://i.stack.imgur.com/8iafS.jpg)',
          author_fullname: 't2_30u00vi8',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Sync PostgreSQL with Cloud and multi Local Locations',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/docker',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_b1cnk1',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.docker',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552641155,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I need help with a complex (for me) multi server setup with PostgreSQL.&lt;/p&gt;\n\n&lt;p&gt;I have to setup a Cloud Server and 3 Local Servers for our company.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;Each Server will have:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;Linux Ubuntu 16.04&lt;/li&gt;\n&lt;li&gt;Docker&lt;/li&gt;\n&lt;li&gt;PostgreSQL 9.6&lt;/li&gt;\n&lt;li&gt;Nginx&lt;/li&gt;\n&lt;li&gt;(maybe also Rancher 1.6 for container Management)&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Users will normally connect to the Cloud instance for work.&lt;br/&gt;\nBut if the Cloud is down, users need to access local on each location.  &lt;/p&gt;\n\n&lt;p&gt;How can i realize this scenario?&lt;br/&gt;\nWhat should i use for PostgreSQL replication or sync?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance&lt;/p&gt;\n\n&lt;p&gt;Kevin&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://i.stack.imgur.com/8iafS.jpg"&gt;Cloud &amp;lt;&amp;gt; Local Setup Image&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/AYzmZr0CbOk1aSQSythm5aNUD_NhsI9Lfprp0OAjAdQ.jpg?auto=webp&amp;s=f6017c7a643339d073df99f63a30895bcd20c056',
                  width: 865,
                  height: 562
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/AYzmZr0CbOk1aSQSythm5aNUD_NhsI9Lfprp0OAjAdQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b0b972a2c2ece9fdfae9fd22110dd4f65c65e639',
                    width: 108,
                    height: 70
                  },
                  {
                    url:
                      'https://external-preview.redd.it/AYzmZr0CbOk1aSQSythm5aNUD_NhsI9Lfprp0OAjAdQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=463c5e1a64e9515ae8b2689d15ef06902b5b1651',
                    width: 216,
                    height: 140
                  },
                  {
                    url:
                      'https://external-preview.redd.it/AYzmZr0CbOk1aSQSythm5aNUD_NhsI9Lfprp0OAjAdQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=d8f4d266067dfd72973c5270b4b78072fed5e295',
                    width: 320,
                    height: 207
                  },
                  {
                    url:
                      'https://external-preview.redd.it/AYzmZr0CbOk1aSQSythm5aNUD_NhsI9Lfprp0OAjAdQ.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=aaeb564af90dd5288d8349d271fffe0ad8e74821',
                    width: 640,
                    height: 415
                  }
                ],
                variants: {},
                id: 'hBXfBiCTw6-6sNCRZOP3GWDKCJ6XnG82DKDUPHcay88'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2y00f',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'b1cnk1',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Kevin070982',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/docker/comments/b1cnk1/sync_postgresql_with_cloud_and_multi_local/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/docker/comments/b1cnk1/sync_postgresql_with_cloud_and_multi_local/',
          subreddit_subscribers: 62072,
          created_utc: 1552641155,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I'm looking to build a simple statistics system (take input data, aggregate/sum it, serve it on request) on top of PostgreSQL, that would have a few components:  \n\n\n* An interface to input data (likely CRUD, no API for now to keep it simple).\n* A PostgreSQL database to store the data \n* Amazon API Gateway + LAMBDA functions to poll the data via SQL queries (and perhaps do some basic aggregation) and serve it.\n\nI was wondering if there are any libraries and/or systems in place that already do this that I should be aware of. For the number of data points I'll have from day one, I was actually thinking of using good indexing with PostgreSQL to actually do the aggregation (IE: select sum(foo)...., etc.).\n\nThank you for any advice!",
          author_fullname: 't2_czf1k',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Stats System built on top of PostgreSQL RDS?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_as3cn3',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550531156,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m looking to build a simple statistics system (take input data, aggregate/sum it, serve it on request) on top of PostgreSQL, that would have a few components:  &lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;An interface to input data (likely CRUD, no API for now to keep it simple).&lt;/li&gt;\n&lt;li&gt;A PostgreSQL database to store the data &lt;/li&gt;\n&lt;li&gt;Amazon API Gateway + LAMBDA functions to poll the data via SQL queries (and perhaps do some basic aggregation) and serve it.&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;p&gt;I was wondering if there are any libraries and/or systems in place that already do this that I should be aware of. For the number of data points I&amp;#39;ll have from day one, I was actually thinking of using good indexing with PostgreSQL to actually do the aggregation (IE: select sum(foo)...., etc.).&lt;/p&gt;\n\n&lt;p&gt;Thank you for any advice!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'as3cn3',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'manlymatt83',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/as3cn3/stats_system_built_on_top_of_postgresql_rds/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/as3cn3/stats_system_built_on_top_of_postgresql_rds/',
          subreddit_subscribers: 9388,
          created_utc: 1550531156,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Hello all,\n\nI made a recent post about my current situation and was overwhelmed with how much guidance I received from the people on this sub.  However, I decided to make a follow-up post as I still have a single question that is left un-answered (sort of... I think I see my options clearly, but I need a bit more of clarification and the resources online aren't answering it for me).\n\n&amp;#x200B;\n\nTo catch everybody up.  I would like to take a CSV file that will be emailed to me once a day from our CRM and place it into a PostgreSQL server hosted on Azure and then integrate that data with Power BI. (Pretty set on Power BI because the pricing paired with the features and the highly rated APP really has me excited =\\]  )\n\n&amp;#x200B;\n\nTHE QUESTION: people told me that Power BI does not directly integrate with PostgreSQL meaning that the connection would not be live, but rather 'extract'.  I am only slightly familiar with what this means working in Tableau for fun (I get a free license with my edu email).  EXACTLY how hard is this going to be to have to re-query all of the dashboards/graphs/analytics (assuming that is what extract means)?  I feel like in Tableau it was as simple as adjusting the data in the SQL Server I had at the time and clicking the refresh button?  I most likely won't have millions of rows of data, but that is a case potentially down the road.  This shouldn't be a massive database though.\n\n&amp;#x200B;\n\nAlso worth noting that while PostgreSQL is not listed as a direct integration with Power BI under their options, if you google \"power bi postgresql integration\" it populates this link: [https://powerbi.microsoft.com/en-us/integrations/postgresql/](https://powerbi.microsoft.com/en-us/integrations/postgresql/)  Is that just saying it is possible to integrate, but it won't be live or is this newly added and will solve my problem?\n\n&amp;#x200B;\n\nI'd really prefer not to use mySQL server as I would like to learn PostgreSQL since I feel like it would look better on a resume, but maybe I am crazy so please tell me if that is the case.  You all are the experts, but I am trying to learn!",
          author_fullname: 't2_iu6w1',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL integration with Power BI',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a65m1b',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 8,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 8,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1544800232,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello all,&lt;/p&gt;\n\n&lt;p&gt;I made a recent post about my current situation and was overwhelmed with how much guidance I received from the people on this sub.  However, I decided to make a follow-up post as I still have a single question that is left un-answered (sort of... I think I see my options clearly, but I need a bit more of clarification and the resources online aren&amp;#39;t answering it for me).&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;To catch everybody up.  I would like to take a CSV file that will be emailed to me once a day from our CRM and place it into a PostgreSQL server hosted on Azure and then integrate that data with Power BI. (Pretty set on Power BI because the pricing paired with the features and the highly rated APP really has me excited =]  )&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;THE QUESTION: people told me that Power BI does not directly integrate with PostgreSQL meaning that the connection would not be live, but rather &amp;#39;extract&amp;#39;.  I am only slightly familiar with what this means working in Tableau for fun (I get a free license with my edu email).  EXACTLY how hard is this going to be to have to re-query all of the dashboards/graphs/analytics (assuming that is what extract means)?  I feel like in Tableau it was as simple as adjusting the data in the SQL Server I had at the time and clicking the refresh button?  I most likely won&amp;#39;t have millions of rows of data, but that is a case potentially down the road.  This shouldn&amp;#39;t be a massive database though.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Also worth noting that while PostgreSQL is not listed as a direct integration with Power BI under their options, if you google &amp;quot;power bi postgresql integration&amp;quot; it populates this link: &lt;a href="https://powerbi.microsoft.com/en-us/integrations/postgresql/"&gt;https://powerbi.microsoft.com/en-us/integrations/postgresql/&lt;/a&gt;  Is that just saying it is possible to integrate, but it won&amp;#39;t be live or is this newly added and will solve my problem?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d really prefer not to use mySQL server as I would like to learn PostgreSQL since I feel like it would look better on a resume, but maybe I am crazy so please tell me if that is the case.  You all are the experts, but I am trying to learn!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/fjrnilmdser2UKg7ZkyzHNvL4qI37IspnqmWr0UFRlw.jpg?auto=webp&amp;s=50992ef5deaeb2bfeafc56fee3ad7efd28b99bc2',
                  width: 418,
                  height: 417
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/fjrnilmdser2UKg7ZkyzHNvL4qI37IspnqmWr0UFRlw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=8c0a2316bca96b414f8e4952ca6a5698b291a7cd',
                    width: 108,
                    height: 107
                  },
                  {
                    url:
                      'https://external-preview.redd.it/fjrnilmdser2UKg7ZkyzHNvL4qI37IspnqmWr0UFRlw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=8a355d0ac746691043582187bffa21e05336b010',
                    width: 216,
                    height: 215
                  },
                  {
                    url:
                      'https://external-preview.redd.it/fjrnilmdser2UKg7ZkyzHNvL4qI37IspnqmWr0UFRlw.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=cba1c2786d7870abc698107a99094955ceb3bdd4',
                    width: 320,
                    height: 319
                  }
                ],
                variants: {},
                id: 'rlIKQ4EgCXKeV5RXp4DaaeZZ7J2adnFN8TlWB5wJQ4Y'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a65m1b',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Black_Magic100',
          num_crossposts: 0,
          num_comments: 17,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a65m1b/postgresql_integration_with_power_bi/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a65m1b/postgresql_integration_with_power_bi/',
          subreddit_subscribers: 9388,
          created_utc: 1544800232,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'u_FieldForceConnect',
          selftext:
            'Nimap developers bring you the difference between PosrgreSQL and Mysql language. Choose carefully between postgreSQL vs Mysql.\n\nIf You are working with the database the first step is to research which database will best serve your needs. Many database packages are available, some are free (MySQL, Microsoft SQL, PostgreSQL)  and others cost hundreds of thousands of dollars(Oracle).',
          author_fullname: 't2_2cnnbv22',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL Vs. MySQL - Nimap Infotech',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'u/FieldForceConnect',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aynesp',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'user',
          ups: 1,
          domain: 'self.FieldForceConnect',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1552029054,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Nimap developers bring you the difference between PosrgreSQL and Mysql language. Choose carefully between postgreSQL vs Mysql.&lt;/p&gt;\n\n&lt;p&gt;If You are working with the database the first step is to research which database will best serve your needs. Many database packages are available, some are free (MySQL, Microsoft SQL, PostgreSQL)  and others cost hundreds of thousands of dollars(Oracle).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'qa',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_pglp8',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aynesp',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'FieldForceConnect',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/u_FieldForceConnect/comments/aynesp/postgresql_vs_mysql_nimap_infotech/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/u_FieldForceConnect/comments/aynesp/postgresql_vs_mysql_nimap_infotech/',
          subreddit_subscribers: 0,
          created_utc: 1552029054,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'unRAID',
          selftext:
            "So I just noticed that my Nextcloud container wasn't running so I checked my PostgreSQL log and it was telling me that the database is incompatible with v11 of PostgreSQl and mine was mine in v10.  Good on the container owner to update it but now databases made with v10.\n\nI wanted to use MySQL but it wouldn't create a database at all back when i set up unraid.  I also dont' want to have to redo my Nextcloud server and change all the little settings again all over the place.  Is there an easy (preferably) or at least any way to convert the database to v11 format?  ",
          author_fullname: 't2_9ctbl',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL update broke my database',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/unRAID',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9qi08k',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 3,
          domain: 'self.unRAID',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 3,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1540242314,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So I just noticed that my Nextcloud container wasn&amp;#39;t running so I checked my PostgreSQL log and it was telling me that the database is incompatible with v11 of PostgreSQl and mine was mine in v10.  Good on the container owner to update it but now databases made with v10.&lt;/p&gt;\n\n&lt;p&gt;I wanted to use MySQL but it wouldn&amp;#39;t create a database at all back when i set up unraid.  I also dont&amp;#39; want to have to redo my Nextcloud server and change all the little settings again all over the place.  Is there an easy (preferably) or at least any way to convert the database to v11 format?  &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2sn94',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9qi08k',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Polaris2246',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/unRAID/comments/9qi08k/postgresql_update_broke_my_database/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/unRAID/comments/9qi08k/postgresql_update_broke_my_database/',
          subreddit_subscribers: 9288,
          created_utc: 1540242314,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            '1. Recent AWS ads in the console:\n\n&gt;Amazon Aurora is a MySQL- and PostgreSQL-compatible enterprise-class database, starting at &lt;$1/day.\n\nAfter month-long support tag, I was told I "misinterpreted" the statement. The *correct* interpretation of that statement was that I could get a Aurora MySQL-compatible database for &lt;$1/day, or an Aurora PostgreSQL-compatible database for no less than $7/day (or $2.50/day with 3yr upfront reservation).\n\n2. The pricing section for Aurora PostgreSQL ([https://aws.amazon.com/rds/aurora/pricing/](https://aws.amazon.com/rds/aurora/pricing/)) has "Serverless Pricing". Except...that Severless Pricing isn\'t available for Aurora PostgreSQL. This is the **Aurora PostgreSQL-specific** pricing section, and it\'s talking about pricing that simply isn\'t even available.\n\n3. In the pattern of basically all Aurora docs/announcements, AWS recently announced "Amazon Aurora Backtrack – Turn Back Time" ([https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/](https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/)). Except if you the post all the way to the bottom, you find at the very end that is "Amazon Aurora *MySQL* Backtrack". I guess that title isn\'t as exciting?\n\n4. AFAIK it\'s not documented anywhere, but major version upgrades for Aurora PostgreSQL are impossible. 100% impossible. Try creating from snapshots, setting up replicas, whatever....it is 100% not possible to do a non-minor upgrade of Aurora PostgreSQL ever. You have to kludge together your own text import/export process between clusters, migration scripts, etc. which takes literally days on any decent data set. I hope you like the version of PostgreSQL you start with, because that\'s the one you\'re keeping.\n\n\\---\n\nAnyone have the inside scoop? Is Aurora PostgreSQL actually used by anybody? Is it ever *not* going to be a misleading and poorly supported product? Or should I go back to non-hyped vanilla PostgreSQL RDS?',
          author_fullname: 't2_q0mir',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Will Aurora PostgreSQL ever be anything but a dumpster fire?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9so3rt',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 77,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 77,
          approved_by: null,
          thumbnail: 'self',
          edited: 1540914417,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1540907725,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;ol&gt;\n&lt;li&gt;Recent AWS ads in the console:&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Amazon Aurora is a MySQL- and PostgreSQL-compatible enterprise-class database, starting at &amp;lt;$1/day.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;After month-long support tag, I was told I &amp;quot;misinterpreted&amp;quot; the statement. The &lt;em&gt;correct&lt;/em&gt; interpretation of that statement was that I could get a Aurora MySQL-compatible database for &amp;lt;$1/day, or an Aurora PostgreSQL-compatible database for no less than $7/day (or $2.50/day with 3yr upfront reservation).&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;p&gt;The pricing section for Aurora PostgreSQL (&lt;a href="https://aws.amazon.com/rds/aurora/pricing/"&gt;https://aws.amazon.com/rds/aurora/pricing/&lt;/a&gt;) has &amp;quot;Serverless Pricing&amp;quot;. Except...that Severless Pricing isn&amp;#39;t available for Aurora PostgreSQL. This is the &lt;strong&gt;Aurora PostgreSQL-specific&lt;/strong&gt; pricing section, and it&amp;#39;s talking about pricing that simply isn&amp;#39;t even available.&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;In the pattern of basically all Aurora docs/announcements, AWS recently announced &amp;quot;Amazon Aurora Backtrack – Turn Back Time&amp;quot; (&lt;a href="https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/"&gt;https://aws.amazon.com/blogs/aws/amazon-aurora-backtrack-turn-back-time/&lt;/a&gt;). Except if you the post all the way to the bottom, you find at the very end that is &amp;quot;Amazon Aurora &lt;em&gt;MySQL&lt;/em&gt; Backtrack&amp;quot;. I guess that title isn&amp;#39;t as exciting?&lt;/p&gt;&lt;/li&gt;\n&lt;li&gt;&lt;p&gt;AFAIK it&amp;#39;s not documented anywhere, but major version upgrades for Aurora PostgreSQL are impossible. 100% impossible. Try creating from snapshots, setting up replicas, whatever....it is 100% not possible to do a non-minor upgrade of Aurora PostgreSQL ever. You have to kludge together your own text import/export process between clusters, migration scripts, etc. which takes literally days on any decent data set. I hope you like the version of PostgreSQL you start with, because that&amp;#39;s the one you&amp;#39;re keeping.&lt;/p&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;---&lt;/p&gt;\n\n&lt;p&gt;Anyone have the inside scoop? Is Aurora PostgreSQL actually used by anybody? Is it ever &lt;em&gt;not&lt;/em&gt; going to be a misleading and poorly supported product? Or should I go back to non-hyped vanilla PostgreSQL RDS?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?auto=webp&amp;s=8afacfc14dfed09cec0415cac7d36db9c3374c61',
                  width: 1200,
                  height: 630
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=64a1b1322ed94c559cb213e6a08f3eb426a3fb0b',
                    width: 108,
                    height: 56
                  },
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=9edddfdb28bb0e92ceb041859aacef81ab9ed42e',
                    width: 216,
                    height: 113
                  },
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=de73cdc9da2d0b04938bb7d051ab1a3ceb783323',
                    width: 320,
                    height: 168
                  },
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=60037829d2ce04de0705a2b45123d8ab7c12d41c',
                    width: 640,
                    height: 336
                  },
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=e5a8f0da08b9281c578a8ab6f49a5b3f577ec9b8',
                    width: 960,
                    height: 504
                  },
                  {
                    url:
                      'https://external-preview.redd.it/Q6q5DgwzcfU6chKw4uevixQcBq1Ipi2NYLheQ4lv0Vk.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=0a9a9c1c38bd543a7ea6b718e139a9c1e6b62d18',
                    width: 1080,
                    height: 567
                  }
                ],
                variants: {},
                id: 'RUqh18uQTwuGJocqdUcC-6UfvfWS63SRDdr8AQqU3uM'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9so3rt',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'paulddraper',
          num_crossposts: 0,
          num_comments: 35,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/9so3rt/will_aurora_postgresql_ever_be_anything_but_a/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/9so3rt/will_aurora_postgresql_ever_be_anything_but_a/',
          subreddit_subscribers: 66268,
          created_utc: 1540907725,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            "Hi all. I've never created a function on PostgreSQL before and would like some guidance on how to do something.\n\nI have a very poor data export where the intended header of a table is actually on the 5th row. I want to create a view (or another table) that corrects this and I don't think I can do this with a simple SELECT because the alias of the columns are values from the table.\n\nWhat I'd like to do is to refer to the 5th row (or to specify which row in a parameter) and loop over all the fields on that row to be a view/table column alias. Then I'd like to fill in the contents of the view/table starting from the 7th row (or specify the row in the parameter).\n\nWhile I'd love to figure this out on my own, I honestly don't know what where to start except maybe this:\n\n(edited function with parameters)\n\n    CREATE OR REPLACE FUNCTION func1(\n        new_view TEXT,--naming my view/table\n        tbl TEXT,     --the original table\n        a INTEGER,    --the row with the intended header\n        c INTEGER,    --the row to start the contents\n    RETURNS VOID AS\n    $func$\n    BEGIN\n        EXECUTE format(\n            'CREATE OR REPLACE VIEW %s' || ' AS ' || 'SELECT * FROM %s'\n                , new_view, tbl);\n    \tRETURN;\n    END;\n    $BODY$\n    LANGUAGE\n    \tplpgsql STRICT",
          author_fullname: 't2_1222wl',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[PostgreSQL] Creating a function that dynamically creates views from another table',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'd',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_al8lpw',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'PostgreSQL',
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: 1548825377,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548819759,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all. I&amp;#39;ve never created a function on PostgreSQL before and would like some guidance on how to do something.&lt;/p&gt;\n\n&lt;p&gt;I have a very poor data export where the intended header of a table is actually on the 5th row. I want to create a view (or another table) that corrects this and I don&amp;#39;t think I can do this with a simple SELECT because the alias of the columns are values from the table.&lt;/p&gt;\n\n&lt;p&gt;What I&amp;#39;d like to do is to refer to the 5th row (or to specify which row in a parameter) and loop over all the fields on that row to be a view/table column alias. Then I&amp;#39;d like to fill in the contents of the view/table starting from the 7th row (or specify the row in the parameter).&lt;/p&gt;\n\n&lt;p&gt;While I&amp;#39;d love to figure this out on my own, I honestly don&amp;#39;t know what where to start except maybe this:&lt;/p&gt;\n\n&lt;p&gt;(edited function with parameters)&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CREATE OR REPLACE FUNCTION func1(\n    new_view TEXT,--naming my view/table\n    tbl TEXT,     --the original table\n    a INTEGER,    --the row with the intended header\n    c INTEGER,    --the row to start the contents\nRETURNS VOID AS\n$func$\nBEGIN\n    EXECUTE format(\n        &amp;#39;CREATE OR REPLACE VIEW %s&amp;#39; || &amp;#39; AS &amp;#39; || &amp;#39;SELECT * FROM %s&amp;#39;\n            , new_view, tbl);\n    RETURN;\nEND;\n$BODY$\nLANGUAGE\n    plpgsql STRICT\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'al8lpw',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'realmerica',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/SQL/comments/al8lpw/postgresql_creating_a_function_that_dynamically/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/al8lpw/postgresql_creating_a_function_that_dynamically/',
          subreddit_subscribers: 34612,
          created_utc: 1548819759,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'javascript',
          selftext:
            'Can someone recommend me a way of nicely storing JSON structure in a PostgreSQL database? From the front-end I got data that looks like this:\n\n    "hour": [\n          {\n            "id": 4,\n            "user_id": 7,\n            "userinput": {\n              "2018-11-10": "8",\n              "2018-11-11": 10,\n              "2018-11-12": "7",\n              "2018-11-13": "8",\n              "2018-11-14": "8",\n              "2018-11-15": "10"\n            }\n          }\n        ]\n\nBasically, a user will put in a number in an input field that relates to a specific date and if a single user would have an input value for each day (which they likely will), it gets super messy really quick.\nIdeally I\'d like to store this data in a relational format because it gets really ugly and hard to query if everything sits in the database table as one row',
          author_fullname: 't2_xho2o',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Storing JSON data nicely in a PostgreSQL database?',
          link_flair_richtext: [
            {
              e: 'text',
              t: 'help'
            }
          ],
          subreddit_name_prefixed: 'r/javascript',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'help',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9zxvs1',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 15,
          domain: 'self.javascript',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'help',
          can_mod_post: false,
          score: 15,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543059967,
          link_flair_type: 'richtext',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Can someone recommend me a way of nicely storing JSON structure in a PostgreSQL database? From the front-end I got data that looks like this:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;&amp;quot;hour&amp;quot;: [\n      {\n        &amp;quot;id&amp;quot;: 4,\n        &amp;quot;user_id&amp;quot;: 7,\n        &amp;quot;userinput&amp;quot;: {\n          &amp;quot;2018-11-10&amp;quot;: &amp;quot;8&amp;quot;,\n          &amp;quot;2018-11-11&amp;quot;: 10,\n          &amp;quot;2018-11-12&amp;quot;: &amp;quot;7&amp;quot;,\n          &amp;quot;2018-11-13&amp;quot;: &amp;quot;8&amp;quot;,\n          &amp;quot;2018-11-14&amp;quot;: &amp;quot;8&amp;quot;,\n          &amp;quot;2018-11-15&amp;quot;: &amp;quot;10&amp;quot;\n        }\n      }\n    ]\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically, a user will put in a number in an input field that relates to a specific date and if a single user would have an input value for each day (which they likely will), it gets super messy really quick.\nIdeally I&amp;#39;d like to store this data in a relational format because it gets really ugly and hard to query if everything sits in the database table as one row&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh30',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9zxvs1',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'WhoYouWit',
          num_crossposts: 0,
          num_comments: 13,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/javascript/comments/9zxvs1/storing_json_data_nicely_in_a_postgresql_database/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/javascript/comments/9zxvs1/storing_json_data_nicely_in_a_postgresql_database/',
          subreddit_subscribers: 551583,
          created_utc: 1543059967,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            'Sorry for the noobish question. I\'m trying to set up a localhost  postgreSQL 10 server with pgAdmin 4 on Windows 7. Whenever I try to acess or create server, I get following message: could not connect to server: "Connection refused (0x0000274D/10061)\nIs the server running on host "localhost" (::1) and accepting\nTCP/IP connections on port 5432?"\n\nThe odd thing: It worked the other day, when I gave pgAdmin Firewall allowance and changed listen_addresses in the config file to *. Now it doesn\'t work anymore without me changing anything. Did I make an oversight?',
          author_fullname: 't2_rtl6g',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Problems setting up my first postgres server',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9mab1d',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 9,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 9,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1538959336,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Sorry for the noobish question. I&amp;#39;m trying to set up a localhost  postgreSQL 10 server with pgAdmin 4 on Windows 7. Whenever I try to acess or create server, I get following message: could not connect to server: &amp;quot;Connection refused (0x0000274D/10061)\nIs the server running on host &amp;quot;localhost&amp;quot; (::1) and accepting\nTCP/IP connections on port 5432?&amp;quot;&lt;/p&gt;\n\n&lt;p&gt;The odd thing: It worked the other day, when I gave pgAdmin Firewall allowance and changed listen_addresses in the config file to *. Now it doesn&amp;#39;t work anymore without me changing anything. Did I make an oversight?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9mab1d',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Rollpope',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/SQL/comments/9mab1d/problems_setting_up_my_first_postgres_server/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/9mab1d/problems_setting_up_my_first_postgres_server/',
          subreddit_subscribers: 34612,
          created_utc: 1538959336,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQL',
          selftext:
            "This is taken from this [blog post](http://coussej.github.io/2016/01/14/Replacing-EAV-with-JSONB-in-PostgreSQL/). The post compares EAV and JSONB. I thought this is already the most efficient EAV design but some commenters in that post said it is not but I don't understand what they mean. Their comments are under the code. What should be changed to make it more efficient?\n\n    CREATE TABLE entity ( \n      id           SERIAL PRIMARY KEY, \n      name         TEXT, \n      description  TEXT\n    );\n    CREATE TABLE entity_attribute (\n      id          SERIAL PRIMARY KEY, \n      name        TEXT\n    );\n    CREATE TABLE entity_attribute_value (\n      id                  SERIAL PRIMARY KEY, \n      entity_id           INT    REFERENCES entity(id), \n      entity_attribute_id INT    REFERENCES entity_attribute(id), \n      value               TEXT\n    );\n\n\n&gt; In your EAV model, wouldn't you want to store attribute_values seperately, and join entities to attribute_values in the entity_attribute_values, instead of repeating the text values per entity? Identifying all of the values for an attribute becomes quite simple, and uses much less space. You could also add typed columns to said attribute_values table, and cast/coalesce them into a text computed column, preserving strong datatypes. Im interested in leveraging jsonb, but need to compare it to a more efficient EAV design to really see the benefits.\n\n.\n\n&gt; Try looking at EAV implemented actually using datatypes (a separate table for each data type you want to store. This way you reduce the storage space of text, AND can really leverage indexes. The JSONB approach really starts to break down when you need to be fast in filtering against the attributes. Space is cheap, time is money. In some ways, this article actually proves that EAV is faster. ALSO, you don't have to join back for each attribute to place it in a select, just call all the attributes you from their respective table and store them as a separate result set. Super quick, and allows you to easily reference them by attribute ID via an enum, OR join out to the meta table to pick up the column name.",
          author_fullname: 't2_zqti7',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: '(PostgreSQL) Efficient EAV design?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQL',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'd',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_axb8ki',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.SQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'PostgreSQL',
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1551727926,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;This is taken from this &lt;a href="http://coussej.github.io/2016/01/14/Replacing-EAV-with-JSONB-in-PostgreSQL/"&gt;blog post&lt;/a&gt;. The post compares EAV and JSONB. I thought this is already the most efficient EAV design but some commenters in that post said it is not but I don&amp;#39;t understand what they mean. Their comments are under the code. What should be changed to make it more efficient?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;CREATE TABLE entity ( \n  id           SERIAL PRIMARY KEY, \n  name         TEXT, \n  description  TEXT\n);\nCREATE TABLE entity_attribute (\n  id          SERIAL PRIMARY KEY, \n  name        TEXT\n);\nCREATE TABLE entity_attribute_value (\n  id                  SERIAL PRIMARY KEY, \n  entity_id           INT    REFERENCES entity(id), \n  entity_attribute_id INT    REFERENCES entity_attribute(id), \n  value               TEXT\n);\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;In your EAV model, wouldn&amp;#39;t you want to store attribute_values seperately, and join entities to attribute_values in the entity_attribute_values, instead of repeating the text values per entity? Identifying all of the values for an attribute becomes quite simple, and uses much less space. You could also add typed columns to said attribute_values table, and cast/coalesce them into a text computed column, preserving strong datatypes. Im interested in leveraging jsonb, but need to compare it to a more efficient EAV design to really see the benefits.&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;p&gt;.&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Try looking at EAV implemented actually using datatypes (a separate table for each data type you want to store. This way you reduce the storage space of text, AND can really leverage indexes. The JSONB approach really starts to break down when you need to be fast in filtering against the attributes. Space is cheap, time is money. In some ways, this article actually proves that EAV is faster. ALSO, you don&amp;#39;t have to join back for each attribute to place it in a select, just call all the attributes you from their respective table and store them as a separate result set. Super quick, and allows you to easily reference them by attribute ID via an enum, OR join out to the meta table to pick up the column name.&lt;/p&gt;\n&lt;/blockquote&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/nlwCXy4U8eCBqsFDhyRgi_NmjMsolKwCB45Dy7Ai3bU.jpg?auto=webp&amp;s=06a6a621bb6f1ca05b196d2274847d5ab6c94992',
                  width: 400,
                  height: 400
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/nlwCXy4U8eCBqsFDhyRgi_NmjMsolKwCB45Dy7Ai3bU.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=132ea74a56a899762ac44390163a915cf02f0380',
                    width: 108,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/nlwCXy4U8eCBqsFDhyRgi_NmjMsolKwCB45Dy7Ai3bU.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=6d7c55c227c7a001c32b072a2a13814aec1bd237',
                    width: 216,
                    height: 216
                  },
                  {
                    url:
                      'https://external-preview.redd.it/nlwCXy4U8eCBqsFDhyRgi_NmjMsolKwCB45Dy7Ai3bU.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=9ff8c57b5d8fdaabf13228e07d2df4ecf41ff022',
                    width: 320,
                    height: 320
                  }
                ],
                variants: {},
                id: 'pX4cPqYtUTpxK3-fQHLvdDdM_2F4tB3j7urhvsg4K5Q'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qp8q',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'axb8ki',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'netok',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/SQL/comments/axb8ki/postgresql_efficient_eav_design/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/SQL/comments/axb8ki/postgresql_efficient_eav_design/',
          subreddit_subscribers: 34612,
          created_utc: 1551727926,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'AskComputerScience',
          selftext:
            "Hello friends,\n\nI've recently been tasked with migrating two separate MS Access databases into one PostgreSQL database. I'm relatively new in the industry and am going into this project almost alone, so I would love some help/tips. The main purpose of using MS Access is because the company needs to create reports and forms. However, we're reaching the 2 Gig max space in the MS Access backend, hence the migration.\n\nI've decided to go with PostgreSQL because it is open source (I won't need to purchase a license), however, that means it doesn't come in with built-in migration tools. Furthermore, I also need Access to serve as a front end to the database. I'm not sure how I would link the two and I need some guidance. \n\nI really want to do this the right way. What are some things I should look out for? How should I go about doing this? Any help is much appreciated.",
          author_fullname: 't2_cp07k',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Migrating/linking Ms Access to Postgresql',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/AskComputerScience',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ahe43e',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.AskComputerScience',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547840177,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello friends,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve recently been tasked with migrating two separate MS Access databases into one PostgreSQL database. I&amp;#39;m relatively new in the industry and am going into this project almost alone, so I would love some help/tips. The main purpose of using MS Access is because the company needs to create reports and forms. However, we&amp;#39;re reaching the 2 Gig max space in the MS Access backend, hence the migration.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve decided to go with PostgreSQL because it is open source (I won&amp;#39;t need to purchase a license), however, that means it doesn&amp;#39;t come in with built-in migration tools. Furthermore, I also need Access to serve as a front end to the database. I&amp;#39;m not sure how I would link the two and I need some guidance. &lt;/p&gt;\n\n&lt;p&gt;I really want to do this the right way. What are some things I should look out for? How should I go about doing this? Any help is much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2shke',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ahe43e',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'MexicanPirate',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/AskComputerScience/comments/ahe43e/migratinglinking_ms_access_to_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/AskComputerScience/comments/ahe43e/migratinglinking_ms_access_to_postgresql/',
          subreddit_subscribers: 30735,
          created_utc: 1547840177,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "See last image on this site: [https://community.powerbi.com/t5/Community-Blog/Configuring-Power-BI-Connectivity-to-PostgreSQL-Database/ba-p/12567?lightbox-message-images-12567=1284iBD272F6D7F87320B](https://community.powerbi.com/t5/Community-Blog/Configuring-Power-BI-Connectivity-to-PostgreSQL-Database/ba-p/12567?lightbox-message-images-12567=1284iBD272F6D7F87320B)\n\n&amp;#x200B;\n\nI am able to see everything except for the actual tables in the dropdown.  Not sure what to do.  I've been trying a lot of things, but to no avail.\n\n&amp;#x200B;\n\nedit: [https://imgur.com/a/fWLRqV9](https://imgur.com/a/fWLRqV9)\n\n&amp;#x200B;\n\nedit2: I managed to figure it out.  I reinstalled everything, but put it on my desktop versus my laptop and for whatever reason the connection worked.  The only Thing I changed was laptop -&gt; desktop and also I used the most up to date version of postreSQL, which very well may have been why it wasn't working.",
          author_fullname: 't2_iu6w1',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Unable to see tables in Power BI connection with locally hosted PostgreSQL server',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a71mu0',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: 1545076169,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1545066380,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;See last image on this site: &lt;a href="https://community.powerbi.com/t5/Community-Blog/Configuring-Power-BI-Connectivity-to-PostgreSQL-Database/ba-p/12567?lightbox-message-images-12567=1284iBD272F6D7F87320B"&gt;https://community.powerbi.com/t5/Community-Blog/Configuring-Power-BI-Connectivity-to-PostgreSQL-Database/ba-p/12567?lightbox-message-images-12567=1284iBD272F6D7F87320B&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I am able to see everything except for the actual tables in the dropdown.  Not sure what to do.  I&amp;#39;ve been trying a lot of things, but to no avail.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;edit: &lt;a href="https://imgur.com/a/fWLRqV9"&gt;https://imgur.com/a/fWLRqV9&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;edit2: I managed to figure it out.  I reinstalled everything, but put it on my desktop versus my laptop and for whatever reason the connection worked.  The only Thing I changed was laptop -&amp;gt; desktop and also I used the most up to date version of postreSQL, which very well may have been why it wasn&amp;#39;t working.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/ELhUO_E7spvpE1gMULqpfurhY-AL3wznV5e-OlG4-8E.jpg?auto=webp&amp;s=acec65f7199328211eda5289efe0b004cdd49c05',
                  width: 512,
                  height: 298
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/ELhUO_E7spvpE1gMULqpfurhY-AL3wznV5e-OlG4-8E.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=cb1b8cd874887d734373c5f67ef287c8f99a05b1',
                    width: 108,
                    height: 62
                  },
                  {
                    url:
                      'https://external-preview.redd.it/ELhUO_E7spvpE1gMULqpfurhY-AL3wznV5e-OlG4-8E.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=3205e6637f1a1b87206a15ad4d888b67aeac47a7',
                    width: 216,
                    height: 125
                  },
                  {
                    url:
                      'https://external-preview.redd.it/ELhUO_E7spvpE1gMULqpfurhY-AL3wznV5e-OlG4-8E.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=81e3199d0be9230e6b6a33ca56970b79c78af382',
                    width: 320,
                    height: 186
                  }
                ],
                variants: {},
                id: '8JLI0AaZpdDk4ZnJGuQpZNNfHEh3cPXAvN9yXY8oYvY'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a71mu0',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Black_Magic100',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a71mu0/unable_to_see_tables_in_power_bi_connection_with/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a71mu0/unable_to_see_tables_in_power_bi_connection_with/',
          subreddit_subscribers: 9388,
          created_utc: 1545066380,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'django',
          selftext:
            'I am having trouble getting postgres up and running for my Django app, which is currently running mysql db. I have been mostly following along with [this](https://djangotricks.blogspot.com/2017/12/from-mysql-to-postgresql.html) guide, and now I am trying to add a new user and database to the postgres server, but am unable to. I have ssh tunneled into a server on my network which holds my django app and the postgres server. \n\n\n\nI believe something has gone wrong in the installation/setup of postgres, because whenever I run "psql template1" or "createuser", I get the following error: \n\n    psql: could not connect to server: No such file or directory\n\tIs the server running locally and accepting\n\tconnections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?\n\nHowever, I believe postgres is running, because when I run "sudo service postgresql status", I receive the following message:\n\n    postgresql.service - PostgreSQL RDBMS\n    Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)\n    Active: active (exited) since Tue 2019-02-12 09:45:52 EST; 10min ago\n    Process: 3585 ExecStart=/bin/true (code=exited, status=0/SUCCESS)\n    Main PID: 3585 (code=exited, status=0/SUCCESS)\n    Tasks: 0\n    Memory: 0B\n    CPU: 0\n    CGroup: /system.slice/postgresql.service\n\nI have tried adding\n\n    local   all    all    trust\n\nto the first non-commented line of my pg_hba.conf, and of course resterted the server. "Which psql" returns "/usr/bin/psql". \n\n\n\nOther important things in my postgresql.conf file I\'ve tried (not in order):\n\n    unix_socket_directories = \'/var/run/postgresql\'\n    listen_addresses = \'*\' \n    logging_collector = on \n    tcpip_socket = true\n    #log_destination = \'stderr\'\n\n\n\nI cannot figure out how to progress with my postgres setup due to this error. I have tried several things, does anyone else have any insight as to what the issue could be? I am also not sure where to find the log file, which may help further troubleshooting. I would be happy to provide any additional info that would be helpful. Any assistance would be greatly appreciated, thanks! \n\n',
          author_fullname: 't2_aq7yw',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Converting from mysql to postgres: cannot run psql or access postgresql db despite postgres server active on localhost',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/django',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_apxpfl',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.django',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550002622,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I am having trouble getting postgres up and running for my Django app, which is currently running mysql db. I have been mostly following along with &lt;a href="https://djangotricks.blogspot.com/2017/12/from-mysql-to-postgresql.html"&gt;this&lt;/a&gt; guide, and now I am trying to add a new user and database to the postgres server, but am unable to. I have ssh tunneled into a server on my network which holds my django app and the postgres server. &lt;/p&gt;\n\n&lt;p&gt;I believe something has gone wrong in the installation/setup of postgres, because whenever I run &amp;quot;psql template1&amp;quot; or &amp;quot;createuser&amp;quot;, I get the following error: &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;psql: could not connect to server: No such file or directory\nIs the server running locally and accepting\nconnections on Unix domain socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;However, I believe postgres is running, because when I run &amp;quot;sudo service postgresql status&amp;quot;, I receive the following message:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;postgresql.service - PostgreSQL RDBMS\nLoaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)\nActive: active (exited) since Tue 2019-02-12 09:45:52 EST; 10min ago\nProcess: 3585 ExecStart=/bin/true (code=exited, status=0/SUCCESS)\nMain PID: 3585 (code=exited, status=0/SUCCESS)\nTasks: 0\nMemory: 0B\nCPU: 0\nCGroup: /system.slice/postgresql.service\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I have tried adding&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;local   all    all    trust\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;to the first non-commented line of my pg_hba.conf, and of course resterted the server. &amp;quot;Which psql&amp;quot; returns &amp;quot;/usr/bin/psql&amp;quot;. &lt;/p&gt;\n\n&lt;p&gt;Other important things in my postgresql.conf file I&amp;#39;ve tried (not in order):&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;unix_socket_directories = &amp;#39;/var/run/postgresql&amp;#39;\nlisten_addresses = &amp;#39;*&amp;#39; \nlogging_collector = on \ntcpip_socket = true\n#log_destination = &amp;#39;stderr&amp;#39;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I cannot figure out how to progress with my postgres setup due to this error. I have tried several things, does anyone else have any insight as to what the issue could be? I am also not sure where to find the log file, which may help further troubleshooting. I would be happy to provide any additional info that would be helpful. Any assistance would be greatly appreciated, thanks! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?auto=webp&amp;s=ef6315328b26e424216038ff8514d6cd54b62c66',
                  width: 976,
                  height: 512
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=d95966b9eb6eeff870ab0dbbe7add2e01422cf82',
                    width: 108,
                    height: 56
                  },
                  {
                    url:
                      'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=f38cb32491ab18aed7ac2c54efbe171ba11ecbe1',
                    width: 216,
                    height: 113
                  },
                  {
                    url:
                      'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5f0f032ddfe8d9fea712339cdb6fe5862b28d26f',
                    width: 320,
                    height: 167
                  },
                  {
                    url:
                      'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=37af2f46f3b8880d3a4bda2dcf151f7898885a99',
                    width: 640,
                    height: 335
                  },
                  {
                    url:
                      'https://external-preview.redd.it/WXKfero9uXnYjnIkupdBOjd2XaOJz1rIEViy22Ppf44.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=93f0fc904bc15786117845a5c4ed8437ae956f4d',
                    width: 960,
                    height: 503
                  }
                ],
                variants: {},
                id: '89ZSPee1MRu-gk_yig1Iw5CicMFCzq3xHga2BuQx_R0'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh4v',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'apxpfl',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'crushendo',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/django/comments/apxpfl/converting_from_mysql_to_postgres_cannot_run_psql/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/django/comments/apxpfl/converting_from_mysql_to_postgres_cannot_run_psql/',
          subreddit_subscribers: 48849,
          created_utc: 1550002622,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'LinuxonDex',
          selftext:
            'SOLVED in [the fist comment](https://www.reddit.com/r/LinuxonDex/comments/a1ftvk/cannot_start_or_create_a_cluster_for_postgresql/eb1zzlo/)\n\nInstalled postgres, but cannot run it because something fail and db cluster is not created. When I am trying to create a cluster through pg\\_createcluster or initdb it throw an error. Was somebody able to use PostgreSQL on Dex?\n\n&amp;#x200B;\n\n    dextop@localhost:~$ /usr/lib/postgresql/9.5/bin/initdb -D $HOME/Apps/Postgres -A md5 -U dextop -W  \n    The files belonging to this database system will be owned by user "dextop".\n    This user must also own the server process.\n    \n    The database cluster will be initialized with locale "en_US.UTF-8".\n    The default database encoding has accordingly been set to "UTF8".\n    The default text search configuration will be set to "english".\n    \n    Data page checksums are disabled.\n    \n    creating directory /home/dextop/Apps/Postgres ... ok\n    creating subdirectories ... ok\n    selecting default max_connections ... 10\n    selecting default shared_buffers ... 400kB\n    selecting dynamic shared memory implementation ... posix\n    creating configuration files ... ok\n    creating template1 database in /home/dextop/Apps/Postgres/base/1 ... FATAL:  could not create shared memory segment: Function not implemented\n    DETAIL:  Failed system call was shmget(key=1, size=56, 03600).\n    child process exited with exit code 1\n    initdb: removing data directory "/home/dextop/Apps/Postgres"\n\n&amp;#x200B;',
          author_fullname: 't2_ogi1i',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Cannot start or create a cluster for PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/LinuxonDex',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a1ftvk',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 3,
          domain: 'self.LinuxonDex',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 3,
          approved_by: null,
          thumbnail: 'self',
          edited: 1543906454,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543483157,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;SOLVED in &lt;a href="https://www.reddit.com/r/LinuxonDex/comments/a1ftvk/cannot_start_or_create_a_cluster_for_postgresql/eb1zzlo/"&gt;the fist comment&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Installed postgres, but cannot run it because something fail and db cluster is not created. When I am trying to create a cluster through pg_createcluster or initdb it throw an error. Was somebody able to use PostgreSQL on Dex?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;dextop@localhost:~$ /usr/lib/postgresql/9.5/bin/initdb -D $HOME/Apps/Postgres -A md5 -U dextop -W  \nThe files belonging to this database system will be owned by user &amp;quot;dextop&amp;quot;.\nThis user must also own the server process.\n\nThe database cluster will be initialized with locale &amp;quot;en_US.UTF-8&amp;quot;.\nThe default database encoding has accordingly been set to &amp;quot;UTF8&amp;quot;.\nThe default text search configuration will be set to &amp;quot;english&amp;quot;.\n\nData page checksums are disabled.\n\ncreating directory /home/dextop/Apps/Postgres ... ok\ncreating subdirectories ... ok\nselecting default max_connections ... 10\nselecting default shared_buffers ... 400kB\nselecting dynamic shared memory implementation ... posix\ncreating configuration files ... ok\ncreating template1 database in /home/dextop/Apps/Postgres/base/1 ... FATAL:  could not create shared memory segment: Function not implemented\nDETAIL:  Failed system call was shmget(key=1, size=56, 03600).\nchild process exited with exit code 1\ninitdb: removing data directory &amp;quot;/home/dextop/Apps/Postgres&amp;quot;\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_r1gqk',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a1ftvk',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'WinnieBoom',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/LinuxonDex/comments/a1ftvk/cannot_start_or_create_a_cluster_for_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/LinuxonDex/comments/a1ftvk/cannot_start_or_create_a_cluster_for_postgresql/',
          subreddit_subscribers: 846,
          created_utc: 1543483157,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'linuxquestions',
          selftext:
            "Hi,\n\n&amp;#x200B;\n\nI'm trying to install PostgreSQL in my instance but always shows me this error\n\n\\`failure: repodata/repomd.xml from pgdg96: \\[Errno 256\\] No more mirrors to try.\\`\n\n&amp;#x200B;\n\nwhat should I do? it used yum for installing dependencies.",
          author_fullname: 't2_16du2p',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'fail to install PostgreSQL in amazon linux destro',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/linuxquestions',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9dgclz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 8,
          domain: 'self.linuxquestions',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 8,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1536222191,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi,&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to install PostgreSQL in my instance but always shows me this error&lt;/p&gt;\n\n&lt;p&gt;`failure: repodata/repomd.xml from pgdg96: [Errno 256] No more mirrors to try.`&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;what should I do? it used yum for installing dependencies.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2rbms',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9dgclz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'imohd23',
          num_crossposts: 0,
          num_comments: 13,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/linuxquestions/comments/9dgclz/fail_to_install_postgresql_in_amazon_linux_destro/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/linuxquestions/comments/9dgclz/fail_to_install_postgresql_in_amazon_linux_destro/',
          subreddit_subscribers: 93258,
          created_utc: 1536222191,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Hello people, I am new in SSRS, want to run a query from SSRS and use postgreSQL as database, I managed to make connection between those two, to run a query without parameters, but when I wanted to add report parameter and then pass it to dataset query, It causes error. I attached stack overflow question photo, where my problem is described even better. Help me if possible :( !\n\nhttps://i.redd.it/wo722cr5ebd21.png',
          author_fullname: 't2_105x1fvu',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'PostgreSQL with SSRS',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: 96,
          hide_score: false,
          media_metadata: {
            wo722cr5ebd21: {
              status: 'valid',
              e: 'Image',
              s: {
                y: 643,
                x: 931,
                u: 'https://i.redd.it/wo722cr5ebd21.png'
              },
              m: 'image/png',
              id: 'wo722cr5ebd21'
            }
          },
          name: 't3_akxooc',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: 140,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548746876,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hello people, I am new in SSRS, want to run a query from SSRS and use postgreSQL as database, I managed to make connection between those two, to run a query without parameters, but when I wanted to add report parameter and then pass it to dataset query, It causes error. I attached stack overflow question photo, where my problem is described even better. Help me if possible :( !&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://i.redd.it/wo722cr5ebd21.png"&gt;https://i.redd.it/wo722cr5ebd21.png&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'akxooc',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Alucsardx',
          num_crossposts: 0,
          num_comments: 1,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/PostgreSQL/comments/akxooc/postgresql_with_ssrs/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/akxooc/postgresql_with_ssrs/',
          subreddit_subscribers: 9388,
          created_utc: 1548746876,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Hi all,  \n\n\nSo I've been playing with postgreSQL for the best part of a week and I really enjoy it.  \nSo far it's been easy enough to make the transition from the standard MySQL setup I'd use.  \n\n\nMy question really is, what are the pros?.  \nAt the momenet the two seem very similar in use - am I missing the big appeal of PostgreSQL?   \nSome hidden advanced features?  \n\n\nPlease let me know as I'd love to encourage more people to use it - it's just difficult to do when I don't know why it's better.",
          author_fullname: 't2_dap71',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Postgresql - what are some solid pros?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_933p1v',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: '',
          subreddit_type: 'public',
          ups: 11,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: 'ad3b3a0e-85b1-11e6-8d33-0ec387b19b95',
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 11,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: 'programmer',
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1532954207,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all,  &lt;/p&gt;\n\n&lt;p&gt;So I&amp;#39;ve been playing with postgreSQL for the best part of a week and I really enjoy it.&lt;br/&gt;\nSo far it&amp;#39;s been easy enough to make the transition from the standard MySQL setup I&amp;#39;d use.  &lt;/p&gt;\n\n&lt;p&gt;My question really is, what are the pros?.&lt;br/&gt;\nAt the momenet the two seem very similar in use - am I missing the big appeal of PostgreSQL?&lt;br/&gt;\nSome hidden advanced features?  &lt;/p&gt;\n\n&lt;p&gt;Please let me know as I&amp;#39;d love to encourage more people to use it - it&amp;#39;s just difficult to do when I don&amp;#39;t know why it&amp;#39;s better.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: 'Programmer',
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '933p1v',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'AllanOcelot',
          num_crossposts: 0,
          num_comments: 26,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: 'dark',
          permalink:
            '/r/PostgreSQL/comments/933p1v/postgresql_what_are_some_solid_pros/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/933p1v/postgresql_what_are_some_solid_pros/',
          subreddit_subscribers: 9388,
          created_utc: 1532954207,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            'If this is all I have, do I really need API Gateway + Lambda or AppSync? My main concerns are how to efficiently develop locally and deploy vs. using the lame the browser editor, and how AppSync doesn’t connect straight to PostgreSQL/RDS, only DynamoDB which I am not using. I also have all of my subscriptions already built without AppSync. \n\nIt really seems like all I need is just an EC2 + RDS, so pretty much just Elastic Beanstalk. Am I being naive here? I do want to eventually break things up into microservices, but should I go through that pain now? If I did Lambda now, I’d really just have a single Lambda monolith, so that probably wouldn’t even be cheaper? \n\nIn addition, I also need auth, but I am thinking of using Firebase Auth over Cognito due to cost. Was also considering Firebase Storage over S3 for storing user photos if that’s also where my users are, but S3 is probably better/cheaper.\n\nThanks!',
          author_fullname: 't2_10rl55se',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Just have a simple Node.js GraphQL server + PostgreSQL database. Cheap way to host?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: 'resource',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9iiplp',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'technical resource',
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail: 'self',
          edited: 1537802040,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1537801686,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;If this is all I have, do I really need API Gateway + Lambda or AppSync? My main concerns are how to efficiently develop locally and deploy vs. using the lame the browser editor, and how AppSync doesn’t connect straight to PostgreSQL/RDS, only DynamoDB which I am not using. I also have all of my subscriptions already built without AppSync. &lt;/p&gt;\n\n&lt;p&gt;It really seems like all I need is just an EC2 + RDS, so pretty much just Elastic Beanstalk. Am I being naive here? I do want to eventually break things up into microservices, but should I go through that pain now? If I did Lambda now, I’d really just have a single Lambda monolith, so that probably wouldn’t even be cheaper? &lt;/p&gt;\n\n&lt;p&gt;In addition, I also need auth, but I am thinking of using Firebase Auth over Cognito due to cost. Was also considering Firebase Storage over S3 for storing user photos if that’s also where my users are, but S3 is probably better/cheaper.&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          link_flair_template_id: '90cdeee6-b9e3-11e6-8d35-0eabbe333632',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9iiplp',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'impossibletogetagf',
          num_crossposts: 1,
          num_comments: 8,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/9iiplp/just_have_a_simple_nodejs_graphql_server/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/9iiplp/just_have_a_simple_nodejs_graphql_server/',
          subreddit_subscribers: 66268,
          created_utc: 1537801686,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'golang',
          selftext:
            'I have connected successfully to my PostgreSQL and tested it with the ping command. The problem is that when I am trying to actually query a row I get \n\n    pq: relation "repositories" does not exist\n\nI am not sure the most relevant code to paste to help diagnose it. I know the table is case sensitive and I shouldn\'t be having this error due to user permissions since I am logging in as the Postgres user and creating tables as it as well.\n\nHere is the code trying to call it:\n\n    func queryRepos(repos *repositories) error {\n    \trows, err := Db.Query(`\n    \t\tSELECT\n    \t\t\tid,\n    \t\t\trepository_owner,\n    \t\t\trepository_name,\n    \t\t\ttotal_stars\n    \t\tFROM repositories\n    \t\tORDER BY total_stars DESC`)\n    \tif err != nil {\n    \t\treturn err\n    \t}\n    \tdefer rows.Close()\n    \tfor rows.Next() {\n    \t\trepo := repositorySummary{}\n    \t\terr = rows.Scan(\n    \t\t\t&amp;repo.ID,\n    \t\t\t&amp;repo.Owner,\n    \t\t\t&amp;repo.Name,\n    \t\t\t&amp;repo.TotalStars,\n    \t\t)\n    \t\tif err != nil {\n    \t\t\treturn err\n    \t\t}\n    \t\trepos.Repositories = append(repos.Repositories, repo)\n    \t}\n    \terr = rows.Err()\n    \tif err != nil {\n    \t\treturn err\n    \t}\n    \treturn nil\n    }\n\nwhich most of it is taken from [https://flaviocopes.com/golang-tutorial-rest-api/](https://flaviocopes.com/golang-tutorial-rest-api/) tutorial I am trying to replicate.',
          author_fullname: 't2_78b2p',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Trying to use PostgreSQL making WebAPI - pq: relation "repositories" does not exist',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/golang',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_aj4czc',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.golang',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548276769,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have connected successfully to my PostgreSQL and tested it with the ping command. The problem is that when I am trying to actually query a row I get &lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;pq: relation &amp;quot;repositories&amp;quot; does not exist\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;I am not sure the most relevant code to paste to help diagnose it. I know the table is case sensitive and I shouldn&amp;#39;t be having this error due to user permissions since I am logging in as the Postgres user and creating tables as it as well.&lt;/p&gt;\n\n&lt;p&gt;Here is the code trying to call it:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;func queryRepos(repos *repositories) error {\n    rows, err := Db.Query(`\n        SELECT\n            id,\n            repository_owner,\n            repository_name,\n            total_stars\n        FROM repositories\n        ORDER BY total_stars DESC`)\n    if err != nil {\n        return err\n    }\n    defer rows.Close()\n    for rows.Next() {\n        repo := repositorySummary{}\n        err = rows.Scan(\n            &amp;amp;repo.ID,\n            &amp;amp;repo.Owner,\n            &amp;amp;repo.Name,\n            &amp;amp;repo.TotalStars,\n        )\n        if err != nil {\n            return err\n        }\n        repos.Repositories = append(repos.Repositories, repo)\n    }\n    err = rows.Err()\n    if err != nil {\n        return err\n    }\n    return nil\n}\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;which most of it is taken from &lt;a href="https://flaviocopes.com/golang-tutorial-rest-api/"&gt;https://flaviocopes.com/golang-tutorial-rest-api/&lt;/a&gt; tutorial I am trying to replicate.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/3SvhfoFOPeQfJiX1yAHm9yT5B9_Ff266EQLwnAvZbx0.jpg?auto=webp&amp;s=a5ddf5fa4a8612ae400ebbe8930de64b365195e7',
                  width: 500,
                  height: 492
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/3SvhfoFOPeQfJiX1yAHm9yT5B9_Ff266EQLwnAvZbx0.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=2db07672c3c8f52edac1998d881493d02ac3c567',
                    width: 108,
                    height: 106
                  },
                  {
                    url:
                      'https://external-preview.redd.it/3SvhfoFOPeQfJiX1yAHm9yT5B9_Ff266EQLwnAvZbx0.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=02496eb3c03233bbbba1f7d3e34862e7f19910a4',
                    width: 216,
                    height: 212
                  },
                  {
                    url:
                      'https://external-preview.redd.it/3SvhfoFOPeQfJiX1yAHm9yT5B9_Ff266EQLwnAvZbx0.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=7d6b7ee7e39a1e2346650877a2a696eb51ffdd52',
                    width: 320,
                    height: 314
                  }
                ],
                variants: {},
                id: '_l-S95LpwlckGaUkSIhY5Bb2gP682i_rrNTqYXcXYeA'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2rc7j',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'aj4czc',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'AtooZ',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/golang/comments/aj4czc/trying_to_use_postgresql_making_webapi_pq/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/golang/comments/aj4czc/trying_to_use_postgresql_making_webapi_pq/',
          subreddit_subscribers: 72391,
          created_utc: 1548276769,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "Currently a [asp.net/mssql](https://asp.net/mssql) developer, looking into PostgreSQL.  Have no experience with REST,  but have used old services like WCF. My site will have complex analytics, but in the beginning it will have simple CRUD operations.\n\n&amp;#x200B;\n\nShould I just go with Postgrest or look into postgraphile? I'm thinking Postgrest would be good at this time since postgraphile is still RC.\n\n&amp;#x200B;\n\nDo I have to write functions/stored procedures for Postgrest? Or is it sort of similar to postgraphile?\n\n&amp;#x200B;\n\nAny recommended resources?\n\n&amp;#x200B;\n\nThank you!",
          author_fullname: 't2_1tbzh2ae',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'New to REST, should I learn PostGRest or PostGraphile?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9gq0n4',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 4,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 4,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1537231252,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Currently a &lt;a href="https://asp.net/mssql"&gt;asp.net/mssql&lt;/a&gt; developer, looking into PostgreSQL.  Have no experience with REST,  but have used old services like WCF. My site will have complex analytics, but in the beginning it will have simple CRUD operations.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Should I just go with Postgrest or look into postgraphile? I&amp;#39;m thinking Postgrest would be good at this time since postgraphile is still RC.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Do I have to write functions/stored procedures for Postgrest? Or is it sort of similar to postgraphile?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Any recommended resources?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thank you!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9gq0n4',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'TeslaMecca',
          num_crossposts: 0,
          num_comments: 12,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/9gq0n4/new_to_rest_should_i_learn_postgrest_or/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/9gq0n4/new_to_rest_should_i_learn_postgrest_or/',
          subreddit_subscribers: 9388,
          created_utc: 1537231252,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I have been happily using Google Cloud for over 6 years (MySQL and then PostgreSQL), and more recently switched to AWS due to certain GCP limitations. However, now we are running into multiple requirements that are not met by the AWS RDS. The primary limitation: no extension available for timeseries database (e.g. [https://www.timescale.com/](https://www.timescale.com/)).\n\nWhat are the main considerations that I should have prior to switching from a fully-managed database to a self-hosted instance?\n\nThis means dedicating time to setting up and overseeing the service:\n\n1. Setting up the server. We would be hosting PostgreSQL instance using GKE. Management of volumes and resource allocation is abstracted. We already have to do this for the other services. Low-effort.\n1. Configuring the instance. As far as my research goes, there aren't that many setting that need to be tweaked (https://www.revsys.com/writings/postgresql-performance.html). This seems relatively low-effort investment (2-4 hours research).\n1. Automating backups/ point-in-time recovery. This appears to be abstracted by the Barman https://www.pgbarman.org/index.html. Low-effort set up (6-10 hours).\n1. Health monitoring (https://pgdash.io/, https://pganalyze.com/).\n\nWhat am I not considering?",
          author_fullname: 't2_109xnk',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'What to considers before switching from managed PostgreSQL (Google Cloud/ AWS) to self-managed instance?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9xft16',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 15,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 15,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1542319430,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have been happily using Google Cloud for over 6 years (MySQL and then PostgreSQL), and more recently switched to AWS due to certain GCP limitations. However, now we are running into multiple requirements that are not met by the AWS RDS. The primary limitation: no extension available for timeseries database (e.g. &lt;a href="https://www.timescale.com/"&gt;https://www.timescale.com/&lt;/a&gt;).&lt;/p&gt;\n\n&lt;p&gt;What are the main considerations that I should have prior to switching from a fully-managed database to a self-hosted instance?&lt;/p&gt;\n\n&lt;p&gt;This means dedicating time to setting up and overseeing the service:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Setting up the server. We would be hosting PostgreSQL instance using GKE. Management of volumes and resource allocation is abstracted. We already have to do this for the other services. Low-effort.&lt;/li&gt;\n&lt;li&gt;Configuring the instance. As far as my research goes, there aren&amp;#39;t that many setting that need to be tweaked (&lt;a href="https://www.revsys.com/writings/postgresql-performance.html"&gt;https://www.revsys.com/writings/postgresql-performance.html&lt;/a&gt;). This seems relatively low-effort investment (2-4 hours research).&lt;/li&gt;\n&lt;li&gt;Automating backups/ point-in-time recovery. This appears to be abstracted by the Barman &lt;a href="https://www.pgbarman.org/index.html"&gt;https://www.pgbarman.org/index.html&lt;/a&gt;. Low-effort set up (6-10 hours).&lt;/li&gt;\n&lt;li&gt;Health monitoring (&lt;a href="https://pgdash.io/"&gt;https://pgdash.io/&lt;/a&gt;, &lt;a href="https://pganalyze.com/"&gt;https://pganalyze.com/&lt;/a&gt;).&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;What am I not considering?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/KksEItaQpnfu9HrByMswaILkBqfVoHWeff9ZZG5EDAQ.jpg?auto=webp&amp;s=6ac6e70e1564f2024fcaca93ac7e0d61959c151c',
                  width: 460,
                  height: 284
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/KksEItaQpnfu9HrByMswaILkBqfVoHWeff9ZZG5EDAQ.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=e321efd31220312e8e3dd7301602e51bd89f2dc2',
                    width: 108,
                    height: 66
                  },
                  {
                    url:
                      'https://external-preview.redd.it/KksEItaQpnfu9HrByMswaILkBqfVoHWeff9ZZG5EDAQ.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=92194bfbf1a1ba748094552312444a5943fb4864',
                    width: 216,
                    height: 133
                  },
                  {
                    url:
                      'https://external-preview.redd.it/KksEItaQpnfu9HrByMswaILkBqfVoHWeff9ZZG5EDAQ.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=5c323d8d65db7ad314fafd221cae16e756bcbaf4',
                    width: 320,
                    height: 197
                  }
                ],
                variants: {},
                id: 'X-3IotAgJaIa_1BRgYbZhyu4imKbx3H_jYh56sc9k7g'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9xft16',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'gajus0',
          num_crossposts: 0,
          num_comments: 10,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/9xft16/what_to_considers_before_switching_from_managed/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/9xft16/what_to_considers_before_switching_from_managed/',
          subreddit_subscribers: 9388,
          created_utc: 1542319430,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'AskComputerScience',
          selftext:
            "Hey friends,\n\nI've recently been tasked with migrating two separate MS Access databases into one PostgreSQL database. I'm relatively new in the industry and am going into this project almost alone, so I would love some help/tips. The main purpose of using MS Access is because the company needs to create reports and forms. However, we're reaching the 2 Gig max space in the MS Access backend, hence the migration.\n\nI've decided to go with PostgreSQL because it is open source (I won't need to purchase a license), however, that means it doesn't come in with built-in migration tools. Furthermore, I also need Access to serve as a front end to the database. I'm not sure how I would link the two and I need some guidance.\n\nI really want to do this the right way. What are some things I should look out for? How should I go about doing this? Any help is much appreciated.",
          author_fullname: 't2_cp07k',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Migrating/Linking MS Access to PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/AskComputerScience',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ainuzl',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.AskComputerScience',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1548170641,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hey friends,&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve recently been tasked with migrating two separate MS Access databases into one PostgreSQL database. I&amp;#39;m relatively new in the industry and am going into this project almost alone, so I would love some help/tips. The main purpose of using MS Access is because the company needs to create reports and forms. However, we&amp;#39;re reaching the 2 Gig max space in the MS Access backend, hence the migration.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve decided to go with PostgreSQL because it is open source (I won&amp;#39;t need to purchase a license), however, that means it doesn&amp;#39;t come in with built-in migration tools. Furthermore, I also need Access to serve as a front end to the database. I&amp;#39;m not sure how I would link the two and I need some guidance.&lt;/p&gt;\n\n&lt;p&gt;I really want to do this the right way. What are some things I should look out for? How should I go about doing this? Any help is much appreciated.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2shke',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ainuzl',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'MexicanPirate',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/AskComputerScience/comments/ainuzl/migratinglinking_ms_access_to_postgresql/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/AskComputerScience/comments/ainuzl/migratinglinking_ms_access_to_postgresql/',
          subreddit_subscribers: 30735,
          created_utc: 1548170641,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'removalbot',
          selftext:
            '[How to Install PostgreSQL on Debian 9](https://reddit.com//r/linux/comments/asy0i9)\n\n[Go1dfish undelete link](http://r.go1dfish.me/r/linux/comments/asy0i9)\n\n[unreddit undelete link](https://unreddit.com/r/linux/comments/asy0i9)\n\nAuthor: /u/rahulbagul',
          author_fullname: 't2_qyc0s',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            "02-22 01:43 - 'How to Install PostgreSQL on Debian 9' (linux4one.com) by /u/rahulbagul removed from /r/linux within 1334-1344min",
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/removalbot',
          hidden: false,
          pwls: 0,
          link_flair_css_class: 'submission-linux',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_atbg1i',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'restricted',
          ups: 1,
          domain: 'self.removalbot',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'submission-linux',
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550799783,
          link_flair_type: 'text',
          wls: 0,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;a href="https://reddit.com//r/linux/comments/asy0i9"&gt;How to Install PostgreSQL on Debian 9&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="http://r.go1dfish.me/r/linux/comments/asy0i9"&gt;Go1dfish undelete link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://unreddit.com/r/linux/comments/asy0i9"&gt;unreddit undelete link&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Author: &lt;a href="/u/rahulbagul"&gt;/u/rahulbagul&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'new',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          link_flair_template_id: 'c5a38a90-f3d0-11e7-931d-0ecfdf666e48',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_3a7hy',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'atbg1i',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'removalbot',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: 'no_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/removalbot/comments/atbg1i/0222_0143_how_to_install_postgresql_on_debian_9/',
          parent_whitelist_status: 'no_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/removalbot/comments/atbg1i/0222_0143_how_to_install_postgresql_on_debian_9/',
          subreddit_subscribers: 1266,
          created_utc: 1550799783,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'tableau',
          selftext:
            "Extremely new to Tableau and just looking to learn enough for personal projects. I have an extensive BI and SQL background professionally (Oracle, SQL Server, and Netezza but relatively new to PostgreSQL) and wondering what is the recommended way to get data out and into Tableau Desktop Public? I'm pulling dataset's into PostgreSQL, doing some cleaning and manipulation, and want to build some graphical reports off of the end product.\n\nIt seems I **can not** connect directly to the server with Public, so just looking for some advice on how to get the date from tables in PostgreSQL to Tableau.\n\nJust running PostgreSQL locally on my Mac. Thanks.",
          author_fullname: 't2_yo4gz',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Best way to get data from PostgreSQL to Tableau Desktop Public?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/tableau',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9jir13',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 5,
          domain: 'self.tableau',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 5,
          approved_by: null,
          thumbnail: 'self',
          edited: 1538103162,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1538098428,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Extremely new to Tableau and just looking to learn enough for personal projects. I have an extensive BI and SQL background professionally (Oracle, SQL Server, and Netezza but relatively new to PostgreSQL) and wondering what is the recommended way to get data out and into Tableau Desktop Public? I&amp;#39;m pulling dataset&amp;#39;s into PostgreSQL, doing some cleaning and manipulation, and want to build some graphical reports off of the end product.&lt;/p&gt;\n\n&lt;p&gt;It seems I &lt;strong&gt;can not&lt;/strong&gt; connect directly to the server with Public, so just looking for some advice on how to get the date from tables in PostgreSQL to Tableau.&lt;/p&gt;\n\n&lt;p&gt;Just running PostgreSQL locally on my Mac. Thanks.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2uolo',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9jir13',
          is_robot_indexable: true,
          report_reasons: null,
          author: '_work_redditor_',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/tableau/comments/9jir13/best_way_to_get_data_from_postgresql_to_tableau/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/tableau/comments/9jir13/best_way_to_get_data_from_postgresql_to_tableau/',
          subreddit_subscribers: 13391,
          created_utc: 1538098428,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'Managing high availability in your [PostgreSQL hosting](https://scalegrid.io/postgresql.html) is very important to ensuring your clusters maintain exceptional uptime and strong operational performance so your data is always available to your application. In an earlier blog post, we introduced you to [configuring high availability](https://scalegrid.io/blog/getting-started-with-postgresql-streaming-replication/) for PostgreSQL using streaming replication, and now we’re going to show you how to [best manage PostgreSQL high availability](https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-1/).\n\nThere are multiple tools available for managing the high availability of your PostgreSQL clusters using streaming replication. These solutions offer automatic failover capabilities, monitoring, replication, and other useful administrative tasks. Some of the prominent open source solutions include:\n\n1. **PostgreSQL Automatic Failover by** [**ClusterLabs**](https://www.clusterlabs.org/)\n2. **Replication Manager for PostgreSQL Clusters by** [**repmgr**](https://repmgr.org/) **(2ndQuadrant)**\n3. **Patroni by** [**Zalando**](https://github.com/zalando/patroni)\n\nEach of these tools provides their own way of managing the clusters. In our three-part series of posts on high availability for PostgreSQL, we’ll share an overview, the prerequisites, and the working and test results for each of these three tools. Here in Part 1, we’ll deep dive into the PostgreSQL Automatic Failover (PAF) solution by ClusterLabs.  \n\n\n## PostgreSQL Automatic Failover\n\n[PostgreSQL Automatic Failover](https://clusterlabs.github.io/PAF/) (PAF) is a high availability management solution for PostgreSQL by ClusterLabs. PAF makes use of the popular, industry-standard [Pacemaker](https://clusterlabs.org/pacemaker/) and [Corosync](https://clusterlabs.org/corosync.html) stack. With Pacemaker and Corosync together, you’ll be able to detect failures in the system and act accordingly.\n\nPacemaker is capable of managing many resources, and does so with the help of their [resource agents](https://github.com/ClusterLabs/resource-agents/). Resource agents then have the responsibility of handling a specific resource, how they should behave, and inform Pacemaker of their results.\n\nYour resource agent implementation must comply to the [Open Cluster Framework](https://clusterlabs.org/pacemaker/doc/en-US/Pacemaker/1.1/html/Pacemaker_Explained/s-resource-supported.html) (OCF) specification. This specification defines resource agents’ behavior and implementation of methods like stop, start, promote, demote and interaction with Pacemaker.\n\nPAF is an OCF resource agent for PostgreSQL written in Perl. Once your PostgreSQL cluster is built using internal streaming replication, PAF is able to expose to Pacemaker the current status of the PostgreSQL instance on each node: master, slave, stopped, catching up, etc.  \n\n\n## How it Works\n\nPAF communicates with Pacemaker regarding the cluster status and monitors the PostgreSQL functioning. In the event of a failure, it informs Pacemaker, and if there’s no chance of the current master being recovered, it will trigger an election between the current standby servers. With the robust Pacemaker in place, PAF will perform management actions like start, stop, monitor, and failover on all the PostgreSQL nodes.  \n\n\n### Are There Any Setup Requirements?\n\n* PAF supports [PostgreSQL version 9.3](https://www.postgresql.org/support/versioning/) and higher.\n* PAF is not responsible for PostgreSQL master/standby creation or its setup - you must create and setup streaming replication before using PAF.\n* PAF doesn’t edit any configuration of Postgres. However, it requires users to follow a few prerequisites like:\n   * Slave must be configured as hot standby.\n   * A recovery template file (default: &lt;postgresql\\_data\\_location&gt;/recovery.conf.pcmk) has to be provided with below parameters:\n      * **standby\\_mode** = on\n      * **recovery\\_target\\_timeline** = ‘latest’\n      * **primary\\_conninfo** must have the application\\_name parameter defined and set to local node name as in Pacemaker.\n* PAF exposes multiple parameters related to the management of a PostgreSQL resource. This can be configured to suit one’s requirement. Below are the parameters:\n   * **bindir:** location of the PostgreSQL binaries (default: /usr/bin)\n   * **pgdata:** location of the PGDATA of your instance (default: /var/lib/pgsql/data)\n   * **datadir:** path to the directory set in data\\_directory from your postgresql.conf file\n   * **pghost:** the socket directory or IP address to use to connect to the local instance (default: /tmp)\n   * **pgport:** the port to connect to the local instance (default: 5432)\n   * **recovery\\_template:** the local template that will be copied as the PGDATA/recovery.conf file. This template file must exists on all node (default: $PGDATA/recovery.conf.pcmk)\n   * **start\\_opts:** Additional arguments given to the Postgres process on startup. See “postgres –help” for available options. Useful when the postgresql.conf file is not in the data directory (PGDATA), eg.: -c config\\_file=/etc/postgresql/9.3/main/postgresql.conf\n   * **system\\_user:** the system owner of your instance’s process (default: postgres)\n   * **maxlag:** maximum lag allowed on a standby before we set a negative master score on it  \n\n\n## PAF Pros\n\n* PAF provides the user a free hands-on configuration and setup of PostgreSQL.\n* PAF can handle node failures and trigger elections when the master goes down.\n* Quorum behavior can be enforced in PAF.\n* It will provide a complete high availability management solution for the resource, including start, stop, and monitor, and handle network isolation scenarios.\n* It’s a distributed solution, which enables the management of any node from another node.  \n\n\n## PAF Cons\n\n* PAF doesn’t detect if a standby is misconfigured with an unknown or non-existent node in recovery configuration. Node will be shown as slave, even if standby is running without connecting to the master/cascading standby node.\n* Requires an extra port (Default 5405) to be opened for the Pacemaker and Corosync components’ communication using UDP.\n* Does not support NAT-based configuration.\n* No pg\\_rewind support.  \n\n\n## High Availability Test Scenarios\n\nWe conducted a few tests to determine the capability of the PostgreSQL HA management using PAF. All of these tests were run while the application was running and inserting data to the PostgreSQL database. The application was written using PostgreSQL Java [JDBC Driver](https://jdbc.postgresql.org/) leveraging the connection failover capability.  \n\n\n### Standby Server Tests\n\n1. **Kill the PostgreSQL process:** Pacemaker brought the PostgreSQL process back to running state. There was no disruption in writer application.\n2. **Stop the PostgreSQL process:** Pacemaker brought the PostgreSQL process back to running state. There was no disruption in writer application.\n3. **Reboot the server:** Standby server was marked offline initially. Once the server came up after reboot, PostgreSQL was started by Pacemaker and the server was marked as online. If fencing was enabled, the node wouldn’t have been added automatically to cluster. There was no disruption in writer application.\n4. **Stop the Pacemaker process:** It will stop the PostgreSQL process also, and the server will be marked offline. There was no disruption in writer application.  \n\n\n### Master/Primary Server Tests\n\n1. **Kill the PostgreSQL process:** Pacemaker brought the PostgreSQL process back to running state. Primary was recovered within the threshold time and, hence, election was not triggered. The writer application was down for about 26 seconds.\n2. **Stop the PostgreSQL process:** Pacemaker brought the PostgreSQL process back to running state. Primary was recovered within the threshold time and, hence, election was not triggered. There was a downtime in writer application for about 26 seconds.\n3. **Reboot the server:** Election was triggered by Pacemaker after the threshold time for which master was not available. The most eligible standby server was promoted as the new master. Once the old master came up after reboot, it was added back to the cluster as a standby. If fencing was enabled, the node wouldn’t have been added automatically to cluster. The writer application was down for about 26 seconds.\n4. **Stop the Pacemaker process:** It will stop the PostgreSQL process also and server will be marked offline. Election will be triggered and new master will be elected. There was downtime in writer application.  \n\n\n### Network Isolation Tests\n\n1. **Network isolate the standby server from other servers:** Corosync traffic was blocked on the standby server. The server was marked offline and PostgreSQL service was turned off due to quorum policy. There was no disruption in the writer application.\n2. **Network isolate the master server from other servers (split-brain scenario):** Corosync traffic was blocked on the master server. PostgreSQL service was turned off and master server was marked offline due to quorum policy. A new master was elected in the majority partition. There was a downtime in the writer application.  \n\n\n### Miscellaneous Tests\n\n1. **Degrade the cluster by turning off all the standby servers:** When all the standby servers went down, PostgreSQL service on master was stopped due to quorum policy. After this test, when all the standby servers was turned on, a new master was elected. There was a downtime in the writer application.\n2. **Randomly turn off all the servers one after the other, starting with the master, and bring them all back at same time:** All the servers came up and joined the cluster. New master was elected. There was a downtime in the writer application.\n\n## Inference\n\nPostgreSQL Automatic Failover provides several advantages in handling PostgreSQL high availability. PAF uses IP address failover instead of rebooting the standby to connect to the new master during a failover event. This proves advantageous in scenarios where the user does not want to restart the standby nodes. PAF also needs very little manual intervention and manages the overall health of all the resources. The only case where manual intervention is a requirement is in the event of a timeline divergence where the user can elect to use [pg\\_rewind](https://www.postgresql.org/docs/9.6/app-pgrewind.html).\n\nIn Part 1, we’ve discussed the capabilities and workings of PostgreSQL Automatic Failover (PAF) by ClusterLabs, and in Part 2, we’ll discuss the same high availability aspects using the Replication Manager for PostgreSQL clusters (repmgr) by 2ndQuadrant. Make sure to check back for Part 3, where we’ll also cover Patroni by Zalando and compare all three open source solutions to help you determine the best fit for your application.',
          author_fullname: 't2_zk15bgr',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Managing High Availability in PostgreSQL – Part I',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a0wz3f',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 25,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 25,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543339712,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Managing high availability in your &lt;a href="https://scalegrid.io/postgresql.html"&gt;PostgreSQL hosting&lt;/a&gt; is very important to ensuring your clusters maintain exceptional uptime and strong operational performance so your data is always available to your application. In an earlier blog post, we introduced you to &lt;a href="https://scalegrid.io/blog/getting-started-with-postgresql-streaming-replication/"&gt;configuring high availability&lt;/a&gt; for PostgreSQL using streaming replication, and now we’re going to show you how to &lt;a href="https://scalegrid.io/blog/managing-high-availability-in-postgresql-part-1/"&gt;best manage PostgreSQL high availability&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;There are multiple tools available for managing the high availability of your PostgreSQL clusters using streaming replication. These solutions offer automatic failover capabilities, monitoring, replication, and other useful administrative tasks. Some of the prominent open source solutions include:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;PostgreSQL Automatic Failover by&lt;/strong&gt; &lt;a href="https://www.clusterlabs.org/"&gt;&lt;strong&gt;ClusterLabs&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Replication Manager for PostgreSQL Clusters by&lt;/strong&gt; &lt;a href="https://repmgr.org/"&gt;&lt;strong&gt;repmgr&lt;/strong&gt;&lt;/a&gt; &lt;strong&gt;(2ndQuadrant)&lt;/strong&gt;&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Patroni by&lt;/strong&gt; &lt;a href="https://github.com/zalando/patroni"&gt;&lt;strong&gt;Zalando&lt;/strong&gt;&lt;/a&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Each of these tools provides their own way of managing the clusters. In our three-part series of posts on high availability for PostgreSQL, we’ll share an overview, the prerequisites, and the working and test results for each of these three tools. Here in Part 1, we’ll deep dive into the PostgreSQL Automatic Failover (PAF) solution by ClusterLabs.  &lt;/p&gt;\n\n&lt;h2&gt;PostgreSQL Automatic Failover&lt;/h2&gt;\n\n&lt;p&gt;&lt;a href="https://clusterlabs.github.io/PAF/"&gt;PostgreSQL Automatic Failover&lt;/a&gt; (PAF) is a high availability management solution for PostgreSQL by ClusterLabs. PAF makes use of the popular, industry-standard &lt;a href="https://clusterlabs.org/pacemaker/"&gt;Pacemaker&lt;/a&gt; and &lt;a href="https://clusterlabs.org/corosync.html"&gt;Corosync&lt;/a&gt; stack. With Pacemaker and Corosync together, you’ll be able to detect failures in the system and act accordingly.&lt;/p&gt;\n\n&lt;p&gt;Pacemaker is capable of managing many resources, and does so with the help of their &lt;a href="https://github.com/ClusterLabs/resource-agents/"&gt;resource agents&lt;/a&gt;. Resource agents then have the responsibility of handling a specific resource, how they should behave, and inform Pacemaker of their results.&lt;/p&gt;\n\n&lt;p&gt;Your resource agent implementation must comply to the &lt;a href="https://clusterlabs.org/pacemaker/doc/en-US/Pacemaker/1.1/html/Pacemaker_Explained/s-resource-supported.html"&gt;Open Cluster Framework&lt;/a&gt; (OCF) specification. This specification defines resource agents’ behavior and implementation of methods like stop, start, promote, demote and interaction with Pacemaker.&lt;/p&gt;\n\n&lt;p&gt;PAF is an OCF resource agent for PostgreSQL written in Perl. Once your PostgreSQL cluster is built using internal streaming replication, PAF is able to expose to Pacemaker the current status of the PostgreSQL instance on each node: master, slave, stopped, catching up, etc.  &lt;/p&gt;\n\n&lt;h2&gt;How it Works&lt;/h2&gt;\n\n&lt;p&gt;PAF communicates with Pacemaker regarding the cluster status and monitors the PostgreSQL functioning. In the event of a failure, it informs Pacemaker, and if there’s no chance of the current master being recovered, it will trigger an election between the current standby servers. With the robust Pacemaker in place, PAF will perform management actions like start, stop, monitor, and failover on all the PostgreSQL nodes.  &lt;/p&gt;\n\n&lt;h3&gt;Are There Any Setup Requirements?&lt;/h3&gt;\n\n&lt;ul&gt;\n&lt;li&gt;PAF supports &lt;a href="https://www.postgresql.org/support/versioning/"&gt;PostgreSQL version 9.3&lt;/a&gt; and higher.&lt;/li&gt;\n&lt;li&gt;PAF is not responsible for PostgreSQL master/standby creation or its setup - you must create and setup streaming replication before using PAF.&lt;/li&gt;\n&lt;li&gt;PAF doesn’t edit any configuration of Postgres. However, it requires users to follow a few prerequisites like:\n\n&lt;ul&gt;\n&lt;li&gt;Slave must be configured as hot standby.&lt;/li&gt;\n&lt;li&gt;A recovery template file (default: &amp;lt;postgresql\\_data\\_location&amp;gt;/recovery.conf.pcmk) has to be provided with below parameters:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;standby_mode&lt;/strong&gt; = on&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;recovery_target_timeline&lt;/strong&gt; = ‘latest’&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;primary_conninfo&lt;/strong&gt; must have the application_name parameter defined and set to local node name as in Pacemaker.&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;li&gt;PAF exposes multiple parameters related to the management of a PostgreSQL resource. This can be configured to suit one’s requirement. Below are the parameters:\n\n&lt;ul&gt;\n&lt;li&gt;&lt;strong&gt;bindir:&lt;/strong&gt; location of the PostgreSQL binaries (default: /usr/bin)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pgdata:&lt;/strong&gt; location of the PGDATA of your instance (default: /var/lib/pgsql/data)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;datadir:&lt;/strong&gt; path to the directory set in data_directory from your postgresql.conf file&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pghost:&lt;/strong&gt; the socket directory or IP address to use to connect to the local instance (default: /tmp)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;pgport:&lt;/strong&gt; the port to connect to the local instance (default: 5432)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;recovery_template:&lt;/strong&gt; the local template that will be copied as the PGDATA/recovery.conf file. This template file must exists on all node (default: $PGDATA/recovery.conf.pcmk)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;start_opts:&lt;/strong&gt; Additional arguments given to the Postgres process on startup. See “postgres –help” for available options. Useful when the postgresql.conf file is not in the data directory (PGDATA), eg.: -c config_file=/etc/postgresql/9.3/main/postgresql.conf&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;system_user:&lt;/strong&gt; the system owner of your instance’s process (default: postgres)&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;maxlag:&lt;/strong&gt; maximum lag allowed on a standby before we set a negative master score on it&lt;br/&gt;&lt;/li&gt;\n&lt;/ul&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;PAF Pros&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;PAF provides the user a free hands-on configuration and setup of PostgreSQL.&lt;/li&gt;\n&lt;li&gt;PAF can handle node failures and trigger elections when the master goes down.&lt;/li&gt;\n&lt;li&gt;Quorum behavior can be enforced in PAF.&lt;/li&gt;\n&lt;li&gt;It will provide a complete high availability management solution for the resource, including start, stop, and monitor, and handle network isolation scenarios.&lt;/li&gt;\n&lt;li&gt;It’s a distributed solution, which enables the management of any node from another node.&lt;br/&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;PAF Cons&lt;/h2&gt;\n\n&lt;ul&gt;\n&lt;li&gt;PAF doesn’t detect if a standby is misconfigured with an unknown or non-existent node in recovery configuration. Node will be shown as slave, even if standby is running without connecting to the master/cascading standby node.&lt;/li&gt;\n&lt;li&gt;Requires an extra port (Default 5405) to be opened for the Pacemaker and Corosync components’ communication using UDP.&lt;/li&gt;\n&lt;li&gt;Does not support NAT-based configuration.&lt;/li&gt;\n&lt;li&gt;No pg_rewind support.&lt;br/&gt;&lt;/li&gt;\n&lt;/ul&gt;\n\n&lt;h2&gt;High Availability Test Scenarios&lt;/h2&gt;\n\n&lt;p&gt;We conducted a few tests to determine the capability of the PostgreSQL HA management using PAF. All of these tests were run while the application was running and inserting data to the PostgreSQL database. The application was written using PostgreSQL Java &lt;a href="https://jdbc.postgresql.org/"&gt;JDBC Driver&lt;/a&gt; leveraging the connection failover capability.  &lt;/p&gt;\n\n&lt;h3&gt;Standby Server Tests&lt;/h3&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Kill the PostgreSQL process:&lt;/strong&gt; Pacemaker brought the PostgreSQL process back to running state. There was no disruption in writer application.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Stop the PostgreSQL process:&lt;/strong&gt; Pacemaker brought the PostgreSQL process back to running state. There was no disruption in writer application.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Reboot the server:&lt;/strong&gt; Standby server was marked offline initially. Once the server came up after reboot, PostgreSQL was started by Pacemaker and the server was marked as online. If fencing was enabled, the node wouldn’t have been added automatically to cluster. There was no disruption in writer application.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Stop the Pacemaker process:&lt;/strong&gt; It will stop the PostgreSQL process also, and the server will be marked offline. There was no disruption in writer application.&lt;br/&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3&gt;Master/Primary Server Tests&lt;/h3&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Kill the PostgreSQL process:&lt;/strong&gt; Pacemaker brought the PostgreSQL process back to running state. Primary was recovered within the threshold time and, hence, election was not triggered. The writer application was down for about 26 seconds.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Stop the PostgreSQL process:&lt;/strong&gt; Pacemaker brought the PostgreSQL process back to running state. Primary was recovered within the threshold time and, hence, election was not triggered. There was a downtime in writer application for about 26 seconds.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Reboot the server:&lt;/strong&gt; Election was triggered by Pacemaker after the threshold time for which master was not available. The most eligible standby server was promoted as the new master. Once the old master came up after reboot, it was added back to the cluster as a standby. If fencing was enabled, the node wouldn’t have been added automatically to cluster. The writer application was down for about 26 seconds.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Stop the Pacemaker process:&lt;/strong&gt; It will stop the PostgreSQL process also and server will be marked offline. Election will be triggered and new master will be elected. There was downtime in writer application.&lt;br/&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3&gt;Network Isolation Tests&lt;/h3&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Network isolate the standby server from other servers:&lt;/strong&gt; Corosync traffic was blocked on the standby server. The server was marked offline and PostgreSQL service was turned off due to quorum policy. There was no disruption in the writer application.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Network isolate the master server from other servers (split-brain scenario):&lt;/strong&gt; Corosync traffic was blocked on the master server. PostgreSQL service was turned off and master server was marked offline due to quorum policy. A new master was elected in the majority partition. There was a downtime in the writer application.&lt;br/&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h3&gt;Miscellaneous Tests&lt;/h3&gt;\n\n&lt;ol&gt;\n&lt;li&gt;&lt;strong&gt;Degrade the cluster by turning off all the standby servers:&lt;/strong&gt; When all the standby servers went down, PostgreSQL service on master was stopped due to quorum policy. After this test, when all the standby servers was turned on, a new master was elected. There was a downtime in the writer application.&lt;/li&gt;\n&lt;li&gt;&lt;strong&gt;Randomly turn off all the servers one after the other, starting with the master, and bring them all back at same time:&lt;/strong&gt; All the servers came up and joined the cluster. New master was elected. There was a downtime in the writer application.&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;h2&gt;Inference&lt;/h2&gt;\n\n&lt;p&gt;PostgreSQL Automatic Failover provides several advantages in handling PostgreSQL high availability. PAF uses IP address failover instead of rebooting the standby to connect to the new master during a failover event. This proves advantageous in scenarios where the user does not want to restart the standby nodes. PAF also needs very little manual intervention and manages the overall health of all the resources. The only case where manual intervention is a requirement is in the event of a timeline divergence where the user can elect to use &lt;a href="https://www.postgresql.org/docs/9.6/app-pgrewind.html"&gt;pg_rewind&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;In Part 1, we’ve discussed the capabilities and workings of PostgreSQL Automatic Failover (PAF) by ClusterLabs, and in Part 2, we’ll discuss the same high availability aspects using the Replication Manager for PostgreSQL clusters (repmgr) by 2ndQuadrant. Make sure to check back for Part 3, where we’ll also cover Patroni by Zalando and compare all three open source solutions to help you determine the best fit for your application.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/gsshWmJHyc3DsMriNbsG7sPHVicAgZL3X9VwGnlPlRs.jpg?auto=webp&amp;s=e6c13a7e6384b286cb086839cd43b5ca71bb8a6f',
                  width: 144,
                  height: 144
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/gsshWmJHyc3DsMriNbsG7sPHVicAgZL3X9VwGnlPlRs.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=b968f5bee63ea8b2ecd5e145d0f2ac788732fd7c',
                    width: 108,
                    height: 108
                  }
                ],
                variants: {},
                id: '1WFQzp-reGdBvfLkG0bJEduQM_f-ZDtl77YGS6YVeeg'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a0wz3f',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'ScaleGrid_DBaaS',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/a0wz3f/managing_high_availability_in_postgresql_part_i/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/a0wz3f/managing_high_availability_in_postgresql_part_i/',
          subreddit_subscribers: 9388,
          created_utc: 1543339712,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'learnprogramming',
          selftext:
            "Hi all,\n\nAll my coding experience comes from University so it's limited in real world application, I've build a website using Python/Flask with a PostgreSQL database but I have no idea what kind of server I'd need to host it and from there anything else that would be required, don't even know where to begin looking for this stuff so thought I would ask here.\n\nThanks for the help",
          author_fullname: 't2_6merg',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[Flask, PostgreSQL] How do you deploy/host a website and backend?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/learnprogramming',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ahn5d9',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.learnprogramming',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547912960,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi all,&lt;/p&gt;\n\n&lt;p&gt;All my coding experience comes from University so it&amp;#39;s limited in real world application, I&amp;#39;ve build a website using Python/Flask with a PostgreSQL database but I have no idea what kind of server I&amp;#39;d need to host it and from there anything else that would be required, don&amp;#39;t even know where to begin looking for this stuff so thought I would ask here.&lt;/p&gt;\n\n&lt;p&gt;Thanks for the help&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2r7yd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ahn5d9',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'woody4life237',
          num_crossposts: 0,
          num_comments: 2,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/learnprogramming/comments/ahn5d9/flask_postgresql_how_do_you_deployhost_a_website/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/learnprogramming/comments/ahn5d9/flask_postgresql_how_do_you_deployhost_a_website/',
          subreddit_subscribers: 923450,
          created_utc: 1547912960,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'learnprogramming',
          selftext:
            "I keep seeing people recommending MySQL for beginners. However, a lot of Udemy courses and startups seem to be using PostgreSQL as the trendier, high-growth SQL database of 2019. So I'm curious, if we had to learn one from the beginning for the first time, should we start with MySQL first or can we just learn PostgreSQL? Thoughts?",
          author_fullname: 't2_30a23c3o',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'MySQL vs. PostgreSQL for Beginners?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/learnprogramming',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_ao8tn7',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.learnprogramming',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1549574734,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I keep seeing people recommending MySQL for beginners. However, a lot of Udemy courses and startups seem to be using PostgreSQL as the trendier, high-growth SQL database of 2019. So I&amp;#39;m curious, if we had to learn one from the beginning for the first time, should we start with MySQL first or can we just learn PostgreSQL? Thoughts?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2r7yd',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'ao8tn7',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'NearbyAuthor',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/learnprogramming/comments/ao8tn7/mysql_vs_postgresql_for_beginners/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/learnprogramming/comments/ao8tn7/mysql_vs_postgresql_for_beginners/',
          subreddit_subscribers: 923450,
          created_utc: 1549574734,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "I'm currently using 9.3 and 9.5 on different machines (and it's not working as expected on 9.5, haven't tried on 9.3 yet). Not sure if it's general SQL or Postgres-specific.\n\n\nI'm trying to establish an exclusive row-level lock in one table before making inserts in another table.\n\n\nNormally, I would start a transaction, then would issue \"select ... for update\" on table1 for the specific row.\n\n\nThen, I would do the insert on table2. And then, I could commit the transaction.\n\n\nConcurrency is taken care of as long as all clients acquire the lock in the same order.\n\n\nAnd today I decided to try using the WITH clause to get a lock. But it's not working as I expect it to.\n\n\nI have something like this:\n\n\nwith t1lock as (select a from table1 where a=1 for update) insert into table2 select .... where not exists (select 1 from table2 where ...)\n\n\nIf the value of a in table 1 is the same, then I expect the WITH clause to acquire the lock and prevent the situation of multiple rows inserted into table2. But it's not working. I get duplicate rows in table2.\n\n\nThe \"not exists\" doesn't prevent it because in concurrently executed transactions, there aren't any rows in table2 yet that would result in the expression being true.\n\n\nBecause there is no lock.\n\n\nIt's as if the CTE in the WITH clause isn't getting executed. Is it because I don't reference t1lock anywhere in the main query? Does PostgreSQL optimize it away since it's not actually used?\n\n\n\n\n",
          author_fullname: 't2_37qjg',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'WITH clause and SELECT FOR UPDATE. Does it establish the lock?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9c2ogz',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1535804844,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I&amp;#39;m currently using 9.3 and 9.5 on different machines (and it&amp;#39;s not working as expected on 9.5, haven&amp;#39;t tried on 9.3 yet). Not sure if it&amp;#39;s general SQL or Postgres-specific.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m trying to establish an exclusive row-level lock in one table before making inserts in another table.&lt;/p&gt;\n\n&lt;p&gt;Normally, I would start a transaction, then would issue &amp;quot;select ... for update&amp;quot; on table1 for the specific row.&lt;/p&gt;\n\n&lt;p&gt;Then, I would do the insert on table2. And then, I could commit the transaction.&lt;/p&gt;\n\n&lt;p&gt;Concurrency is taken care of as long as all clients acquire the lock in the same order.&lt;/p&gt;\n\n&lt;p&gt;And today I decided to try using the WITH clause to get a lock. But it&amp;#39;s not working as I expect it to.&lt;/p&gt;\n\n&lt;p&gt;I have something like this:&lt;/p&gt;\n\n&lt;p&gt;with t1lock as (select a from table1 where a=1 for update) insert into table2 select .... where not exists (select 1 from table2 where ...)&lt;/p&gt;\n\n&lt;p&gt;If the value of a in table 1 is the same, then I expect the WITH clause to acquire the lock and prevent the situation of multiple rows inserted into table2. But it&amp;#39;s not working. I get duplicate rows in table2.&lt;/p&gt;\n\n&lt;p&gt;The &amp;quot;not exists&amp;quot; doesn&amp;#39;t prevent it because in concurrently executed transactions, there aren&amp;#39;t any rows in table2 yet that would result in the expression being true.&lt;/p&gt;\n\n&lt;p&gt;Because there is no lock.&lt;/p&gt;\n\n&lt;p&gt;It&amp;#39;s as if the CTE in the WITH clause isn&amp;#39;t getting executed. Is it because I don&amp;#39;t reference t1lock anywhere in the main query? Does PostgreSQL optimize it away since it&amp;#39;s not actually used?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9c2ogz',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'Aero72',
          num_crossposts: 0,
          num_comments: 6,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/9c2ogz/with_clause_and_select_for_update_does_it/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/9c2ogz/with_clause_and_select_for_update_does_it/',
          subreddit_subscribers: 9388,
          created_utc: 1535804844,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'u_postgreshelp',
          selftext:
            ' **PostgreSQL User Authentication types:**\n\n&amp;#x200B;\n\npeer Authentication\n\n&amp;#x200B;\n\nHere, as the database username and the OS username are same, the peer authentication method used OS credentials and logged in successfully.\n\n&amp;#x200B;\n\nHere you can find how to [set peer authentication in PostgreSQL](https://postgreshelp.com/postgresql-user-authentication-demystified/).\n\n&amp;#x200B;\n\nTrust Authentication\n\n&amp;#x200B;\n\nAllow the connection unconditionally. This method allows anyone that can connect to the PostgreSQL database server to login as any PostgreSQL user they wish, without the need for a password or any other authentication.\n\n&amp;#x200B;\n\nmd5 Authentication\n\n&amp;#x200B;\n\nRequire the client to supply a double-MD5-hashed password for authentication.\n\n&amp;#x200B;\n\nident Authentication\n\n&amp;#x200B;\n\nObtain the operating system user name of the client by contacting the ident server on the client and check if it matches the requested database user name. Ident authentication can only be used on TCP/IP connections. When specified for local connections, peer authentication will be used instead.\n\n&amp;#x200B;\n\n&amp;#x200B;',
          author_fullname: 't2_1zd68cla',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '4 types of PostgreSQL user authentication methods you must know',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'u/postgreshelp',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_atjbqq',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'user',
          ups: 1,
          domain: 'self.postgreshelp',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1550851677,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;&lt;strong&gt;PostgreSQL User Authentication types:&lt;/strong&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;peer Authentication&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Here, as the database username and the OS username are same, the peer authentication method used OS credentials and logged in successfully.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Here you can find how to &lt;a href="https://postgreshelp.com/postgresql-user-authentication-demystified/"&gt;set peer authentication in PostgreSQL&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Trust Authentication&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Allow the connection unconditionally. This method allows anyone that can connect to the PostgreSQL database server to login as any PostgreSQL user they wish, without the need for a password or any other authentication.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;md5 Authentication&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Require the client to supply a double-MD5-hashed password for authentication.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;ident Authentication&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Obtain the operating system user name of the client by contacting the ident server on the client and check if it matches the requested database user name. Ident authentication can only be used on TCP/IP connections. When specified for local connections, peer authentication will be used instead.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: 'qa',
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/FnSCnCa-mA2mtU2STt-rVbJbZIAChY5L7AD_fpMZDMA.jpg?auto=webp&amp;s=e4aa0c440a7b8bc11ebc9b35388e08f33e653fd9',
                  width: 300,
                  height: 200
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/FnSCnCa-mA2mtU2STt-rVbJbZIAChY5L7AD_fpMZDMA.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4ec44abfca97b391be4dc8c22b52839484a4c207',
                    width: 108,
                    height: 72
                  },
                  {
                    url:
                      'https://external-preview.redd.it/FnSCnCa-mA2mtU2STt-rVbJbZIAChY5L7AD_fpMZDMA.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=a0076fdfbebe2b85954a14a6edd4e0c458e91830',
                    width: 216,
                    height: 144
                  }
                ],
                variants: {},
                id: 'p1DG0b2l8R_UwQQ26rsfWCInc5AbkNWcobFZ3mNo3Qk'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_n6evk',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'atjbqq',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'postgreshelp',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/u_postgreshelp/comments/atjbqq/4_types_of_postgresql_user_authentication_methods/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/u_postgreshelp/comments/atjbqq/4_types_of_postgresql_user_authentication_methods/',
          subreddit_subscribers: 0,
          created_utc: 1550851677,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'docker',
          selftext:
            "I have an app that uses a small static database in PostgreSQL, using the `postgres:10-alpine` image and a volume mount for the data. This db needs to be refreshed every so often from an external source that the devs control.\n\nAt the moment, app and DB are managed with docker-compose. Devs can trigger a new deployment to prod (when tests pass), but they don't have access to prod themselves.\n\nFor deployment, we use a bash script that roughly does the following:\n\n1. stops and removes any existing instance of the postgres container using `docker-compose stop &amp;&amp; rm -f`\n2. deletes the entire data directory with `docker --rm -t ... rm -rf /var/lib/postgresql/data/`\n3. initializes the db data again running a one-off `docker run -d postgres -v init.sh:/docker-entrypoint-initdb.d/init.sh`\n4. stops and kills the one-off instance after sleeping for a few seconds (`docker stop &amp;&amp; docker rm`)\n5. brings up the docker-compose stack up again (`docker-compose up -d`)\n\nSteps 2 and 3 are needed because the new db might come with different roles/privileges, and it's easier to just blow everything up and start again with a clean slate than trying to figure out a diff to apply.\n\nThis process works but I find it a bit convoluted, and potentially prone to failure (if the sleep in step 4 is not enough, or needs to become too long when the db grows).\n\nI considered baking the db data into our own images `FROM postgres`, but I don't really feel like that would be ideal, particularly if the db becomes too big.\n\nCan anyone think of a better solution?\n",
          author_fullname: 't2_16x7kn',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Containerised PostgreSQL and re-initializing databases',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/docker',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a2myzf',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 12,
          domain: 'self.docker',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 12,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543827698,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have an app that uses a small static database in PostgreSQL, using the &lt;code&gt;postgres:10-alpine&lt;/code&gt; image and a volume mount for the data. This db needs to be refreshed every so often from an external source that the devs control.&lt;/p&gt;\n\n&lt;p&gt;At the moment, app and DB are managed with docker-compose. Devs can trigger a new deployment to prod (when tests pass), but they don&amp;#39;t have access to prod themselves.&lt;/p&gt;\n\n&lt;p&gt;For deployment, we use a bash script that roughly does the following:&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;stops and removes any existing instance of the postgres container using &lt;code&gt;docker-compose stop &amp;amp;&amp;amp; rm -f&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;deletes the entire data directory with &lt;code&gt;docker --rm -t ... rm -rf /var/lib/postgresql/data/&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;initializes the db data again running a one-off &lt;code&gt;docker run -d postgres -v init.sh:/docker-entrypoint-initdb.d/init.sh&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;stops and kills the one-off instance after sleeping for a few seconds (&lt;code&gt;docker stop &amp;amp;&amp;amp; docker rm&lt;/code&gt;)&lt;/li&gt;\n&lt;li&gt;brings up the docker-compose stack up again (&lt;code&gt;docker-compose up -d&lt;/code&gt;)&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;Steps 2 and 3 are needed because the new db might come with different roles/privileges, and it&amp;#39;s easier to just blow everything up and start again with a clean slate than trying to figure out a diff to apply.&lt;/p&gt;\n\n&lt;p&gt;This process works but I find it a bit convoluted, and potentially prone to failure (if the sleep in step 4 is not enough, or needs to become too long when the db grows).&lt;/p&gt;\n\n&lt;p&gt;I considered baking the db data into our own images &lt;code&gt;FROM postgres&lt;/code&gt;, but I don&amp;#39;t really feel like that would be ideal, particularly if the db becomes too big.&lt;/p&gt;\n\n&lt;p&gt;Can anyone think of a better solution?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2y00f',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a2myzf',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'egbur',
          num_crossposts: 0,
          num_comments: 8,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/docker/comments/a2myzf/containerised_postgresql_and_reinitializing/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/docker/comments/a2myzf/containerised_postgresql_and_reinitializing/',
          subreddit_subscribers: 62072,
          created_utc: 1543827698,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'jobbit',
          selftext:
            'Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.\n\nOur company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com',
          author_fullname: 't2_w2zi7nf',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[HIRING] PostgreSQL Database Programmer and Administrator (DBA) - Onsite at Binary.com',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/jobbit',
          hidden: false,
          pwls: null,
          link_flair_css_class: 'fh-hiring',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_agk3q2',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.jobbit',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'Hiring',
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547636861,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.&lt;/p&gt;\n\n&lt;p&gt;Our company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: &lt;a href="https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com"&gt;https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?auto=webp&amp;s=67c865a40b05815e87591d6f10fb5e4c105bd846',
                  width: 270,
                  height: 260
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4cfe943e3bec26711df6717052ab1159bd46b3f7',
                    width: 108,
                    height: 104
                  },
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e3165ab639d9b3524704da6c7f95b1389031d0f',
                    width: 216,
                    height: 208
                  }
                ],
                variants: {},
                id: 'dxnxd3q4PZYSIGsfiZdYOH8bR7vTfQyRSQbIYAppT3M'
              }
            ],
            enabled: false
          },
          media_only: false,
          link_flair_template_id: '053fdcb8-7815-11e2-8c82-12313d166255',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qzdl',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'agk3q2',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'CryptoJobsBlockchain',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/jobbit/comments/agk3q2/hiring_postgresql_database_programmer_and/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/jobbit/comments/agk3q2/hiring_postgresql_database_programmer_and/',
          subreddit_subscribers: 13244,
          created_utc: 1547636861,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            "So almost five years ago, I wrote a little rant about how [unpopular PostgreSQL was in my area](https://www.reddit.com/r/PostgreSQL/comments/1romfa/rant_why_cant_more_companies_use_postgresql/).  Basically, I was trying to start a new project with Postgres as my backend, which was axed and I had to revert back to SQL Server.\n\nI have since moved to a different area and have happily used Postgres in other jobs (including my current job).  In fact, in my current area, Postgres is pretty popular with a lot of companies, so I hadn't thought about it in a while.  But today, I ran across this [popularity trend](https://db-engines.com/en/ranking_trend/system/PostgreSQL) for Postgres, and I was pretty surprised at how much of popularity gain my favorite database has.\n\nJust for curiosity, I went and searched for \"PostgreSQL\" in indeed.com at my previous location, and the results jumped to ~10 pages of results.  At the time of my rant, there were 4 results on Indeed.  Unless the job market exploded in that area, Postgres is definitely growing in popularity there.\n\nNow I'm not entirely sure of the methodology to calculate the popularity index of Postgres in the chart above, but it certainly does SEEM like it's more popular than 5 years ago.  If true, any theories as to why Postgres got even more popular now?\n\nA few of my thoughts.\n\n* MySQL was acquired by Oracle in that time period, and the MySQL/MariaDB fork might have left some people with a bad taste in their mouth.\n* SQL Server licensing from 2008 to 2012, I believe, changed to a per core pricing structure (read: more expensive).\n* Of course, Postgres could just be kicking ass.",
          author_fullname: 't2_bxiam',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Is PostgreSQL more popular now?',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_96meqr',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: '',
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: 'n00b',
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1534044914,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;So almost five years ago, I wrote a little rant about how &lt;a href="https://www.reddit.com/r/PostgreSQL/comments/1romfa/rant_why_cant_more_companies_use_postgresql/"&gt;unpopular PostgreSQL was in my area&lt;/a&gt;.  Basically, I was trying to start a new project with Postgres as my backend, which was axed and I had to revert back to SQL Server.&lt;/p&gt;\n\n&lt;p&gt;I have since moved to a different area and have happily used Postgres in other jobs (including my current job).  In fact, in my current area, Postgres is pretty popular with a lot of companies, so I hadn&amp;#39;t thought about it in a while.  But today, I ran across this &lt;a href="https://db-engines.com/en/ranking_trend/system/PostgreSQL"&gt;popularity trend&lt;/a&gt; for Postgres, and I was pretty surprised at how much of popularity gain my favorite database has.&lt;/p&gt;\n\n&lt;p&gt;Just for curiosity, I went and searched for &amp;quot;PostgreSQL&amp;quot; in indeed.com at my previous location, and the results jumped to ~10 pages of results.  At the time of my rant, there were 4 results on Indeed.  Unless the job market exploded in that area, Postgres is definitely growing in popularity there.&lt;/p&gt;\n\n&lt;p&gt;Now I&amp;#39;m not entirely sure of the methodology to calculate the popularity index of Postgres in the chart above, but it certainly does SEEM like it&amp;#39;s more popular than 5 years ago.  If true, any theories as to why Postgres got even more popular now?&lt;/p&gt;\n\n&lt;p&gt;A few of my thoughts.&lt;/p&gt;\n\n&lt;ul&gt;\n&lt;li&gt;MySQL was acquired by Oracle in that time period, and the MySQL/MariaDB fork might have left some people with a bad taste in their mouth.&lt;/li&gt;\n&lt;li&gt;SQL Server licensing from 2008 to 2012, I believe, changed to a per core pricing structure (read: more expensive).&lt;/li&gt;\n&lt;li&gt;Of course, Postgres could just be kicking ass.&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: 'n00b',
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '96meqr',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'flipstables',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: 'dark',
          permalink:
            '/r/PostgreSQL/comments/96meqr/is_postgresql_more_popular_now/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/96meqr/is_postgresql_more_popular_now/',
          subreddit_subscribers: 9388,
          created_utc: 1534044914,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'node',
          selftext:
            'Hi, I\'m trying to run NodeJS in my instance in AWS. \n\nwhenever I tries to run the server, I got this error. I assume its because of PostgreSQL. \n\n&amp;#x200B;\n\n`"connection error Error: connect EINVAL 0.0.21.56:5432 - Local (`[`0.0.0.0:0`](https://0.0.0.0:0)`)"`\n\n&amp;#x200B;\n\nwhat should I do?',
          author_fullname: 't2_16du2p',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Wired error, zero experience with NodeJS',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/node',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9g97na',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.node',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1537088189,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi, I&amp;#39;m trying to run NodeJS in my instance in AWS. &lt;/p&gt;\n\n&lt;p&gt;whenever I tries to run the server, I got this error. I assume its because of PostgreSQL. &lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;&lt;code&gt;&amp;quot;connection error Error: connect EINVAL 0.0.21.56:5432 - Local (&lt;/code&gt;&lt;a href="https://0.0.0.0:0"&gt;&lt;code&gt;0.0.0.0:0&lt;/code&gt;&lt;/a&gt;&lt;code&gt;)&amp;quot;&lt;/code&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;what should I do?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2reca',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9g97na',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'imohd23',
          num_crossposts: 0,
          num_comments: 7,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/node/comments/9g97na/wired_error_zero_experience_with_nodejs/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/node/comments/9g97na/wired_error_zero_experience_with_nodejs/',
          subreddit_subscribers: 109433,
          created_utc: 1537088189,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            'As per AWS guideline we can upgrade minor version of Aurora PostgreSQL automatically by keeping **Auto Minor Version Upgrade** to **true**.I wanted to do it manually . can anyone please help me out in this.What all the steps that needs to be followed for manual engine version upgrade.',
          author_fullname: 't2_1fi8hq40',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'Aurora PostgreSQL minor version upgrade manually',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_9l1fq7',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 2,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 2,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1538575392,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;As per AWS guideline we can upgrade minor version of Aurora PostgreSQL automatically by keeping &lt;strong&gt;Auto Minor Version Upgrade&lt;/strong&gt; to &lt;strong&gt;true&lt;/strong&gt;.I wanted to do it manually . can anyone please help me out in this.What all the steps that needs to be followed for manual engine version upgrade.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '9l1fq7',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'mahesh_varak89',
          num_crossposts: 0,
          num_comments: 4,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/9l1fq7/aurora_postgresql_minor_version_upgrade_manually/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/9l1fq7/aurora_postgresql_minor_version_upgrade_manually/',
          subreddit_subscribers: 66268,
          created_utc: 1538575392,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'PostgreSQL',
          selftext:
            'After added Datadog agent for postgresql, restarted Datadog. Reference:\n\nhttps://docs.datadoghq.com/integrations/postgres/\n\nThen check postgresql status, it\'s fine. But can\'t find in the process:\n\n    postgres@ip-1-2-3-4:~$ sudo systemctl status postgresql\n    ● postgresql.service - PostgreSQL RDBMS\n       Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)\n       Active: active (exited) since Mon 2018-06-18 06:21:05 UTC; 56s ago\n      Process: 15863 ExecStart=/bin/true (code=exited, status=0/SUCCESS)\n     Main PID: 15863 (code=exited, status=0/SUCCESS)\n\n    Jun 18 06:21:05 ip-1-2-3-4 systemd[1]: Starting PostgreSQL RDBMS...\n    Jun 18 06:21:05 ip-1-2-3-4 systemd[1]: Started PostgreSQL RDBMS.\n    postgres@ip-1-2-3-4:~$ psql\n    psql: could not connect to server: No such file or directory\n        Is the server running locally and accepting\n        connections on Unix domain socket "/var/run/postgresql/.s.PGSQL.5432"?\n\nAlso tried to restart postgresql:\n\n    $ sudo service postgresql restart\n\nThe same result.',
          author_fullname: 't2_18zxhugz',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            "Why postgresql can't been accessed after added Datadog agent?",
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/PostgreSQL',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_8rxdgx',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 0,
          domain: 'self.PostgreSQL',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 0,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1529303480,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;After added Datadog agent for postgresql, restarted Datadog. Reference:&lt;/p&gt;\n\n&lt;p&gt;&lt;a href="https://docs.datadoghq.com/integrations/postgres/"&gt;https://docs.datadoghq.com/integrations/postgres/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;Then check postgresql status, it&amp;#39;s fine. But can&amp;#39;t find in the process:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;postgres@ip-1-2-3-4:~$ sudo systemctl status postgresql\n● postgresql.service - PostgreSQL RDBMS\n   Loaded: loaded (/lib/systemd/system/postgresql.service; enabled; vendor preset: enabled)\n   Active: active (exited) since Mon 2018-06-18 06:21:05 UTC; 56s ago\n  Process: 15863 ExecStart=/bin/true (code=exited, status=0/SUCCESS)\n Main PID: 15863 (code=exited, status=0/SUCCESS)\n\nJun 18 06:21:05 ip-1-2-3-4 systemd[1]: Starting PostgreSQL RDBMS...\nJun 18 06:21:05 ip-1-2-3-4 systemd[1]: Started PostgreSQL RDBMS.\npostgres@ip-1-2-3-4:~$ psql\npsql: could not connect to server: No such file or directory\n    Is the server running locally and accepting\n    connections on Unix domain socket &amp;quot;/var/run/postgresql/.s.PGSQL.5432&amp;quot;?\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Also tried to restart postgresql:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;$ sudo service postgresql restart\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;The same result.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qvw7',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '8rxdgx',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'v_jingqiang_zhang',
          num_crossposts: 0,
          num_comments: 12,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/PostgreSQL/comments/8rxdgx/why_postgresql_cant_been_accessed_after_added/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/PostgreSQL/comments/8rxdgx/why_postgresql_cant_been_accessed_after_added/',
          subreddit_subscribers: 9388,
          created_utc: 1529303480,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'cryptoaquarium',
          selftext:
            'Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.\n\nOur company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com',
          author_fullname: 't2_w2zi7nf',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[HIRING] PostgreSQL Database Programmer and Administrator (DBA) - Onsite at Binary.com',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/cryptoaquarium',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_agk3nw',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.cryptoaquarium',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547636846,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.&lt;/p&gt;\n\n&lt;p&gt;Our company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: &lt;a href="https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com"&gt;https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?auto=webp&amp;s=67c865a40b05815e87591d6f10fb5e4c105bd846',
                  width: 270,
                  height: 260
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4cfe943e3bec26711df6717052ab1159bd46b3f7',
                    width: 108,
                    height: 104
                  },
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e3165ab639d9b3524704da6c7f95b1389031d0f',
                    width: 216,
                    height: 208
                  }
                ],
                variants: {},
                id: 'dxnxd3q4PZYSIGsfiZdYOH8bR7vTfQyRSQbIYAppT3M'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_3lske',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'agk3nw',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'CryptoJobsBlockchain',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/cryptoaquarium/comments/agk3nw/hiring_postgresql_database_programmer_and/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/cryptoaquarium/comments/agk3nw/hiring_postgresql_database_programmer_and/',
          subreddit_subscribers: 208,
          created_utc: 1547636846,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'Jobs4Tokens',
          selftext:
            'Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.\n\nOur company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com',
          author_fullname: 't2_w2zi7nf',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            '[HIRING] PostgreSQL Database Programmer and Administrator (DBA) - Onsite at Binary.com',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/Jobs4Tokens',
          hidden: false,
          pwls: null,
          link_flair_css_class: '',
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_agk3p2',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 1,
          domain: 'self.Jobs4Tokens',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: 'HIRING',
          can_mod_post: false,
          score: 1,
          approved_by: null,
          thumbnail: 'self',
          edited: false,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1547636854,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Binary.com is seeking a driven, proactive, and highly-experienced PostgreSQL Database Programmer/Administrator. You will plan, install, and maintain database systems to ensure the integrity and seamless flow of information for our high-traffic binary options trading platform.\nThis also includes writing and reviewing code for the database systems.&lt;/p&gt;\n\n&lt;p&gt;Our company\nBinary Group Services Sdn. Bhd. is a wholly owned subsidiary of Binary Ltd., an international group of companies that manages Binary.com, the award-winning leader in online binary options trading.\nApply here: &lt;a href="https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com"&gt;https://crypto.jobs/jobs/postgresql-database-programmer-and-administrator-dba-onsite-at-binary-com&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: true,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?auto=webp&amp;s=67c865a40b05815e87591d6f10fb5e4c105bd846',
                  width: 270,
                  height: 260
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=4cfe943e3bec26711df6717052ab1159bd46b3f7',
                    width: 108,
                    height: 104
                  },
                  {
                    url:
                      'https://external-preview.redd.it/q8jsYhsmR_b25Rw9zJrfM9QJWIeik0plcYgOKCgRfMw.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=7e3165ab639d9b3524704da6c7f95b1389031d0f',
                    width: 216,
                    height: 208
                  }
                ],
                variants: {},
                id: 'dxnxd3q4PZYSIGsfiZdYOH8bR7vTfQyRSQbIYAppT3M'
              }
            ],
            enabled: false
          },
          media_only: false,
          link_flair_template_id: '0bed88d4-57b8-11e8-bd92-0e3ec9e234f8',
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_j6bms',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '#ff66ac',
          id: 'agk3p2',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'CryptoJobsBlockchain',
          num_crossposts: 0,
          num_comments: 0,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/Jobs4Tokens/comments/agk3p2/hiring_postgresql_database_programmer_and/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/Jobs4Tokens/comments/agk3p2/hiring_postgresql_database_programmer_and/',
          subreddit_subscribers: 78,
          created_utc: 1547636854,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'aws',
          selftext:
            "I have a need to automate copying certain tables from a Redshift cluster to an Aurora PostgreSQL database on a daily basis. Up until now, I have been utilising a [Redshift/Aurora dblink](https://aws.amazon.com/blogs/big-data/join-amazon-redshift-and-amazon-rds-postgresql-with-dblink/) however this is creating a significant strain on Redshift resources and queues due to the size of the tables (some are &gt;100 million records).\n\nThe other approach I have played with is first unloading the data from Redshift to S3, copying the CSV files locally, then bulk loading the Aurora tables using the [COPY](https://www.postgresql.org/docs/9.2/sql-copy.html) command (note: Aurora PostgreSQL doesn't support COPY from S3) . While this works okay, having to first copy the files locally is annoying and means I have to allocate a lot of disk to temporarily store this data.\n\n&amp;#x200B;\n\nRedshift is not currently a supported source for AWS DMS, so this rules out using that tool. Are there any alternative approaches, or third-party tools that I could use to do this automated data transfer?\n\n&amp;#x200B;\n\nP.S. AWS have said that they will add loading data from S3 to Aurora PostgreSQL (see [here](https://www.reddit.com/r/aws/comments/8lauiw/we_are_the_amazon_aurora_team_ask_the_experts/dzinjp5/)), but there is no date on when this feature will be shipped.\n\n&amp;#x200B;\n\nThanks!",
          author_fullname: 't2_g1q9r',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title:
            'Looking for advice: Automated data transfer from Redshift to Aurora PostgreSQL',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/aws',
          hidden: false,
          pwls: 6,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_a1hwni',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 6,
          domain: 'self.aws',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 6,
          approved_by: null,
          thumbnail: 'self',
          edited: 1543502934,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          post_hint: 'self',
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1543502621,
          link_flair_type: 'text',
          wls: 6,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;I have a need to automate copying certain tables from a Redshift cluster to an Aurora PostgreSQL database on a daily basis. Up until now, I have been utilising a &lt;a href="https://aws.amazon.com/blogs/big-data/join-amazon-redshift-and-amazon-rds-postgresql-with-dblink/"&gt;Redshift/Aurora dblink&lt;/a&gt; however this is creating a significant strain on Redshift resources and queues due to the size of the tables (some are &amp;gt;100 million records).&lt;/p&gt;\n\n&lt;p&gt;The other approach I have played with is first unloading the data from Redshift to S3, copying the CSV files locally, then bulk loading the Aurora tables using the &lt;a href="https://www.postgresql.org/docs/9.2/sql-copy.html"&gt;COPY&lt;/a&gt; command (note: Aurora PostgreSQL doesn&amp;#39;t support COPY from S3) . While this works okay, having to first copy the files locally is annoying and means I have to allocate a lot of disk to temporarily store this data.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Redshift is not currently a supported source for AWS DMS, so this rules out using that tool. Are there any alternative approaches, or third-party tools that I could use to do this automated data transfer?&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;P.S. AWS have said that they will add loading data from S3 to Aurora PostgreSQL (see &lt;a href="https://www.reddit.com/r/aws/comments/8lauiw/we_are_the_amazon_aurora_team_ask_the_experts/dzinjp5/"&gt;here&lt;/a&gt;), but there is no date on when this feature will be shipped.&lt;/p&gt;\n\n&lt;p&gt;&amp;#x200B;&lt;/p&gt;\n\n&lt;p&gt;Thanks!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: false,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          preview: {
            images: [
              {
                source: {
                  url:
                    'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?auto=webp&amp;s=41a98eed0f6078b980bb2c1ca71d752247d7a44c',
                  width: 1260,
                  height: 630
                },
                resolutions: [
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=108&amp;crop=smart&amp;auto=webp&amp;s=891ad648e75ca6a716217c545385c692a72c3875',
                    width: 108,
                    height: 54
                  },
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=216&amp;crop=smart&amp;auto=webp&amp;s=ce7902687ecdaf8519b239bc130e5e2b0a73ab4b',
                    width: 216,
                    height: 108
                  },
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=320&amp;crop=smart&amp;auto=webp&amp;s=ad7760a23c3d88fc0655ed074e70005ee8ee2881',
                    width: 320,
                    height: 160
                  },
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=640&amp;crop=smart&amp;auto=webp&amp;s=7ad98a63f460712b8edc2748414be2c7c68dff34',
                    width: 640,
                    height: 320
                  },
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=960&amp;crop=smart&amp;auto=webp&amp;s=29da20cf8a19d14c65be529e21a87afe93825d38',
                    width: 960,
                    height: 480
                  },
                  {
                    url:
                      'https://external-preview.redd.it/BIDyM8M8TI4RKfrczE64d8Vyz8lxC3vPF_hG6dCBAiE.jpg?width=1080&amp;crop=smart&amp;auto=webp&amp;s=670c3f32c7bd9b36f12f7e48acb1767071c7002a',
                    width: 1080,
                    height: 540
                  }
                ],
                variants: {},
                id: 'Dt8q1V5CtU3c9gKetu94T4EF8f-7bAXEtyelmoEdK-E'
              }
            ],
            enabled: false
          },
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qh84',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: 'a1hwni',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'fez_28',
          num_crossposts: 0,
          num_comments: 5,
          send_replies: true,
          whitelist_status: 'all_ads',
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink:
            '/r/aws/comments/a1hwni/looking_for_advice_automated_data_transfer_from/',
          parent_whitelist_status: 'all_ads',
          stickied: false,
          url:
            'https://www.reddit.com/r/aws/comments/a1hwni/looking_for_advice_automated_data_transfer_from/',
          subreddit_subscribers: 66268,
          created_utc: 1543502621,
          media: null,
          is_video: false
        }
      },
      {
        kind: 't3',
        data: {
          approved_at_utc: null,
          subreddit: 'SQLServer',
          selftext:
            "Hi All,\n\nIs it advisable to use express for a small business data manipulation? \n\nThey have no need for an app to be connected everything will be uploaded and insert ed manually I'd just like to have sprocs running on some of the data to clear and verify it.\n\nDoes Express even have the SQL server agent? \n\nUpdate: thank you for all of you responses :)\n\nUpdate 2: Will try both (Express-PostgreSQL) at the same time with test data and let you know how I get on!! ",
          author_fullname: 't2_13dtb2',
          saved: false,
          mod_reason_title: null,
          gilded: 0,
          clicked: false,
          title: 'SQL Server Express',
          link_flair_richtext: [],
          subreddit_name_prefixed: 'r/SQLServer',
          hidden: false,
          pwls: null,
          link_flair_css_class: null,
          downs: 0,
          thumbnail_height: null,
          hide_score: false,
          name: 't3_8gx9dw',
          quarantine: false,
          link_flair_text_color: 'dark',
          author_flair_background_color: null,
          subreddit_type: 'public',
          ups: 11,
          domain: 'self.SQLServer',
          media_embed: {},
          thumbnail_width: null,
          author_flair_template_id: null,
          is_original_content: false,
          user_reports: [],
          secure_media: null,
          is_reddit_media_domain: false,
          is_meta: false,
          category: null,
          secure_media_embed: {},
          link_flair_text: null,
          can_mod_post: false,
          score: 11,
          approved_by: null,
          thumbnail: 'self',
          edited: 1525450849,
          author_flair_css_class: null,
          author_flair_richtext: [],
          gildings: {
            gid_1: 0,
            gid_2: 0,
            gid_3: 0
          },
          content_categories: null,
          is_self: true,
          mod_note: null,
          created: 1525416289,
          link_flair_type: 'text',
          wls: null,
          banned_by: null,
          author_flair_type: 'text',
          contest_mode: false,
          selftext_html:
            '&lt;!-- SC_OFF --&gt;&lt;div class="md"&gt;&lt;p&gt;Hi All,&lt;/p&gt;\n\n&lt;p&gt;Is it advisable to use express for a small business data manipulation? &lt;/p&gt;\n\n&lt;p&gt;They have no need for an app to be connected everything will be uploaded and insert ed manually I&amp;#39;d just like to have sprocs running on some of the data to clear and verify it.&lt;/p&gt;\n\n&lt;p&gt;Does Express even have the SQL server agent? &lt;/p&gt;\n\n&lt;p&gt;Update: thank you for all of you responses :)&lt;/p&gt;\n\n&lt;p&gt;Update 2: Will try both (Express-PostgreSQL) at the same time with test data and let you know how I get on!! &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;',
          likes: null,
          suggested_sort: null,
          banned_at_utc: null,
          view_count: null,
          archived: true,
          no_follow: false,
          is_crosspostable: false,
          pinned: false,
          over_18: false,
          media_only: false,
          can_gild: false,
          spoiler: false,
          locked: false,
          author_flair_text: null,
          visited: false,
          num_reports: null,
          distinguished: null,
          subreddit_id: 't5_2qlzx',
          mod_reason_by: null,
          removal_reason: null,
          link_flair_background_color: '',
          id: '8gx9dw',
          is_robot_indexable: true,
          report_reasons: null,
          author: 'ConnorMajorAy',
          num_crossposts: 0,
          num_comments: 19,
          send_replies: true,
          whitelist_status: null,
          mod_reports: [],
          author_patreon_flair: false,
          author_flair_text_color: null,
          permalink: '/r/SQLServer/comments/8gx9dw/sql_server_express/',
          parent_whitelist_status: null,
          stickied: false,
          url:
            'https://www.reddit.com/r/SQLServer/comments/8gx9dw/sql_server_express/',
          subreddit_subscribers: 17302,
          created_utc: 1525416289,
          media: null,
          is_video: false
        }
      }
    ],
    before: null
  }
};
